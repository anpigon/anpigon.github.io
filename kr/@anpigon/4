<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=2">
<meta name="theme-color" content="#222">
<meta name="generator" content="Hexo 5.4.0">
  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32-next.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/images/favicon-16x16-next.png">
  <link rel="mask-icon" href="/images/logo.svg" color="#222">
  <meta name="google-site-verification" content="yfKOiBPD8WlKH3NPG_CG1zr4MsCgCG1YVdGKhMS2CKc">

<link rel="stylesheet" href="/css/main.css">

<link rel="stylesheet" href="//fonts.googleapis.com/css?family=Lato:300,300italic,400,400italic,700,700italic|Noto Serif KR:300,300italic,400,400italic,700,700italic&display=swap&subset=latin,latin-ext">
<link rel="stylesheet" href="/lib/font-awesome/css/font-awesome.min.css">
  <link rel="stylesheet" href="//cdn.jsdelivr.net/gh/fancyapps/fancybox@3/dist/jquery.fancybox.min.css">


<script id="hexo-configurations">
  var NexT = window.NexT || {};
  var CONFIG = {
    root: '/',
    scheme: 'Gemini',
    version: '7.4.2',
    exturl: false,
    sidebar: {"position":"left","display":"post","offset":12,"onmobile":false},
    copycode: {"enable":false,"show_result":false,"style":null},
    back2top: {"enable":true,"sidebar":false,"scrollpercent":false},
    bookmark: {"enable":false,"color":"#222","save":"auto"},
    fancybox: true,
    mediumzoom: false,
    lazyload: true,
    pangu: false,
    algolia: {
      appID: 'YY693DUDAI',
      apiKey: 'db449d453b150820f66e7bc3d4523a17',
      indexName: 'my-hexo-blog',
      hits: {"per_page":10},
      labels: {"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}
    },
    localsearch: {"enable":false,"trigger":"auto","top_n_per_article":1,"unescape":false,"preload":false},
    path: '',
    motion: {"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},
    translation: {
      copy_button: '복사',
      copy_success: 'Copied',
      copy_failure: 'Copy failed'
    },
    sidebarPadding: 40
  };
</script>

  <meta name="description" content="안녕하세요. @anpigon 입니다.이번에는 간단한 텍스트 감정 분류기를 만들어 보겠습니다. 참고로 구글 검색하면 파이썬 머신러닝 관련 자료가 넘치도록 많습니다. 구글에서 마음에 드는 예제를 하나 가져왔습니다.아래 예제는 https:&#x2F;&#x2F;stevenloria.com&#x2F;simple-text-classification&#x2F;를 참고 했습니다.">
<meta property="og:type" content="article">
<meta property="og:title" content="[머신러닝] 파이썬 머신러닝 #4 - 스팀잇 글 감정 분류하기">
<meta property="og:url" content="https://anpigon.github.io/kr/@anpigon/4">
<meta property="og:site_name" content="안피곤님의 블로그">
<meta property="og:description" content="안녕하세요. @anpigon 입니다.이번에는 간단한 텍스트 감정 분류기를 만들어 보겠습니다. 참고로 구글 검색하면 파이썬 머신러닝 관련 자료가 넘치도록 많습니다. 구글에서 마음에 드는 예제를 하나 가져왔습니다.아래 예제는 https:&#x2F;&#x2F;stevenloria.com&#x2F;simple-text-classification&#x2F;를 참고 했습니다.">
<meta property="og:locale" content="ko_KR">
<meta property="og:image" content="https://i.imgur.com/0sc7iI4.jpg">
<meta property="og:image" content="https://imgur.com/FmvSCqP.png">
<meta property="og:image" content="https://imgur.com/nU5m69v.png">
<meta property="og:image" content="https://imgur.com/aAG8zds.png">
<meta property="og:image" content="https://imgur.com/0EG4ysF.png">
<meta property="og:image" content="https://imgur.com/XDb4h4N.png">
<meta property="og:image" content="https://imgur.com/eC2C1Kf.png">
<meta property="og:image" content="https://imgur.com/1U3onit.png">
<meta property="og:image" content="https://imgur.com/7ritlaH.png">
<meta property="og:image" content="https://imgur.com/SfiVubG.png">
<meta property="og:image" content="https://imgur.com/w76uhCa.png">
<meta property="article:published_time" content="2018-09-18T16:55:12.000Z">
<meta property="article:modified_time" content="2021-08-14T10:47:06.080Z">
<meta property="article:author" content="안피곤">
<meta property="article:tag" content="파이썬">
<meta property="article:tag" content="머신러닝">
<meta property="article:tag" content="나이브 베이즈 분류">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="https://i.imgur.com/0sc7iI4.jpg">

<link rel="canonical" href="https://anpigon.github.io/kr/@anpigon/4">


<script id="page-configurations">
  // https://hexo.io/docs/variables.html
  CONFIG.page = {
    sidebar: "",
    isHome: false,
    isPost: true,
    isPage: false,
    isArchive: false
  };
</script>

  <title>[머신러닝] 파이썬 머신러닝 #4 - 스팀잇 글 감정 분류하기 | 안피곤님의 블로그</title>
  
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-20589042-10"></script>
    <script pjax>
      var host = window.location.hostname;
      if (host !== "localhost" || !true) {
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', 'UA-20589042-10');
      }
    </script>






  
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({
          google_ad_client: "ca-pub-2365531018407022",
          enable_page_level_ads: false
     });
</script>
  <noscript>
  <style>
  .use-motion .brand,
  .use-motion .menu-item,
  .sidebar-inner,
  .use-motion .post-block,
  .use-motion .pagination,
  .use-motion .comments,
  .use-motion .post-header,
  .use-motion .post-body,
  .use-motion .collection-header { opacity: initial; }

  .use-motion .site-title,
  .use-motion .site-subtitle {
    opacity: initial;
    top: initial;
  }

  .use-motion .logo-line-before i { left: initial; }
  .use-motion .logo-line-after i { right: initial; }
  </style>
</noscript>

<link rel="alternate" href="/atom.xml" title="안피곤님의 블로그" type="application/atom+xml">
</head>

<body itemscope itemtype="http://schema.org/WebPage">
  <div class="container use-motion">
    <div class="headband"></div>

    <header class="header" itemscope itemtype="http://schema.org/WPHeader">
      <div class="header-inner"><div class="site-brand-container">
  <div class="site-meta">

    <div>
      <a href="/" class="brand" rel="start">
        <span class="logo-line-before"><i></i></span>
        <span class="site-title">안피곤님의 블로그</span>
        <span class="logo-line-after"><i></i></span>
      </a>
    </div>
        <h1 class="site-subtitle" itemprop="description">코딩, 독서, 여행, 영화, 맛집</h1>
      
  </div>

  <div class="site-nav-toggle">
    <div class="toggle" aria-label="Toggle navigation bar">
      <span class="toggle-line toggle-line-first"></span>
      <span class="toggle-line toggle-line-middle"></span>
      <span class="toggle-line toggle-line-last"></span>
    </div>
  </div>
</div>


<nav class="site-nav">
  
  <ul id="menu" class="menu">
        <li class="menu-item menu-item-home">

    <a href="/" rel="section"><i class="fa fa-fw fa-home"></i>홈</a>

  </li>
        <li class="menu-item menu-item-about">

    <a href="/about/" rel="section"><i class="fa fa-fw fa-user"></i>About</a>

  </li>
        <li class="menu-item menu-item-tags">

    <a href="/tags/" rel="section"><i class="fa fa-fw fa-tags"></i>태그<span class="badge">144</span></a>

  </li>
        <li class="menu-item menu-item-categories">

    <a href="/categories/" rel="section"><i class="fa fa-fw fa-th"></i>카테고리<span class="badge">25</span></a>

  </li>
        <li class="menu-item menu-item-archives">

    <a href="/archives/" rel="section"><i class="fa fa-fw fa-archive"></i>아카이브<span class="badge">327</span></a>

  </li>
      <li class="menu-item menu-item-search">
        <a role="button" class="popup-trigger"><i class="fa fa-search fa-fw"></i>검색
        </a>
      </li>
  </ul>

</nav>
  <div class="site-search">
    <div class="popup search-popup">
    <div class="search-header">
  <span class="search-icon">
    <i class="fa fa-search"></i>
  </span>
  <div class="search-input" id="search-input"></div>
  <span class="popup-btn-close">
    <i class="fa fa-times-circle"></i>
  </span>
</div>
<div class="algolia-results">
  <div id="algolia-stats"></div>
  <div id="algolia-hits"></div>
  <div id="algolia-pagination" class="algolia-pagination"></div>
</div>

  
</div>
<div class="search-pop-overlay"></div>

  </div>
</div>
    </header>

    
  <div class="back-to-top">
    <i class="fa fa-arrow-up"></i>
    <span>0%</span>
  </div>
  <div class="reading-progress-bar"></div>


    <main class="main">
      <div class="main-inner">
        <div class="content-wrap">
          

          <div class="content">
            

  <div class="posts-expand">
      
  
  
  <article itemscope itemtype="http://schema.org/Article" class="post-block " lang="ko">
    <link itemprop="mainEntityOfPage" href="https://anpigon.github.io/kr/@anpigon/4">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="image" content="/images/me.jpg">
      <meta itemprop="name" content="안피곤">
      <meta itemprop="description" content="시간이 천천히 갔으면 좋겠다.">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="안피곤님의 블로그">
    </span>
      <header class="post-header">
        <h2 class="post-title" itemprop="name headline">
          [머신러닝] 파이썬 머신러닝 #4 - 스팀잇 글 감정 분류하기
        </h2>

        <div class="post-meta">
            <span class="post-meta-item">
              <span class="post-meta-item-icon">
                <i class="fa fa-calendar-o"></i>
              </span>
              <span class="post-meta-item-text">작성일</span>

              <time title="Post created: 2018-09-19 01:55:12" itemprop="dateCreated datePublished" datetime="2018-09-19T01:55:12+09:00">2018-09-19</time>
            </span>
              <span class="post-meta-item">
                <span class="post-meta-item-icon">
                  <i class="fa fa-calendar-check-o"></i>
                </span>
                <span class="post-meta-item-text">Edited on</span>
                <time title="Updated at: 2021-08-14 19:47:06" itemprop="dateModified" datetime="2021-08-14T19:47:06+09:00">2021-08-14</time>
              </span>
            <span class="post-meta-item">
              <span class="post-meta-item-icon">
                <i class="fa fa-folder-o"></i>
              </span>
              <span class="post-meta-item-text">In</span>
                <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
                  <a href="/categories/%EA%B0%9C%EB%B0%9C-%EC%9D%B4%EC%95%BC%EA%B8%B0/" itemprop="url" rel="index">
                    <span itemprop="name">개발 이야기</span>
                  </a>
                </span>
                  , 
                <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
                  <a href="/categories/%EA%B0%9C%EB%B0%9C-%EC%9D%B4%EC%95%BC%EA%B8%B0/%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D/" itemprop="url" rel="index">
                    <span itemprop="name">파이썬 머신러닝</span>
                  </a>
                </span>
            </span>

          
            <span class="post-meta-item" title="Views">
              <span class="post-meta-item-icon">
                <i class="fa fa-users"></i>
              </span>
              <span class="post-meta-item-text">Views: </span>
              <span class="firestore-visitors-count"></span>
            </span>
  
  <span class="post-meta-item">
    
      <span class="post-meta-item-icon">
        <i class="fa fa-comment-o"></i>
      </span>
      <span class="post-meta-item-text">Disqus: </span>
    
    <a title="disqus" href="/kr/@anpigon/4#comments" itemprop="discussionUrl">
      <span class="post-comments-count disqus-comment-count" data-disqus-identifier="/kr/@anpigon/4" itemprop="commentCount"></span>
    </a>
  </span>
  
  

        </div>
      </header>

    
    
    
    <div class="post-body" itemprop="articleBody">

      
            <div style="margin-bottom:35px;margin-top:-20px;">
              <!-- 블로그 본문 상단 광고 -->
              <ins class="adsbygoogle"
                  style="display:block"
                  data-ad-client="ca-pub-2365531018407022"
                  data-ad-slot="3390644000"
                  data-ad-format="auto"
                  data-full-width-responsive="true"></ins>
              <script>
                  (adsbygoogle = window.adsbygoogle || []).push({});
              </script>
            </div>

        <p><img alt data-src="https://i.imgur.com/0sc7iI4.jpg"></p><p>안녕하세요. @anpigon 입니다.</p><p>이번에는 간단한 텍스트 감정 분류기를 만들어 보겠습니다. 참고로 구글 검색하면 파이썬 머신러닝 관련 자료가 넘치도록 많습니다. 구글에서 마음에 드는 예제를 하나 가져왔습니다.</p><p>아래 예제는 <a target="_blank" rel="noopener" href="https://stevenloria.com/simple-text-classification/%EB%A5%BC">https://stevenloria.com/simple-text-classification/를</a> 참고 했습니다.<br>
<br><hr><br></p><a id="more"></a>



<h1 id="textblob-라이브러리-설치"><a class="markdownIt-Anchor" href="#textblob-라이브러리-설치"></a> TextBlob 라이브러리 설치</h1>
<p><a target="_blank" rel="noopener" href="https://textblob.readthedocs.io/en/latest/">Textblob</a>는 텍스트 정보를 처리하는 파이썬 라이브러리다.  품사 태깅, 명사구 추출, 감정 분석 및 분류, 번역 등과 같은 일반적인 자연 언어 처리(Natural Language Processing, NLP)를 위한 간단한 API를 제공한다.</p>
<h6 id="설치하기"><a class="markdownIt-Anchor" href="#설치하기"></a> 설치하기</h6>
<pre><code>$ pip install -U textblob nltk
</code></pre>
<p><br><br><strong>TextBlob</strong> 라이브러리가 제공하는 기능 중에 어썸(Awesome)한 기능 하나를 소개한다. 나는 언어를 알아내는 기능과 번역기능이 정말 마음에 들었다. 아래 예제를 보자. 나머지 기능들은 <a target="_blank" rel="noopener" href="https://textblob.readthedocs.io/en/latest/quickstart.html#translation-and-language-detection">[여기]</a>에서 볼 수 있다.<br>
<br></p>
<h3 id="detect-language언어-알아내기"><a class="markdownIt-Anchor" href="#detect-language언어-알아내기"></a> Detect Language(언어 알아내기)</h3>
<p>어떤 국가의 언어로 작성된 텍스트인지 판단한다. 한글은 <code>ko</code>로 나온다. 언어 코드는 구글에서 제공하는 <a target="_blank" rel="noopener" href="https://developers.google.com/adwords/api/docs/appendix/languagecodes?hl=ko">Adwords Api 문서</a>에서 확인 가능하다.</p>
<p><img alt data-src="https://imgur.com/FmvSCqP.png"></p>
<br>
<h3 id="translate번역하기"><a class="markdownIt-Anchor" href="#translate번역하기"></a> Translate(번역하기)</h3>
<p>한글로 작성된 텍스트를 영어로 번역한다.</p>
<p><img alt data-src="https://imgur.com/nU5m69v.png"></p>
<p><br><hr><br></p>
<h1 id="텍스트-감정-분류기-만들기"><a class="markdownIt-Anchor" href="#텍스트-감정-분류기-만들기"></a> 텍스트 감정 분류기 만들기</h1>
<p>간단한 문장을 학습하여 긍정(pos)과 부정(neg)을 분류하는 단순한 분석기를 구현해보자. 먼저 <code>textblob.classifiers</code>를 임포트(import)하고 학습 데이터 세트과 테스트 데이터 세트를 만든다.</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> textblob.classifiers <span class="keyword">import</span> NaiveBayesClassifier</span><br><span class="line"></span><br><span class="line">train = [</span><br><span class="line">    (<span class="string">&#x27;I love this sandwich.&#x27;</span>, <span class="string">&#x27;pos&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;This is an amazing place!&#x27;</span>, <span class="string">&#x27;pos&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;I feel very good about these beers.&#x27;</span>, <span class="string">&#x27;pos&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;This is my best work.&#x27;</span>, <span class="string">&#x27;pos&#x27;</span>),</span><br><span class="line">    (<span class="string">&quot;What an awesome view&quot;</span>, <span class="string">&#x27;pos&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;I do not like this restaurant&#x27;</span>, <span class="string">&#x27;neg&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;I am tired of this stuff.&#x27;</span>, <span class="string">&#x27;neg&#x27;</span>),</span><br><span class="line">    (<span class="string">&quot;I can&#x27;t deal with this&quot;</span>, <span class="string">&#x27;neg&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;He is my sworn enemy!&#x27;</span>, <span class="string">&#x27;neg&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;My boss is horrible.&#x27;</span>, <span class="string">&#x27;neg&#x27;</span>)</span><br><span class="line">]</span><br><span class="line">test = [</span><br><span class="line">    (<span class="string">&#x27;The beer was good.&#x27;</span>, <span class="string">&#x27;pos&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;I do not enjoy my job&#x27;</span>, <span class="string">&#x27;neg&#x27;</span>),</span><br><span class="line">    (<span class="string">&quot;I ain&#x27;t feeling dandy today.&quot;</span>, <span class="string">&#x27;neg&#x27;</span>),</span><br><span class="line">    (<span class="string">&quot;I feel amazing!&quot;</span>, <span class="string">&#x27;pos&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Gary is a friend of mine.&#x27;</span>, <span class="string">&#x27;pos&#x27;</span>),</span><br><span class="line">    (<span class="string">&quot;I can&#x27;t believe I&#x27;m doing this.&quot;</span>, <span class="string">&#x27;neg&#x27;</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p><br><code>NaiveBayesClassifier</code> 객체에 학습 데이터를 입력하고 분류기 <code>cl</code>를 생성한다.</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cl = NaiveBayesClassifier(train)</span><br></pre></td></tr></table></figure>
<p><br>이제 학습된 분류기에서 <code>classify(text)</code> 함수를 사용하면 텍스트를 분류할 수 있다. 학습 데이터에 없는 텍스트를 입력하여 분류해보자.</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cl.classify(<span class="string">&quot;Their burgers are amazing&quot;</span>)  <span class="comment"># &quot;pos&quot;</span></span><br><span class="line">cl.classify(<span class="string">&quot;I don&#x27;t like their pizza.&quot;</span>)  <span class="comment"># &quot;neg&quot;</span></span><br></pre></td></tr></table></figure>
<p><br>아래와 같이 <code>TextBlob</code> 객체를 사용하여 여러 문장으로 구성된 텍스트도 분류할 수 있다.</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> textblob <span class="keyword">import</span> TextBlob</span><br><span class="line">blob = TextBlob(<span class="string">&quot;The beer was amazing. &quot;</span></span><br><span class="line">                <span class="string">&quot;But the hangover was horrible. My boss was not happy.&quot;</span>,</span><br><span class="line">                classifier=cl)</span><br><span class="line">blob.classify()  <span class="comment"># &quot;neg&quot;          </span></span><br></pre></td></tr></table></figure>
<p><br><code>TextBlob</code>에서 문장을 분리하여 각 문장을 개별적으로 분류 할 수도 있다.</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> sentence <span class="keyword">in</span> blob.sentences:</span><br><span class="line">    <span class="built_in">print</span>(sentence)</span><br><span class="line">    <span class="built_in">print</span>(sentence.classify())</span><br><span class="line"><span class="comment"># &quot;pos&quot;, &quot;neg&quot;, &quot;neg&quot;</span></span><br></pre></td></tr></table></figure>
<p><br>테스트 데이터 세트로 정확도를 확인해보자. 테스트 데이터의 정확도가 **83％**로 나왔다. 사실 테스트 데이터양이 적어서 높은 정확도가 나왔다.</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cl.accuracy(test)</span><br><span class="line"><span class="comment"># 0.8333333333333334</span></span><br></pre></td></tr></table></figure>
<p><br><code>show_informative_features</code>를 실행하여 분류기가 어떤 기준으로 분류하는지 살펴보자.</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cl.show_informative_features(<span class="number">5</span>)</span><br><span class="line"><span class="comment"># Most Informative Features</span></span><br><span class="line"><span class="comment">#             contains(my) = True              neg : pos    =      1.7 : 1.0</span></span><br><span class="line"><span class="comment">#             contains(an) = False             neg : pos    =      1.6 : 1.0</span></span><br><span class="line"><span class="comment">#             contains(my) = False             pos : neg    =      1.3 : 1.0</span></span><br><span class="line"><span class="comment">#          contains(place) = False             neg : pos    =      1.2 : 1.0</span></span><br><span class="line"><span class="comment">#             contains(of) = False             pos : neg    =      1.2 : 1.0</span></span><br></pre></td></tr></table></figure>
<p>텍스트에 <strong>“my”</strong> 단어를 포함(True)하고 있으면 부정(neg)일 확률이 <strong>1.7</strong>이다. 그리고 **“place”**라는 단어를 포함하지 않으면(False) 부정(neg)일 확률이 <strong>1.2</strong>이다.</p>
<p><br><hr><br></p>
<h1 id="한글-텍스트-감정-분류기-만들기"><a class="markdownIt-Anchor" href="#한글-텍스트-감정-분류기-만들기"></a> 한글 텍스트 감정 분류기 만들기</h1>
<p>위에서 만든 분류기를 한글에도 적용해보자. <code>TextBlob</code>는 형태소 분석 기능을 포함하고 있지만, 한글 형태소 분석은 하지 못한다. 그래서 한글 형태소 분석을 위해 은전한닢(Mecab)을 사용하였다. 한글 형태소 분석기를 사용하지 않아도 분류기가 작동은 한다. 하지만 형태소 분석을 하지 않으면 조사, 명사, 동사 구분이 되지 않아 분류기의 정확도가 떨어진다.</p>
<p>아래와 같이 학습 데이터와 테스트 데이터를 준비한다.</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> konlpy.tag <span class="keyword">import</span> Mecab</span><br><span class="line">pos_tagger = Mecab()</span><br><span class="line"></span><br><span class="line">train = [</span><br><span class="line">    (<span class="string">&#x27;나는 이 샌드위치를 정말 좋아해.&#x27;</span>, <span class="string">&#x27;긍정&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;정말 멋진 곳이에요!&#x27;</span>, <span class="string">&#x27;긍정&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;나는 이 맥주들이 아주 좋다고 생각해요.&#x27;</span>, <span class="string">&#x27;긍정&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;이것은 나의 최고의 작품입니다.&#x27;</span>, <span class="string">&#x27;긍정&#x27;</span>),</span><br><span class="line">    (<span class="string">&quot;정말 멋진 광경이다&quot;</span>, <span class="string">&quot;긍정&quot;</span>),</span><br><span class="line">    (<span class="string">&#x27;난 이 식당 싫어&#x27;</span>, <span class="string">&#x27;부정&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;난 이게 지겨워.&#x27;</span>, <span class="string">&#x27;부정&#x27;</span>),</span><br><span class="line">    (<span class="string">&quot;이 문제는 처리할 수 없습니다.&quot;</span>, <span class="string">&quot;부정&quot;</span>),</span><br><span class="line">    (<span class="string">&#x27;그는 나의 불구대천의 원수이다.&#x27;</span>, <span class="string">&#x27;부정&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;내 상사는 끔찍해.&#x27;</span>, <span class="string">&#x27;부정&#x27;</span>)</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">test = [</span><br><span class="line">    (<span class="string">&#x27;맥주가 좋았습니다.&#x27;</span>, <span class="string">&#x27;긍정&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;난 내 일을 즐기지 않는다&#x27;</span>, <span class="string">&#x27;부정&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;오늘은 기분이 안 좋아요.&#x27;</span>, <span class="string">&#x27;부정&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;놀라워요!&#x27;</span>, <span class="string">&#x27;긍정&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;네드는 나의 친구입니다.&#x27;</span>, <span class="string">&#x27;긍정&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;제가 이렇게 하고 있다니 믿을 수가 없어요.&#x27;</span>, <span class="string">&#x27;부정&#x27;</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p><br>우선 차이를 확인하기 위해서 형태소 분석없이 분류기를 사용해보자.</p>
<p><img alt data-src="https://imgur.com/aAG8zds.png"></p>
<p>정확도를 확인해보자. 확률이 50％다. 거의 찍는 수준이다.</p>
<p><img alt data-src="https://imgur.com/0EG4ysF.png"></p>
<p><br>이제 형태소 분석기를 적용하고 다시 정확도를 확인해보자.</p>
<p><code>train</code> 데이터의 텍스트를 형태소를 분석하여 <code>train_data</code>를 생성한다. 한글 단어 뒤에 태그를 붙여줘야 분류기가 정확하게 분류할 수 있다.</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">train_data = [([<span class="string">&#x27;/&#x27;</span>.join(<span class="keyword">token</span>) <span class="keyword">for</span> <span class="keyword">token</span> <span class="keyword">in</span> pos_tagger.pos(<span class="keyword">sentence</span>)], <span class="built_in">result</span>) <span class="keyword">for</span> [<span class="keyword">sentence</span>, <span class="built_in">result</span>] <span class="keyword">in</span> train]</span><br><span class="line">train_data</span><br></pre></td></tr></table></figure>
<h6 id="결과"><a class="markdownIt-Anchor" href="#결과"></a> 결과</h6>
<p><img alt data-src="https://imgur.com/XDb4h4N.png"></p>
<p><br>테스트 데이터를 사용하여 정확도를 다시 확인해보자. **66％**가 나왔다. 형태소 분석을 하고 나니 정확도가 높아졌다.</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">test_data = [([<span class="string">&#x27;/&#x27;</span>.join(<span class="keyword">token</span>) <span class="keyword">for</span> <span class="keyword">token</span> <span class="keyword">in</span> pos_tagger.pos(<span class="keyword">sentence</span>)], <span class="built_in">result</span>) <span class="keyword">for</span> [<span class="keyword">sentence</span>, <span class="built_in">result</span>] <span class="keyword">in</span> test]</span><br><span class="line"></span><br><span class="line">cl.accuracy(test_data)</span><br></pre></td></tr></table></figure>
<h6 id="결과-2"><a class="markdownIt-Anchor" href="#결과-2"></a> 결과</h6>
<p><img alt data-src="https://imgur.com/eC2C1Kf.png"></p>
<p><br><code>show_informative_features</code>를 실행하여 분류 기준을 살펴보자.</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">cl</span><span class="selector-class">.show_informative_features</span>()</span><br></pre></td></tr></table></figure>
<h6 id="결과-3"><a class="markdownIt-Anchor" href="#결과-3"></a> 결과</h6>
<p><img alt data-src="https://imgur.com/1U3onit.png"><br>
&quot;정말&quot;이라는 부사가 있으면 부정일 확률이 2.2이다. 그리고 “좋” 형용사가 있으면 긍정일 확률이 1.6이다.</p>
<p><br><hr><br></p>
<h1 id="스팀잇-감정-분류하기"><a class="markdownIt-Anchor" href="#스팀잇-감정-분류하기"></a> 스팀잇 감정 분류하기</h1>
<p>마지막으로 스팀잇에 작성한 글 10개를 가져와서 긍정/부정을 분류해보자.</p>
<figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">from</span> steem import Steem </span><br><span class="line"><span class="meta">from</span> steem.blog import Blog</span><br><span class="line"></span><br><span class="line"># 스팀잇에서 작성한 글 10개 가져오기</span><br><span class="line">username = <span class="string">&#x27;anpigon&#x27;</span></span><br><span class="line">b = <span class="meta">Blog(</span>username)</span><br><span class="line">posts = b.take(10)</span><br><span class="line"></span><br><span class="line">for post <span class="meta">in</span> posts:</span><br><span class="line">  <span class="meta">if</span> post.body != <span class="string">&quot;&quot;</span>:</span><br><span class="line">    author = post.author</span><br><span class="line">    permlink = post.permlink</span><br><span class="line">    <span class="meta">title</span> = post.<span class="meta">title</span></span><br><span class="line">    body = post.body.<span class="meta">replace</span>(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    # 분류기로 분류하기</span><br><span class="line">    result = cl.classify([<span class="string">&#x27;/&#x27;</span>.jo<span class="meta">in(</span>token) for token <span class="meta">in</span> pos_tagger.pos(body)])</span><br><span class="line">    p<span class="meta">rint(</span><span class="string">&quot;(％s) ％s(/@％s/％s)&quot;</span> ％ (result, <span class="meta">title</span>, author, permlink));</span><br></pre></td></tr></table></figure>
<h6 id="결과-4"><a class="markdownIt-Anchor" href="#결과-4"></a> 결과</h6>
<p><img alt data-src="https://imgur.com/7ritlaH.png"><br>
결과가 좋지 않다. 긍정보다는 부정으로 분류가 많이 되었다.ㅠㅠ</p>
<br>
<p>분류기에 학습 데이터를 추가로 더 입력하고 정확도를 계산해보자.</p>
<figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span><span class="type">_train</span> = [</span><br><span class="line">  (<span class="string">&#x27;나는 내 꿈을 믿는다&#x27;</span>, <span class="string">&#x27;긍정&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;나는 매일 최선을 다하고 있다&#x27;</span>, <span class="string">&#x27;긍정&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;나는 있는 그대로의 나를 사랑한다&#x27;</span>, <span class="string">&#x27;긍정&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;나는 내 삶을 100％ 책임진다&#x27;</span>, <span class="string">&#x27;긍정&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;가장 좋은 일은 아직 생기지 않았다&#x27;</span>, <span class="string">&#x27;긍정&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;나는 매일 나의 삶에 감사한다&#x27;</span>, <span class="string">&#x27;긍정&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;새로나온 휴대폰은 배터리 교체가 되지 않아 불편하다&#x27;</span>, <span class="string">&#x27;부정&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;이번에 나온 영화 너무 재밌다. 주말에 또 보고 싶다.&#x27;</span>, <span class="string">&#x27;긍정&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;나의 아버지는 이해가 안된다&#x27;</span>, <span class="string">&#x27;부정&#x27;</span>),</span><br><span class="line">	(<span class="string">&#x27;나는 어머니와 있을 때 퉁명해진다&#x27;</span>, <span class="string">&#x27;부정&#x27;</span>),</span><br><span class="line">	(<span class="string">&#x27;나는 어머니와 있을 때 불편할 때가 있다.&#x27;</span>, <span class="string">&#x27;부정&#x27;</span>)</span><br><span class="line">]</span><br><span class="line"><span class="keyword">new</span><span class="type">_train_data</span> = [([<span class="string">&#x27;/&#x27;</span>.join(token) <span class="keyword">for</span> token <span class="keyword">in</span> pos_tagger.pos(sentence)], result) <span class="keyword">for</span> [sentence, result] <span class="keyword">in</span> test]</span><br><span class="line">cl.update(<span class="keyword">new</span><span class="type">_train_data</span>)</span><br><span class="line"></span><br><span class="line">cl.accuracy(test_data)</span><br></pre></td></tr></table></figure>
<h6 id="결과-5"><a class="markdownIt-Anchor" href="#결과-5"></a> 결과</h6>
<p><img alt data-src="https://imgur.com/SfiVubG.png"></p>
<p>정확도는 66％로 변함이 없다. 하지만 학습 데이터가 많아지면 정확도가 올라갈 것이다.</p>
<br>
<p>마지막으로 학습 데이터가 추가된 분류기로 스팀잇 글을 다시 분류해보자.</p>
<h6 id="결과-6"><a class="markdownIt-Anchor" href="#결과-6"></a> 결과</h6>
<p><img alt data-src="https://imgur.com/w76uhCa.png"></p>
<p>긍정으로 분류된 글의 비율이 늘었다. 하지만 여전히 부정으로 분류된 글이 많다.ㅠ</p>
<p><br>여기까지 읽어주셔서 감사합니다.</p>
<hr>
<h6 id="이전글"><a class="markdownIt-Anchor" href="#이전글"></a> 이전글</h6>
<ul>
<li><a target="_blank" rel="noopener" href="https://steemit.com/busy/@anpigon/5s1aam">파이썬으로 스팀잇 형태소 분석하기 #1</a></li>
<li><a target="_blank" rel="noopener" href="https://steemit.com/busy/@anpigon/2">파이썬으로 스팀잇 형태소 분석하기 #2 - 단어구름 만들기</a></li>
<li><a target="_blank" rel="noopener" href="https://steemit.com/busy/@anpigon/3">파이썬 머신러닝 #3 - 스팀잇 아이디로 성별  예측하기</a></li>
</ul>


    </div>

    
    
    

      <footer class="post-footer">
          <div class="post-tags">
              <a href="/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/" rel="tag"># 파이썬</a>
              <a href="/tags/%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D/" rel="tag"># 머신러닝</a>
              <a href="/tags/%EB%82%98%EC%9D%B4%EB%B8%8C-%EB%B2%A0%EC%9D%B4%EC%A6%88-%EB%B6%84%EB%A5%98/" rel="tag"># 나이브 베이즈 분류</a>
          </div>

        
  <div class="post-widgets">
    <div class="wp_rating">
      <div id="wpac-rating"></div>
    </div>
  </div>

          <div class="post-nav">
            <div class="post-nav-next post-nav-item">
                <a href="/busy/@anpigon/3" rel="next" title="[머신러닝] 파이썬 머신러닝 #3 - 스팀잇 아이디로 성별  예측하기">
                  <i class="fa fa-chevron-left"></i> [머신러닝] 파이썬 머신러닝 #3 - 스팀잇 아이디로 성별  예측하기
                </a>
            </div>

            <span class="post-nav-divider"></span>

            <div class="post-nav-prev post-nav-item">
                <a href="/kr/@anpigon/5" rel="prev" title="[머신러닝] 파이썬 머신러닝 #5 - 유사한 게시물 찾기">
                  [머신러닝] 파이썬 머신러닝 #5 - 유사한 게시물 찾기 <i class="fa fa-chevron-right"></i>
                </a>
            </div>
          </div>
      </footer>
    
  </article>
  
  
  

  </div>


          </div>
          
    
  <div class="comments" id="comments">
    <div id="disqus_thread">
      <noscript>Please enable JavaScript to view the comments powered by Disqus.</noscript>
    </div>
  </div>
  

        </div>
          
  
  <div class="toggle sidebar-toggle">
    <span class="toggle-line toggle-line-first"></span>
    <span class="toggle-line toggle-line-middle"></span>
    <span class="toggle-line toggle-line-last"></span>
  </div>

  <aside class="sidebar">
    <div class="sidebar-inner">

      <ul class="sidebar-nav motion-element">
        <li class="sidebar-nav-toc">
          목차
        </li>
        <li class="sidebar-nav-overview">
          흝어보기
        </li>
      </ul>

      <!--noindex-->
      <div class="post-toc-wrap sidebar-panel">
          <div class="post-toc motion-element"><ol class="nav"><li class="nav-item nav-level-1"><a class="nav-link" href="#textblob-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%84%A4%EC%B9%98"><span class="nav-number">1.</span> <span class="nav-text"> TextBlob 라이브러리 설치</span></a><ol class="nav-child"><li class="nav-item nav-level-6"><a class="nav-link" href="#%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0"><span class="nav-number">1.0.0.0.0.1.</span> <span class="nav-text"> 설치하기</span></a></li></ol></li></ol></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#detect-language%EC%96%B8%EC%96%B4-%EC%95%8C%EC%95%84%EB%82%B4%EA%B8%B0"><span class="nav-number">1.0.1.</span> <span class="nav-text"> Detect Language(언어 알아내기)</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#translate%EB%B2%88%EC%97%AD%ED%95%98%EA%B8%B0"><span class="nav-number">1.0.2.</span> <span class="nav-text"> Translate(번역하기)</span></a></li></ol></li></ol></li><li class="nav-item nav-level-1"><a class="nav-link" href="#%ED%85%8D%EC%8A%A4%ED%8A%B8-%EA%B0%90%EC%A0%95-%EB%B6%84%EB%A5%98%EA%B8%B0-%EB%A7%8C%EB%93%A4%EA%B8%B0"><span class="nav-number">2.</span> <span class="nav-text"> 텍스트 감정 분류기 만들기</span></a></li><li class="nav-item nav-level-1"><a class="nav-link" href="#%ED%95%9C%EA%B8%80-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EA%B0%90%EC%A0%95-%EB%B6%84%EB%A5%98%EA%B8%B0-%EB%A7%8C%EB%93%A4%EA%B8%B0"><span class="nav-number">3.</span> <span class="nav-text"> 한글 텍스트 감정 분류기 만들기</span></a><ol class="nav-child"><li class="nav-item nav-level-6"><a class="nav-link" href="#%EA%B2%B0%EA%B3%BC"><span class="nav-number">3.0.0.0.0.1.</span> <span class="nav-text"> 결과</span></a></li><li class="nav-item nav-level-6"><a class="nav-link" href="#%EA%B2%B0%EA%B3%BC-2"><span class="nav-number">3.0.0.0.0.2.</span> <span class="nav-text"> 결과</span></a></li><li class="nav-item nav-level-6"><a class="nav-link" href="#%EA%B2%B0%EA%B3%BC-3"><span class="nav-number">3.0.0.0.0.3.</span> <span class="nav-text"> 결과</span></a></li></ol></li></ol></li></ol></li></ol></li></ol></li><li class="nav-item nav-level-1"><a class="nav-link" href="#%EC%8A%A4%ED%8C%80%EC%9E%87-%EA%B0%90%EC%A0%95-%EB%B6%84%EB%A5%98%ED%95%98%EA%B8%B0"><span class="nav-number">4.</span> <span class="nav-text"> 스팀잇 감정 분류하기</span></a><ol class="nav-child"><li class="nav-item nav-level-6"><a class="nav-link" href="#%EA%B2%B0%EA%B3%BC-4"><span class="nav-number">4.0.0.0.0.1.</span> <span class="nav-text"> 결과</span></a></li><li class="nav-item nav-level-6"><a class="nav-link" href="#%EA%B2%B0%EA%B3%BC-5"><span class="nav-number">4.0.0.0.0.2.</span> <span class="nav-text"> 결과</span></a></li><li class="nav-item nav-level-6"><a class="nav-link" href="#%EA%B2%B0%EA%B3%BC-6"><span class="nav-number">4.0.0.0.0.3.</span> <span class="nav-text"> 결과</span></a></li><li class="nav-item nav-level-6"><a class="nav-link" href="#%EC%9D%B4%EC%A0%84%EA%B8%80"><span class="nav-number">4.0.0.0.0.4.</span> <span class="nav-text"> 이전글</span></a></li></ol></li></ol></li></ol></li></ol></li></ol></li></ol></div>
      </div>
      <!--/noindex-->

      <div class="site-overview-wrap sidebar-panel">
        <div class="site-author motion-element" itemprop="author" itemscope itemtype="http://schema.org/Person">
  <img class="site-author-image" itemprop="image" alt="안피곤"
    src="/images/me.jpg">
  <p class="site-author-name" itemprop="name">안피곤</p>
  <div class="site-description" itemprop="description">시간이 천천히 갔으면 좋겠다.</div>
</div>
<div class="site-state-wrap motion-element">
  <nav class="site-state">
      <div class="site-state-item site-state-posts">
          <a href="/archives/">
        
          <span class="site-state-item-count">327</span>
          <span class="site-state-item-name">포스트</span>
        </a>
      </div>
      <div class="site-state-item site-state-categories">
            <a href="/categories/">
          
        <span class="site-state-item-count">25</span>
        <span class="site-state-item-name">카테고리</span></a>
      </div>
      <div class="site-state-item site-state-tags">
            <a href="/tags/">
          
        <span class="site-state-item-count">144</span>
        <span class="site-state-item-name">태그</span></a>
      </div>
  </nav>
</div>
  <div class="links-of-author motion-element">
      <span class="links-of-author-item">
        <a href="https://github.com/anpigon" title="GitHub &amp;rarr; https:&#x2F;&#x2F;github.com&#x2F;anpigon" rel="noopener" target="_blank"><i class="fa fa-fw fa-github"></i>GitHub</a>
      </span>
      <span class="links-of-author-item">
        <a href="mailto:markan82@gmail.com" title="E-Mail &amp;rarr; mailto:markan82@gmail.com" rel="noopener" target="_blank"><i class="fa fa-fw fa-envelope"></i>E-Mail</a>
      </span>
  </div>



      </div>
          <!-- 정사각형 광고 -->
          <div style="margin-top: 15px;">
            <ins class="adsbygoogle"
                style="display:block"
                data-ad-client="ca-pub-2365531018407022"
                data-ad-slot="7521850306"
                data-ad-format="auto"
                data-full-width-responsive="true"></ins>
            <script>
                (adsbygoogle = window.adsbygoogle || []).push({});
            </script>
          </div>
    </div>
  </aside>
  <div id="sidebar-dimmer">3</div>



      </div>
    </main>

    <footer class="footer">
      <div class="footer-inner">
        

<div class="copyright">
  
  &copy; 
  <span itemprop="copyrightYear">2021</span>
  <span class="with-love">
    <i class="fa fa-user"></i>
  </span>
  <span class="author" itemprop="copyrightHolder">안피곤</span>
</div>
  <div class="powered-by">Powered by <a href="https://hexo.io/" class="theme-link" rel="noopener" target="_blank">Hexo</a> v5.4.0
  </div>
  <span class="post-meta-divider">|</span>
  <div class="theme-info">Theme – <a href="https://theme-next.org/" class="theme-link" rel="noopener" target="_blank">NexT.Gemini</a> v7.4.2
  </div>

        




  <script src="https://www.gstatic.com/firebasejs/6.3.3/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/6.3.3/firebase-firestore.js"></script>
  <script>
    firebase.initializeApp({
      apiKey: 'AIzaSyA4QZWCWb3IuIHjbkAmO0ttIM2b-qtLTP8',
      projectId: 'next-blog-8f9a0'
    });

    function getCount(doc, increaseCount) {
      // IncreaseCount will be false when not in article page

      return doc.get().then(d => {
        var count = 0;
        if (!d.exists) { // Has no data, initialize count
          if (increaseCount) {
            doc.set({
              count: 1
            });
            count = 1;
          }
        } else { // Has data
          count = d.data().count;
          if (increaseCount) {
            // If first view this article
            doc.set({ // Increase count
              count: count + 1
            });
            count++;
          }
        }

        return count;
      });
    }

    function appendCountTo(el) {
      return count => {
        el.innerText = count;
      }
    }
  </script>
  <script pjax>
    (function() {
      var db = firebase.firestore();
      var articles = db.collection('articles');

      if (CONFIG.page.isPost) { // Is article page
        var title = document.querySelector('.post-title').innerText.trim();
        var doc = articles.doc(title);
        var increaseCount = true;
        if (localStorage.getItem(title)) {
          increaseCount = false;
        } else {
          // Mark as visited
          localStorage.setItem(title, true);
        }
        getCount(doc, increaseCount).then(appendCountTo(document.querySelector('.firestore-visitors-count')));
      } else if (CONFIG.page.isHome) { // Is index page
        var promises = [...document.querySelectorAll('.post-title')].map(element => {
          var title = element.innerText.trim();
          var doc = articles.doc(title);
          return getCount(doc);
        });
        Promise.all(promises).then(counts => {
          var metas = document.querySelectorAll('.firestore-visitors-count');
          counts.forEach((val, idx) => {
            appendCountTo(metas[idx])(val);
          });
        });
      }
    })();
  </script>








        
      </div>
    </footer>
  </div>

  
  <script src="/lib/anime.min.js"></script>
  <script src="//cdn.jsdelivr.net/gh/theme-next/theme-next-pjax@0/pjax.min.js"></script>
  <script src="//cdn.jsdelivr.net/npm/jquery@3/dist/jquery.min.js"></script>
  <script src="//cdn.jsdelivr.net/gh/fancyapps/fancybox@3/dist/jquery.fancybox.min.js"></script>
  <script src="//cdn.jsdelivr.net/npm/lozad@1/dist/lozad.min.js"></script>
  <script src="/lib/velocity/velocity.min.js"></script>
  <script src="/lib/velocity/velocity.ui.min.js"></script>

<script src="/js/utils.js"></script>

<script src="/js/motion.js"></script>


<script src="/js/schemes/pisces.js"></script>


<script src="/js/next-boot.js"></script>

  <script>
var pjax = new Pjax({
  selectors: [
    'head title',
    '#page-configurations',
    '.content-wrap',
    '.post-toc-wrap',
    '#pjax'
  ],
  switches: {
    '.post-toc-wrap': Pjax.switches.innerHTML
  },
  analytics: false,
  cacheBust: false,
  scrollTo : !CONFIG.bookmark.enable
});

window.addEventListener('pjax:success', () => {
  document.querySelectorAll('script[pjax], script#page-configurations, #pjax script').forEach(element => {
    var code = element.text || element.textContent || element.innerHTML || '';
    var parent = element.parentNode;
    parent.removeChild(element);
    var script = document.createElement('script');
    if (element.id) {
      script.id = element.id;
    }
    if (element.className) {
      script.className = element.className;
    }
    if (element.type) {
      script.type = element.type;
    }
    if (element.src) {
      script.src = element.src;
      // Force synchronous loading of peripheral JS.
      script.async = false;
    }
    if (element.getAttribute('pjax') !== null) {
      element.setAttribute('pjax', '');
    }
    if (code !== '') {
      script.appendChild(document.createTextNode(code));
    }
    parent.appendChild(script);
  });
  NexT.boot.refresh();
  // Define Motion Sequence & Bootstrap Motion.
  if (CONFIG.motion.enable) {
    NexT.motion.integrator
      .init()
      .add(NexT.motion.middleWares.postList)
      .bootstrap();
  }
  NexT.utils.updateSidebarPosition();
});
</script>




  



  <script pjax>
  if (CONFIG.page.isPost) {
    wpac_init = window.wpac_init || [];
    wpac_init.push({
      widget: 'Rating',
      id: 21712,
      el: 'wpac-rating',
      color: 'fc6423'
    });
    (function() {
      if ('WIDGETPACK_LOADED' in window) return;
      WIDGETPACK_LOADED = true;
      var mc = document.createElement('script');
      mc.type = 'text/javascript';
      mc.async = true;
      mc.src = '//embed.widgetpack.com/widget.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(mc, s.nextSibling);
    })();
  }
  </script>

  
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/instantsearch.js@2.4.1/dist/instantsearch.min.css">
<script src="https://cdn.jsdelivr.net/npm/instantsearch.js@2.4.1/dist/instantsearch.js"></script>
<script src="/js/algolia-search.js"></script>














    <div id="pjax">

  

  

<script>
  function loadCount() {
    var d = document, s = d.createElement('script');
    s.src = 'https://anpigon-github-io.disqus.com/count.js';
    s.id = 'dsq-count-scr';
    (d.head || d.body).appendChild(s);
  }
  // defer loading until the whole page loading is completed
  window.addEventListener('load', loadCount, false);
</script>
<script>
  function loadComments() {
    if (window.DISQUS) {
      DISQUS.reset({
        reload: true,
        config: {page: {
            url: "https://anpigon.github.io/kr/@anpigon/4",
            identifier: "/kr/@anpigon/4",
            title: "[머신러닝] 파이썬 머신러닝 #4 - 스팀잇 글 감정 분류하기"
          }
        }
      });
    } else {
      var d = document, s = d.createElement('script');
      s.src = 'https://anpigon-github-io.disqus.com/embed.js';
      s.setAttribute('data-timestamp', '' + +new Date());
      (d.head || d.body).appendChild(s);
    }
  }
    (function() {
      var offsetTop = document.getElementById('comments').offsetTop - window.innerHeight;
      if (offsetTop <= 0) {
        // load directly when there's no a scrollbar
        window.addEventListener('load', loadComments, false);
      } else {
        var disqus_scroll = () => {
          // offsetTop may changes because of manually resizing browser window or lazy loading images.
          var offsetTop = document.getElementById('comments').offsetTop - window.innerHeight;
          var scrollTop = window.scrollY;

          // pre-load comments a bit? (margin or anything else)
          if (offsetTop - scrollTop < 60) {
            window.removeEventListener('scroll', disqus_scroll);
            loadComments();
          }
        };
        window.addEventListener('scroll', disqus_scroll);
      }
    })();
  
</script>

    </div>
</body>
</html>
