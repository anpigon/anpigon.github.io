<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=2">
<meta name="theme-color" content="#222">
<meta name="generator" content="Hexo 5.4.0">
  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32-next.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/images/favicon-16x16-next.png">
  <link rel="mask-icon" href="/images/logo.svg" color="#222">
  <meta name="google-site-verification" content="yfKOiBPD8WlKH3NPG_CG1zr4MsCgCG1YVdGKhMS2CKc">

<link rel="stylesheet" href="/css/main.css">

<link rel="stylesheet" href="//fonts.googleapis.com/css?family=Lato:300,300italic,400,400italic,700,700italic|Noto Serif KR:300,300italic,400,400italic,700,700italic&display=swap&subset=latin,latin-ext">
<link rel="stylesheet" href="/lib/font-awesome/css/font-awesome.min.css">
  <link rel="stylesheet" href="//cdn.jsdelivr.net/gh/fancyapps/fancybox@3/dist/jquery.fancybox.min.css">


<script id="hexo-configurations">
  var NexT = window.NexT || {};
  var CONFIG = {
    root: '/',
    scheme: 'Gemini',
    version: '7.4.2',
    exturl: false,
    sidebar: {"position":"left","display":"post","offset":12,"onmobile":false},
    copycode: {"enable":false,"show_result":false,"style":null},
    back2top: {"enable":true,"sidebar":false,"scrollpercent":false},
    bookmark: {"enable":false,"color":"#222","save":"auto"},
    fancybox: true,
    mediumzoom: false,
    lazyload: true,
    pangu: false,
    algolia: {
      appID: 'YY693DUDAI',
      apiKey: 'db449d453b150820f66e7bc3d4523a17',
      indexName: 'my-hexo-blog',
      hits: {"per_page":10},
      labels: {"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}
    },
    localsearch: {"enable":false,"trigger":"auto","top_n_per_article":1,"unescape":false,"preload":false},
    path: '',
    motion: {"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},
    translation: {
      copy_button: '복사',
      copy_success: 'Copied',
      copy_failure: 'Copy failed'
    },
    sidebarPadding: 40
  };
</script>

  <meta name="description" content="Illustration © Codeman38어렸을 때 Final Fantasy와 같은 RPG 게임을 좋아했습니다. 옛날 레트로 느낌을 살려서, Final Fantasy UI 처럼 보이는 컨테이너를 만들어 봅니다.* * * 프로젝트 생성하기expo-cli를 사용하여 프로젝트를 생성합니다. 프로젝트 명은 ffcontainer라고 하였습니다.">
<meta property="og:type" content="article">
<meta property="og:title" content="[React Native] 레트로 게임 UI 만들기">
<meta property="og:url" content="https://anpigon.github.io/kr/@anpigon/react-native-ui">
<meta property="og:site_name" content="안피곤님의 블로그">
<meta property="og:description" content="Illustration © Codeman38어렸을 때 Final Fantasy와 같은 RPG 게임을 좋아했습니다. 옛날 레트로 느낌을 살려서, Final Fantasy UI 처럼 보이는 컨테이너를 만들어 봅니다.* * * 프로젝트 생성하기expo-cli를 사용하여 프로젝트를 생성합니다. 프로젝트 명은 ffcontainer라고 하였습니다.">
<meta property="og:locale" content="ko_KR">
<meta property="og:image" content="https://www.dafont.com/img/illustration/p/r/press_start_2p.png">
<meta property="og:image" content="https://steemitimages.com/300x0/https://user-images.githubusercontent.com/3969643/54168418-ba7a7b00-44b1-11e9-9732-dd9939ef93aa.png">
<meta property="og:image" content="https://steemitimages.com/300x0/https://ipfs.busy.org/ipfs/Qmcci7iMVbsGKbvHNvFsKejJDPLg5mwUtXE8rfdPswuHVt">
<meta property="og:image" content="https://steemitimages.com/0x0/https://ipfs.busy.org/ipfs/QmQ9DJ62YkZJfYmqw9AnKY1nJtP7mCWEvHN8tm81PCmwnz">
<meta property="og:image" content="https://steemitimages.com/300x0/https://ipfs.busy.org/ipfs/QmbepC3x61hFG82MZVGHryBwbj84dghc5C2kAqLnySVAfd">
<meta property="og:image" content="https://steemitimages.com/400x0/https://ipfs.busy.org/ipfs/QmcSsXhtNEsspdi2tDXecvYaSxGwgkhpVoEZXvThS6n9Sg">
<meta property="og:image" content="https://steemitimages.com/0x0/https://ipfs.busy.org/ipfs/QmTVnuTbditvDLhggrrfkCVCgdwnU1MyveLfqrjbyzHvfk">
<meta property="og:image" content="https://s3.ap-northeast-2.amazonaws.com/dclick/image/dclick/1552477485946.png">
<meta property="article:published_time" content="2019-03-12T04:36:06.000Z">
<meta property="article:modified_time" content="2021-04-21T11:50:30.061Z">
<meta property="article:author" content="안피곤">
<meta property="article:tag" content="React Native">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="https://www.dafont.com/img/illustration/p/r/press_start_2p.png">

<link rel="canonical" href="https://anpigon.github.io/kr/@anpigon/react-native-ui">


<script id="page-configurations">
  // https://hexo.io/docs/variables.html
  CONFIG.page = {
    sidebar: "",
    isHome: false,
    isPost: true,
    isPage: false,
    isArchive: false
  };
</script>

  <title>[React Native] 레트로 게임 UI 만들기 | 안피곤님의 블로그</title>
  
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-20589042-10"></script>
    <script pjax>
      var host = window.location.hostname;
      if (host !== "localhost" || !true) {
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', 'UA-20589042-10');
      }
    </script>






  
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({
          google_ad_client: "ca-pub-2365531018407022",
          enable_page_level_ads: false
     });
</script>
  <noscript>
  <style>
  .use-motion .brand,
  .use-motion .menu-item,
  .sidebar-inner,
  .use-motion .post-block,
  .use-motion .pagination,
  .use-motion .comments,
  .use-motion .post-header,
  .use-motion .post-body,
  .use-motion .collection-header { opacity: initial; }

  .use-motion .site-title,
  .use-motion .site-subtitle {
    opacity: initial;
    top: initial;
  }

  .use-motion .logo-line-before i { left: initial; }
  .use-motion .logo-line-after i { right: initial; }
  </style>
</noscript>

<link rel="alternate" href="/atom.xml" title="안피곤님의 블로그" type="application/atom+xml">
</head>

<body itemscope itemtype="http://schema.org/WebPage">
  <div class="container use-motion">
    <div class="headband"></div>

    <header class="header" itemscope itemtype="http://schema.org/WPHeader">
      <div class="header-inner"><div class="site-brand-container">
  <div class="site-meta">

    <div>
      <a href="/" class="brand" rel="start">
        <span class="logo-line-before"><i></i></span>
        <span class="site-title">안피곤님의 블로그</span>
        <span class="logo-line-after"><i></i></span>
      </a>
    </div>
        <h1 class="site-subtitle" itemprop="description">코딩, 독서, 여행, 영화, 맛집</h1>
      
  </div>

  <div class="site-nav-toggle">
    <div class="toggle" aria-label="Toggle navigation bar">
      <span class="toggle-line toggle-line-first"></span>
      <span class="toggle-line toggle-line-middle"></span>
      <span class="toggle-line toggle-line-last"></span>
    </div>
  </div>
</div>


<nav class="site-nav">
  
  <ul id="menu" class="menu">
        <li class="menu-item menu-item-home">

    <a href="/" rel="section"><i class="fa fa-fw fa-home"></i>홈</a>

  </li>
        <li class="menu-item menu-item-about">

    <a href="/about/" rel="section"><i class="fa fa-fw fa-user"></i>About</a>

  </li>
        <li class="menu-item menu-item-tags">

    <a href="/tags/" rel="section"><i class="fa fa-fw fa-tags"></i>태그<span class="badge">139</span></a>

  </li>
        <li class="menu-item menu-item-categories">

    <a href="/categories/" rel="section"><i class="fa fa-fw fa-th"></i>카테고리<span class="badge">25</span></a>

  </li>
        <li class="menu-item menu-item-archives">

    <a href="/archives/" rel="section"><i class="fa fa-fw fa-archive"></i>아카이브<span class="badge">325</span></a>

  </li>
      <li class="menu-item menu-item-search">
        <a role="button" class="popup-trigger"><i class="fa fa-search fa-fw"></i>검색
        </a>
      </li>
  </ul>

</nav>
  <div class="site-search">
    <div class="popup search-popup">
    <div class="search-header">
  <span class="search-icon">
    <i class="fa fa-search"></i>
  </span>
  <div class="search-input" id="search-input"></div>
  <span class="popup-btn-close">
    <i class="fa fa-times-circle"></i>
  </span>
</div>
<div class="algolia-results">
  <div id="algolia-stats"></div>
  <div id="algolia-hits"></div>
  <div id="algolia-pagination" class="algolia-pagination"></div>
</div>

  
</div>
<div class="search-pop-overlay"></div>

  </div>
</div>
    </header>

    
  <div class="back-to-top">
    <i class="fa fa-arrow-up"></i>
    <span>0%</span>
  </div>
  <div class="reading-progress-bar"></div>


    <main class="main">
      <div class="main-inner">
        <div class="content-wrap">
          

          <div class="content">
            

  <div class="posts-expand">
      
  
  
  <article itemscope itemtype="http://schema.org/Article" class="post-block " lang="ko">
    <link itemprop="mainEntityOfPage" href="https://anpigon.github.io/kr/@anpigon/react-native-ui">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="image" content="/images/me.jpg">
      <meta itemprop="name" content="안피곤">
      <meta itemprop="description" content="시간이 천천히 갔으면 좋겠다.">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="안피곤님의 블로그">
    </span>
      <header class="post-header">
        <h2 class="post-title" itemprop="name headline">
          [React Native] 레트로 게임 UI 만들기
        </h2>

        <div class="post-meta">
            <span class="post-meta-item">
              <span class="post-meta-item-icon">
                <i class="fa fa-calendar-o"></i>
              </span>
              <span class="post-meta-item-text">작성일</span>

              <time title="Post created: 2019-03-12 13:36:06" itemprop="dateCreated datePublished" datetime="2019-03-12T13:36:06+09:00">2019-03-12</time>
            </span>
              <span class="post-meta-item">
                <span class="post-meta-item-icon">
                  <i class="fa fa-calendar-check-o"></i>
                </span>
                <span class="post-meta-item-text">Edited on</span>
                <time title="Updated at: 2021-04-21 20:50:30" itemprop="dateModified" datetime="2021-04-21T20:50:30+09:00">2021-04-21</time>
              </span>
            <span class="post-meta-item">
              <span class="post-meta-item-icon">
                <i class="fa fa-folder-o"></i>
              </span>
              <span class="post-meta-item-text">In</span>
                <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
                  <a href="/categories/%EA%B0%9C%EB%B0%9C-%EC%9D%B4%EC%95%BC%EA%B8%B0/" itemprop="url" rel="index">
                    <span itemprop="name">개발 이야기</span>
                  </a>
                </span>
                  , 
                <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
                  <a href="/categories/%EA%B0%9C%EB%B0%9C-%EC%9D%B4%EC%95%BC%EA%B8%B0/react-native/" itemprop="url" rel="index">
                    <span itemprop="name">React Native</span>
                  </a>
                </span>
            </span>

          
            <span class="post-meta-item" title="Views">
              <span class="post-meta-item-icon">
                <i class="fa fa-users"></i>
              </span>
              <span class="post-meta-item-text">Views: </span>
              <span class="firestore-visitors-count"></span>
            </span>
  
  <span class="post-meta-item">
    
      <span class="post-meta-item-icon">
        <i class="fa fa-comment-o"></i>
      </span>
      <span class="post-meta-item-text">Disqus: </span>
    
    <a title="disqus" href="/kr/@anpigon/react-native-ui#comments" itemprop="discussionUrl">
      <span class="post-comments-count disqus-comment-count" data-disqus-identifier="/kr/@anpigon/react-native-ui" itemprop="commentCount"></span>
    </a>
  </span>
  
  

        </div>
      </header>

    
    
    
    <div class="post-body" itemprop="articleBody">

      
            <div style="margin-bottom:35px;margin-top:-20px;">
              <!-- 블로그 본문 상단 광고 -->
              <ins class="adsbygoogle"
                  style="display:block"
                  data-ad-client="ca-pub-2365531018407022"
                  data-ad-slot="3390644000"
                  data-ad-format="auto"
                  data-full-width-responsive="true"></ins>
              <script>
                  (adsbygoogle = window.adsbygoogle || []).push({});
              </script>
            </div>

        <p><img alt data-src="https://www.dafont.com/img/illustration/p/r/press_start_2p.png"><br>
<sup>Illustration © <a target="_blank" rel="noopener" href="http://www.zone38.net/font/">Codeman38</a></sup></p><p>어렸을 때 Final Fantasy와 같은 RPG 게임을 좋아했습니다. 옛날 레트로 느낌을 살려서, Final Fantasy UI 처럼 보이는 컨테이너를 만들어 봅니다.</p><p><br><center>* * *</center></p><h1 id="프로젝트-생성하기"><a class="markdownIt-Anchor" href="#프로젝트-생성하기"></a> 프로젝트 생성하기</h1><p><strong>expo-cli</strong>를 사용하여 프로젝트를 생성합니다. 프로젝트 명은 <strong>ffcontainer</strong>라고 하였습니다.</p><a id="more"></a>




<pre><code>$ expo init ffcontainer
</code></pre>
<p> </p>
<h1 id="라이브러리-설치"><a class="markdownIt-Anchor" href="#라이브러리-설치"></a> 라이브러리 설치</h1>
<p>이번에는 <strong>styled-components</strong> 모듈을 설치하여 사용해 봅니다.</p>
<pre><code>$ yarn add styled-components
</code></pre>
<p> </p>
<h2 id="ffcontainer-만들기"><a class="markdownIt-Anchor" href="#ffcontainer-만들기"></a> <strong>FFContainer</strong> 만들기</h2>
<p><code>App.js</code> 파일의 내용을 지우고 아래와 같이 작성합니다. 먼저 필요한 모듈을 <strong>import</strong> 합니다.</p>
<pre><code>import React from 'react';
import ｛ View, Text, StyleSheet ｝ from 'react-native';
import ｛ Constants, LinearGradient ｝ from 'expo';
import styled from 'styled-components';
</code></pre>
<p><br>그리고 <strong>styled-components</strong>를 사용하여, 앱 컨테이너를 담당할 <code>&lt;Container&gt;</code> 를 작성합니다. <strong>styled-components</strong>를 사용하면 다음과 같이 CSS 비슷하게 사용할 수 있습니다.</p>
<pre><code>const Container = styled.View`
  flex: 1;
  background-color: black;
  paddingTop: $｛Constants.statusBarHeight｝;
`;
</code></pre>
<p><br><strong>styled-components</strong>로 만든 <code>&lt;Container&gt;</code>가 어떻게 렌더링되는지 확인해봅니다.</p>
<pre><code>export default class App extends React.Component ｛

  render() ｛
    return (
      &lt;Container&gt;
      &lt;/Container&gt;
    );
  ｝
｝;
</code></pre>
<p><img alt data-src="https://steemitimages.com/300x0/https://user-images.githubusercontent.com/3969643/54168418-ba7a7b00-44b1-11e9-9732-dd9939ef93aa.png"></p>
<p> </p>
<p>이제 본격적으로 <strong>FFContainer</strong>를 만들어 봅니다. 아래와 같이 작성합니다.</p>
<pre><code>const FFContainer = styled.View`
  border-radius: 8;							
  border-width: 4;
  border-color: #e7dfe7;
  border-style: solid;
  background-color: #e7dfe7;	
  margin-horizontal: 10; 
  margin-vertical: 10;
`;

const styles = StyleSheet.create(｛
  FFContents: ｛
    padding: 10, 
    borderRadius: 5,
  ｝
｝);

const GRADIENT_COLOR = ['#6c6eb2', '#181870', '#000028'];

export default class App extends React.Component ｛
  render() ｛
    return (
      &lt;Container&gt;
        &lt;FFContainer&gt;
          &lt;LinearGradient 
            style=｛styles.FFContents｝
            colors=｛GRADIENT_COLOR｝&gt;
            &lt;Text style=｛｛color:'white'｝｝&gt;Hello World!&lt;/Text&gt;
          &lt;/LinearGradient&gt;
        &lt;/FFContainer&gt;
      &lt;/Container&gt;
    );
  ｝
｝;
</code></pre>
<p>아래와 같이 보여집니다.</p>
<p><img alt data-src="https://steemitimages.com/300x0/https://ipfs.busy.org/ipfs/Qmcci7iMVbsGKbvHNvFsKejJDPLg5mwUtXE8rfdPswuHVt"></p>
<p> </p>
<h2 id="fonts-적용하기"><a class="markdownIt-Anchor" href="#fonts-적용하기"></a> Fonts 적용하기</h2>
<p>이번에는 레트로 감성의 폰트를 적용해봅시다. 구글에서 제공하는 폰트 중에 <a target="_blank" rel="noopener" href="https://fonts.google.com/specimen/Press+Start+2P">Press+Start+2P</a>가 있습니다.</p>
<p><img alt data-src="https://steemitimages.com/0x0/https://ipfs.busy.org/ipfs/QmQ9DJ62YkZJfYmqw9AnKY1nJtP7mCWEvHN8tm81PCmwnz"></p>
<p><strong>Press Start 2P</strong> Font를 다운로드 합니다. <a target="_blank" rel="noopener" href="https://www.dafont.com/press-start-2p.font">[여기]</a>에서 다운로드 가능합니다.</p>
<p><br><code>App.js</code> 를 수정합니다. <strong>expo</strong>에서 Font 모듈을 추가로 import 합니다.</p>
<pre><code>import ｛ 
  Constants, 
  LinearGradient, 
  Font,       // here
｝ from 'expo';
</code></pre>
<p><br>그리고 <strong>Font.loadAsync</strong>를 사용하여 assets 폴더에 있는 Font 파일을 가져옵니다.  Font 파일 로딩이 완료되기 전에 Font 를 사용하면 에러가 발생합니다. 그래서<code>state.fontLoaded</code>로 Font 파일 로딩 완료 여부를 판단할 것 입니다.</p>
<pre><code>export default class App extends React.Component ｛

  state = ｛
    fontLoaded: false // here
  ｝

  async componentWillMount() ｛
    await Font.loadAsync(｛
      'PressStart2P': require('./assets/PressStart2P.ttf'),
    ｝);

    this.setState(｛ fontLoaded: true ｝);
  ｝

	// (...)
</code></pre>
<blockquote>
<p>expo에서 커스텀 폰트 사용방법은 <a target="_blank" rel="noopener" href="https://docs.expo.io/versions/latest/guides/using-custom-fonts/">Using Custom Fonts 문서</a>를 참고하였습니다.</p>
</blockquote>
<p><br><code>&lt;Text&gt;</code> 에 '<strong>Hello World!’</strong> 를 출력하여 Font를 확인해봅니다.</p>
<pre><code>export default class App extends React.Component ｛

	// (...)
	
  render() ｛
    if(this.state.fontLoaded) ｛
      return (
        &lt;Container&gt;
          &lt;FFContainer&gt;
            &lt;LinearGradient 
              style=｛ styles.FFContents ｝
              colors=｛ GRADIENT_COLOR ｝&gt;
              &lt;Text style=｛｛color:'white', fontFamily:'PressStart2P'｝｝&gt;Hello World!&lt;/Text&gt;
            &lt;/LinearGradient&gt;
          &lt;/FFContainer&gt;
        &lt;/Container&gt;
      );
    ｝
    return null;
  ｝
｝;
</code></pre>
<p><img alt data-src="https://steemitimages.com/300x0/https://ipfs.busy.org/ipfs/QmbepC3x61hFG82MZVGHryBwbj84dghc5C2kAqLnySVAfd"></p>
<p> </p>
<h2 id="스팀잇-프로필-화면-만들기"><a class="markdownIt-Anchor" href="#스팀잇-프로필-화면-만들기"></a> 스팀잇 프로필 화면 만들기</h2>
<p>스팀잇 프로필을 아래와 같은 UI로 만들어 보았습니다. 화면에서 명성(Reputation)을 <strong>LV</strong>라고 표현해보았습니다. 게임 화면처럼 보이나요? ㅎㅎ</p>
<p><img alt data-src="https://steemitimages.com/400x0/https://ipfs.busy.org/ipfs/QmcSsXhtNEsspdi2tDXecvYaSxGwgkhpVoEZXvThS6n9Sg"></p>
<p><br>위 코드 내용은 <a target="_blank" rel="noopener" href="https://snack.expo.io/@markan/ffcontainer">snack.expo.io</a>에서 확인할 수 있습니다.<br>
<a target="_blank" rel="noopener" href="https://snack.expo.io/@markan/ffcontainer"><img alt data-src="https://steemitimages.com/0x0/https://ipfs.busy.org/ipfs/QmTVnuTbditvDLhggrrfkCVCgdwnU1MyveLfqrjbyzHvfk"></a></p>
<p>여기까지 읽어주셔서 감사합니다.</p>
<hr>
<h5 id="sub-sponsored-powered-by-dclick-sub"><a class="markdownIt-Anchor" href="#sub-sponsored-powered-by-dclick-sub"></a> <sub> <strong>Sponsored ( Powered by <a target="_blank" rel="noopener" href="https://www.dclick.io">dclick</a> )</strong> </sub></h5>
<p><a target="_blank" rel="noopener" href="https://api.dclick.io/v1/c?x=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjIjoiYW5waWdvbiIsInMiOiJyZWFjdC1uYXRpdmUtdWkiLCJhIjpbImktMTk1Il0sInVybCI6Imh0dHBzOi8vd3d3LmRjbGljay5pby9tb25ldGl6ZSIsImlhdCI6MTU1MjU1NjI0NCwiZXhwIjoxODY3OTE2MjQ0fQ.FiO_qBavmlNqL0xUBnJ6Fabwh725lf-xt4VZxcIMtfQ"><img alt="dclick-imagead" data-src="https://s3.ap-northeast-2.amazonaws.com/dclick/image/dclick/1552477485946.png"></a></p>


    </div>

    
    
    

      <footer class="post-footer">
          <div class="post-tags">
              <a href="/tags/react-native/" rel="tag"># React Native</a>
          </div>

        
  <div class="post-widgets">
    <div class="wp_rating">
      <div id="wpac-rating"></div>
    </div>
  </div>

          <div class="post-nav">
            <div class="post-nav-next post-nav-item">
                <a href="/kr/@steemory/3-uzxnopv1" rel="next" title="도서관에서 책 3권을 빌렸습니다. 효율적인 독서와 영어 공부, 그리고 글쓰기를 잘하고 싶은 욕심이 생겼습니다.">
                  <i class="fa fa-chevron-left"></i> 도서관에서 책 3권을 빌렸습니다. 효율적인 독서와 영어 공부, 그리고 글쓰기를 잘하고 싶은 욕심이 생겼습니다.
                </a>
            </div>

            <span class="post-nav-divider"></span>

            <div class="post-nav-prev post-nav-item">
                <a href="/kr/@steemory/tpdjrulk" rel="prev" title="인사이드아웃 캐릭터 그림">
                  인사이드아웃 캐릭터 그림 <i class="fa fa-chevron-right"></i>
                </a>
            </div>
          </div>
      </footer>
    
  </article>
  
  
  

  </div>


          </div>
          
    
  <div class="comments" id="comments">
    <div id="disqus_thread">
      <noscript>Please enable JavaScript to view the comments powered by Disqus.</noscript>
    </div>
  </div>
  

        </div>
          
  
  <div class="toggle sidebar-toggle">
    <span class="toggle-line toggle-line-first"></span>
    <span class="toggle-line toggle-line-middle"></span>
    <span class="toggle-line toggle-line-last"></span>
  </div>

  <aside class="sidebar">
    <div class="sidebar-inner">

      <ul class="sidebar-nav motion-element">
        <li class="sidebar-nav-toc">
          목차
        </li>
        <li class="sidebar-nav-overview">
          흝어보기
        </li>
      </ul>

      <!--noindex-->
      <div class="post-toc-wrap sidebar-panel">
          <div class="post-toc motion-element"><ol class="nav"><li class="nav-item nav-level-1"><a class="nav-link" href="#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0"><span class="nav-number">1.</span> <span class="nav-text"> 프로젝트 생성하기</span></a></li><li class="nav-item nav-level-1"><a class="nav-link" href="#%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%84%A4%EC%B9%98"><span class="nav-number">2.</span> <span class="nav-text"> 라이브러리 설치</span></a><ol class="nav-child"><li class="nav-item nav-level-2"><a class="nav-link" href="#ffcontainer-%EB%A7%8C%EB%93%A4%EA%B8%B0"><span class="nav-number">2.1.</span> <span class="nav-text"> FFContainer 만들기</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#fonts-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0"><span class="nav-number">2.2.</span> <span class="nav-text"> Fonts 적용하기</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%EC%8A%A4%ED%8C%80%EC%9E%87-%ED%94%84%EB%A1%9C%ED%95%84-%ED%99%94%EB%A9%B4-%EB%A7%8C%EB%93%A4%EA%B8%B0"><span class="nav-number">2.3.</span> <span class="nav-text"> 스팀잇 프로필 화면 만들기</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#sub-sponsored-powered-by-dclick-sub"><span class="nav-number">2.3.0.0.1.</span> <span class="nav-text">  Sponsored ( Powered by dclick ) </span></a></li></ol></li></ol></li></ol></li></ol></li></ol></div>
      </div>
      <!--/noindex-->

      <div class="site-overview-wrap sidebar-panel">
        <div class="site-author motion-element" itemprop="author" itemscope itemtype="http://schema.org/Person">
  <img class="site-author-image" itemprop="image" alt="안피곤"
    src="/images/me.jpg">
  <p class="site-author-name" itemprop="name">안피곤</p>
  <div class="site-description" itemprop="description">시간이 천천히 갔으면 좋겠다.</div>
</div>
<div class="site-state-wrap motion-element">
  <nav class="site-state">
      <div class="site-state-item site-state-posts">
          <a href="/archives/">
        
          <span class="site-state-item-count">325</span>
          <span class="site-state-item-name">포스트</span>
        </a>
      </div>
      <div class="site-state-item site-state-categories">
            <a href="/categories/">
          
        <span class="site-state-item-count">25</span>
        <span class="site-state-item-name">카테고리</span></a>
      </div>
      <div class="site-state-item site-state-tags">
            <a href="/tags/">
          
        <span class="site-state-item-count">139</span>
        <span class="site-state-item-name">태그</span></a>
      </div>
  </nav>
</div>
  <div class="links-of-author motion-element">
      <span class="links-of-author-item">
        <a href="https://github.com/anpigon" title="GitHub &rarr; https://github.com/anpigon" rel="noopener" target="_blank"><i class="fa fa-fw fa-github"></i>GitHub</a>
      </span>
      <span class="links-of-author-item">
        <a href="mailto:markan82@gmail.com" title="E-Mail &rarr; mailto:markan82@gmail.com" rel="noopener" target="_blank"><i class="fa fa-fw fa-envelope"></i>E-Mail</a>
      </span>
  </div>



      </div>
          <!-- 정사각형 광고 -->
          <div style="margin-top: 15px;">
            <ins class="adsbygoogle"
                style="display:block"
                data-ad-client="ca-pub-2365531018407022"
                data-ad-slot="7521850306"
                data-ad-format="auto"
                data-full-width-responsive="true"></ins>
            <script>
                (adsbygoogle = window.adsbygoogle || []).push({});
            </script>
          </div>
    </div>
  </aside>
  <div id="sidebar-dimmer">3</div>



      </div>
    </main>

    <footer class="footer">
      <div class="footer-inner">
        

<div class="copyright">
  
  &copy; 
  <span itemprop="copyrightYear">2021</span>
  <span class="with-love">
    <i class="fa fa-user"></i>
  </span>
  <span class="author" itemprop="copyrightHolder">안피곤</span>
</div>
  <div class="powered-by">Powered by <a href="https://hexo.io" class="theme-link" rel="noopener" target="_blank">Hexo</a> v5.4.0
  </div>
  <span class="post-meta-divider">|</span>
  <div class="theme-info">Theme – <a href="https://theme-next.org" class="theme-link" rel="noopener" target="_blank">NexT.Gemini</a> v7.4.2
  </div>

        




  <script src="https://www.gstatic.com/firebasejs/6.3.3/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/6.3.3/firebase-firestore.js"></script>
  <script>
    firebase.initializeApp({
      apiKey: 'AIzaSyA4QZWCWb3IuIHjbkAmO0ttIM2b-qtLTP8',
      projectId: 'next-blog-8f9a0'
    });

    function getCount(doc, increaseCount) {
      // IncreaseCount will be false when not in article page

      return doc.get().then(d => {
        var count = 0;
        if (!d.exists) { // Has no data, initialize count
          if (increaseCount) {
            doc.set({
              count: 1
            });
            count = 1;
          }
        } else { // Has data
          count = d.data().count;
          if (increaseCount) {
            // If first view this article
            doc.set({ // Increase count
              count: count + 1
            });
            count++;
          }
        }

        return count;
      });
    }

    function appendCountTo(el) {
      return count => {
        el.innerText = count;
      }
    }
  </script>
  <script pjax>
    (function() {
      var db = firebase.firestore();
      var articles = db.collection('articles');

      if (CONFIG.page.isPost) { // Is article page
        var title = document.querySelector('.post-title').innerText.trim();
        var doc = articles.doc(title);
        var increaseCount = true;
        if (localStorage.getItem(title)) {
          increaseCount = false;
        } else {
          // Mark as visited
          localStorage.setItem(title, true);
        }
        getCount(doc, increaseCount).then(appendCountTo(document.querySelector('.firestore-visitors-count')));
      } else if (CONFIG.page.isHome) { // Is index page
        var promises = [...document.querySelectorAll('.post-title')].map(element => {
          var title = element.innerText.trim();
          var doc = articles.doc(title);
          return getCount(doc);
        });
        Promise.all(promises).then(counts => {
          var metas = document.querySelectorAll('.firestore-visitors-count');
          counts.forEach((val, idx) => {
            appendCountTo(metas[idx])(val);
          });
        });
      }
    })();
  </script>








        
      </div>
    </footer>
  </div>

  
  <script src="/lib/anime.min.js"></script>
  <script src="//cdn.jsdelivr.net/gh/theme-next/theme-next-pjax@0/pjax.min.js"></script>
  <script src="//cdn.jsdelivr.net/npm/jquery@3/dist/jquery.min.js"></script>
  <script src="//cdn.jsdelivr.net/gh/fancyapps/fancybox@3/dist/jquery.fancybox.min.js"></script>
  <script src="//cdn.jsdelivr.net/npm/lozad@1/dist/lozad.min.js"></script>
  <script src="/lib/velocity/velocity.min.js"></script>
  <script src="/lib/velocity/velocity.ui.min.js"></script>

<script src="/js/utils.js"></script>

<script src="/js/motion.js"></script>


<script src="/js/schemes/pisces.js"></script>


<script src="/js/next-boot.js"></script>

  <script>
var pjax = new Pjax({
  selectors: [
    'head title',
    '#page-configurations',
    '.content-wrap',
    '.post-toc-wrap',
    '#pjax'
  ],
  switches: {
    '.post-toc-wrap': Pjax.switches.innerHTML
  },
  analytics: false,
  cacheBust: false,
  scrollTo : !CONFIG.bookmark.enable
});

window.addEventListener('pjax:success', () => {
  document.querySelectorAll('script[pjax], script#page-configurations, #pjax script').forEach(element => {
    var code = element.text || element.textContent || element.innerHTML || '';
    var parent = element.parentNode;
    parent.removeChild(element);
    var script = document.createElement('script');
    if (element.id) {
      script.id = element.id;
    }
    if (element.className) {
      script.className = element.className;
    }
    if (element.type) {
      script.type = element.type;
    }
    if (element.src) {
      script.src = element.src;
      // Force synchronous loading of peripheral JS.
      script.async = false;
    }
    if (element.getAttribute('pjax') !== null) {
      element.setAttribute('pjax', '');
    }
    if (code !== '') {
      script.appendChild(document.createTextNode(code));
    }
    parent.appendChild(script);
  });
  NexT.boot.refresh();
  // Define Motion Sequence & Bootstrap Motion.
  if (CONFIG.motion.enable) {
    NexT.motion.integrator
      .init()
      .add(NexT.motion.middleWares.postList)
      .bootstrap();
  }
  NexT.utils.updateSidebarPosition();
});
</script>




  



  <script pjax>
  if (CONFIG.page.isPost) {
    wpac_init = window.wpac_init || [];
    wpac_init.push({
      widget: 'Rating',
      id: 21712,
      el: 'wpac-rating',
      color: 'fc6423'
    });
    (function() {
      if ('WIDGETPACK_LOADED' in window) return;
      WIDGETPACK_LOADED = true;
      var mc = document.createElement('script');
      mc.type = 'text/javascript';
      mc.async = true;
      mc.src = '//embed.widgetpack.com/widget.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(mc, s.nextSibling);
    })();
  }
  </script>

  
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/instantsearch.js@2.4.1/dist/instantsearch.min.css">
<script src="https://cdn.jsdelivr.net/npm/instantsearch.js@2.4.1/dist/instantsearch.js"></script>
<script src="/js/algolia-search.js"></script>














    <div id="pjax">

  

  

<script>
  function loadCount() {
    var d = document, s = d.createElement('script');
    s.src = 'https://anpigon-github-io.disqus.com/count.js';
    s.id = 'dsq-count-scr';
    (d.head || d.body).appendChild(s);
  }
  // defer loading until the whole page loading is completed
  window.addEventListener('load', loadCount, false);
</script>
<script>
  function loadComments() {
    if (window.DISQUS) {
      DISQUS.reset({
        reload: true,
        config: {page: {
            url: "https://anpigon.github.io/kr/@anpigon/react-native-ui",
            identifier: "/kr/@anpigon/react-native-ui",
            title: "[React Native] 레트로 게임 UI 만들기"
          }
        }
      });
    } else {
      var d = document, s = d.createElement('script');
      s.src = 'https://anpigon-github-io.disqus.com/embed.js';
      s.setAttribute('data-timestamp', '' + +new Date());
      (d.head || d.body).appendChild(s);
    }
  }
    (function() {
      var offsetTop = document.getElementById('comments').offsetTop - window.innerHeight;
      if (offsetTop <= 0) {
        // load directly when there's no a scrollbar
        window.addEventListener('load', loadComments, false);
      } else {
        var disqus_scroll = () => {
          // offsetTop may changes because of manually resizing browser window or lazy loading images.
          var offsetTop = document.getElementById('comments').offsetTop - window.innerHeight;
          var scrollTop = window.scrollY;

          // pre-load comments a bit? (margin or anything else)
          if (offsetTop - scrollTop < 60) {
            window.removeEventListener('scroll', disqus_scroll);
            loadComments();
          }
        };
        window.addEventListener('scroll', disqus_scroll);
      }
    })();
  
</script>

    </div>
</body>
</html>
