<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=2">
<meta name="theme-color" content="#222">
<meta name="generator" content="Hexo 5.4.0">
  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32-next.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/images/favicon-16x16-next.png">
  <link rel="mask-icon" href="/images/logo.svg" color="#222">
  <meta name="google-site-verification" content="yfKOiBPD8WlKH3NPG_CG1zr4MsCgCG1YVdGKhMS2CKc">

<link rel="stylesheet" href="/css/main.css">

<link rel="stylesheet" href="//fonts.googleapis.com/css?family=Lato:300,300italic,400,400italic,700,700italic|Noto Serif KR:300,300italic,400,400italic,700,700italic&display=swap&subset=latin,latin-ext">
<link rel="stylesheet" href="/lib/font-awesome/css/font-awesome.min.css">
  <link rel="stylesheet" href="//cdn.jsdelivr.net/gh/fancyapps/fancybox@3/dist/jquery.fancybox.min.css">


<script id="hexo-configurations">
  var NexT = window.NexT || {};
  var CONFIG = {
    root: '/',
    scheme: 'Gemini',
    version: '7.4.2',
    exturl: false,
    sidebar: {"position":"left","display":"post","offset":12,"onmobile":false},
    copycode: {"enable":false,"show_result":false,"style":null},
    back2top: {"enable":true,"sidebar":false,"scrollpercent":false},
    bookmark: {"enable":false,"color":"#222","save":"auto"},
    fancybox: true,
    mediumzoom: false,
    lazyload: true,
    pangu: false,
    algolia: {
      appID: 'YY693DUDAI',
      apiKey: 'db449d453b150820f66e7bc3d4523a17',
      indexName: 'my-hexo-blog',
      hits: {"per_page":10},
      labels: {"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}
    },
    localsearch: {"enable":false,"trigger":"auto","top_n_per_article":1,"unescape":false,"preload":false},
    path: '',
    motion: {"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},
    translation: {
      copy_button: '복사',
      copy_success: 'Copied',
      copy_failure: 'Copy failed'
    },
    sidebarPadding: 40
  };
</script>

  <meta name="description" content="안녕하세요. @anpigon 입니다.추석 연휴 기간 동안 스팀잇을 대신 관리해주는 봇이 있으면 좋겠다는 생각을 했습니다. 그래서 “댓글에 자동으로 답변해주는 봇이 있으면 어떨까?” 하는 생각에 만들어 보았습니다. 우선 댓글 자동 답변 봇을 구현하기 전에 챗봇에 대해서 짧게 이야기하고 시작하겠습니다.">
<meta property="og:type" content="article">
<meta property="og:title" content="[Steem Project #2] 댓글 자동 답변봇">
<meta property="og:url" content="https://anpigon.github.io/kr/@anpigon/steem-project-2">
<meta property="og:site_name" content="안피곤님의 블로그">
<meta property="og:description" content="안녕하세요. @anpigon 입니다.추석 연휴 기간 동안 스팀잇을 대신 관리해주는 봇이 있으면 좋겠다는 생각을 했습니다. 그래서 “댓글에 자동으로 답변해주는 봇이 있으면 어떨까?” 하는 생각에 만들어 보았습니다. 우선 댓글 자동 답변 봇을 구현하기 전에 챗봇에 대해서 짧게 이야기하고 시작하겠습니다.">
<meta property="og:locale" content="ko_KR">
<meta property="og:image" content="https://i.imgur.com/tYAm1Lc.jpg">
<meta property="og:image" content="https://imgur.com/e04Xmwn.png">
<meta property="og:image" content="https://imgur.com/9s0si1E.png">
<meta property="og:image" content="https://i.imgur.com/gA0Iojt.png">
<meta property="article:published_time" content="2018-09-21T06:37:45.000Z">
<meta property="article:modified_time" content="2021-04-21T11:50:30.081Z">
<meta property="article:author" content="안피곤">
<meta property="article:tag" content="스팀잇">
<meta property="article:tag" content="자동화">
<meta property="article:tag" content="steemit">
<meta property="article:tag" content="챗봇">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="https://i.imgur.com/tYAm1Lc.jpg">

<link rel="canonical" href="https://anpigon.github.io/kr/@anpigon/steem-project-2">


<script id="page-configurations">
  // https://hexo.io/docs/variables.html
  CONFIG.page = {
    sidebar: "",
    isHome: false,
    isPost: true,
    isPage: false,
    isArchive: false
  };
</script>

  <title>[Steem Project #2] 댓글 자동 답변봇 | 안피곤님의 블로그</title>
  
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-20589042-10"></script>
    <script pjax>
      var host = window.location.hostname;
      if (host !== "localhost" || !true) {
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', 'UA-20589042-10');
      }
    </script>






  
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({
          google_ad_client: "ca-pub-2365531018407022",
          enable_page_level_ads: false
     });
</script>
  <noscript>
  <style>
  .use-motion .brand,
  .use-motion .menu-item,
  .sidebar-inner,
  .use-motion .post-block,
  .use-motion .pagination,
  .use-motion .comments,
  .use-motion .post-header,
  .use-motion .post-body,
  .use-motion .collection-header { opacity: initial; }

  .use-motion .site-title,
  .use-motion .site-subtitle {
    opacity: initial;
    top: initial;
  }

  .use-motion .logo-line-before i { left: initial; }
  .use-motion .logo-line-after i { right: initial; }
  </style>
</noscript>

<link rel="alternate" href="/atom.xml" title="안피곤님의 블로그" type="application/atom+xml">
</head>

<body itemscope itemtype="http://schema.org/WebPage">
  <div class="container use-motion">
    <div class="headband"></div>

    <header class="header" itemscope itemtype="http://schema.org/WPHeader">
      <div class="header-inner"><div class="site-brand-container">
  <div class="site-meta">

    <div>
      <a href="/" class="brand" rel="start">
        <span class="logo-line-before"><i></i></span>
        <span class="site-title">안피곤님의 블로그</span>
        <span class="logo-line-after"><i></i></span>
      </a>
    </div>
        <h1 class="site-subtitle" itemprop="description">코딩, 독서, 여행, 영화, 맛집</h1>
      
  </div>

  <div class="site-nav-toggle">
    <div class="toggle" aria-label="Toggle navigation bar">
      <span class="toggle-line toggle-line-first"></span>
      <span class="toggle-line toggle-line-middle"></span>
      <span class="toggle-line toggle-line-last"></span>
    </div>
  </div>
</div>


<nav class="site-nav">
  
  <ul id="menu" class="menu">
        <li class="menu-item menu-item-home">

    <a href="/" rel="section"><i class="fa fa-fw fa-home"></i>홈</a>

  </li>
        <li class="menu-item menu-item-about">

    <a href="/about/" rel="section"><i class="fa fa-fw fa-user"></i>About</a>

  </li>
        <li class="menu-item menu-item-tags">

    <a href="/tags/" rel="section"><i class="fa fa-fw fa-tags"></i>태그<span class="badge">139</span></a>

  </li>
        <li class="menu-item menu-item-categories">

    <a href="/categories/" rel="section"><i class="fa fa-fw fa-th"></i>카테고리<span class="badge">25</span></a>

  </li>
        <li class="menu-item menu-item-archives">

    <a href="/archives/" rel="section"><i class="fa fa-fw fa-archive"></i>아카이브<span class="badge">325</span></a>

  </li>
      <li class="menu-item menu-item-search">
        <a role="button" class="popup-trigger"><i class="fa fa-search fa-fw"></i>검색
        </a>
      </li>
  </ul>

</nav>
  <div class="site-search">
    <div class="popup search-popup">
    <div class="search-header">
  <span class="search-icon">
    <i class="fa fa-search"></i>
  </span>
  <div class="search-input" id="search-input"></div>
  <span class="popup-btn-close">
    <i class="fa fa-times-circle"></i>
  </span>
</div>
<div class="algolia-results">
  <div id="algolia-stats"></div>
  <div id="algolia-hits"></div>
  <div id="algolia-pagination" class="algolia-pagination"></div>
</div>

  
</div>
<div class="search-pop-overlay"></div>

  </div>
</div>
    </header>

    
  <div class="back-to-top">
    <i class="fa fa-arrow-up"></i>
    <span>0%</span>
  </div>
  <div class="reading-progress-bar"></div>


    <main class="main">
      <div class="main-inner">
        <div class="content-wrap">
          

          <div class="content">
            

  <div class="posts-expand">
      
  
  
  <article itemscope itemtype="http://schema.org/Article" class="post-block " lang="ko">
    <link itemprop="mainEntityOfPage" href="https://anpigon.github.io/kr/@anpigon/steem-project-2">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="image" content="/images/me.jpg">
      <meta itemprop="name" content="안피곤">
      <meta itemprop="description" content="시간이 천천히 갔으면 좋겠다.">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="안피곤님의 블로그">
    </span>
      <header class="post-header">
        <h2 class="post-title" itemprop="name headline">
          [Steem Project #2] 댓글 자동 답변봇
        </h2>

        <div class="post-meta">
            <span class="post-meta-item">
              <span class="post-meta-item-icon">
                <i class="fa fa-calendar-o"></i>
              </span>
              <span class="post-meta-item-text">작성일</span>

              <time title="Post created: 2018-09-21 15:37:45" itemprop="dateCreated datePublished" datetime="2018-09-21T15:37:45+09:00">2018-09-21</time>
            </span>
              <span class="post-meta-item">
                <span class="post-meta-item-icon">
                  <i class="fa fa-calendar-check-o"></i>
                </span>
                <span class="post-meta-item-text">Edited on</span>
                <time title="Updated at: 2021-04-21 20:50:30" itemprop="dateModified" datetime="2021-04-21T20:50:30+09:00">2021-04-21</time>
              </span>
            <span class="post-meta-item">
              <span class="post-meta-item-icon">
                <i class="fa fa-folder-o"></i>
              </span>
              <span class="post-meta-item-text">In</span>
                <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
                  <a href="/categories/%EA%B0%9C%EB%B0%9C-%EC%9D%B4%EC%95%BC%EA%B8%B0/" itemprop="url" rel="index">
                    <span itemprop="name">개발 이야기</span>
                  </a>
                </span>
                  , 
                <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
                  <a href="/categories/%EA%B0%9C%EB%B0%9C-%EC%9D%B4%EC%95%BC%EA%B8%B0/%EC%8A%A4%ED%8C%80%EC%9E%87-steemit/" itemprop="url" rel="index">
                    <span itemprop="name">스팀잇(Steemit)</span>
                  </a>
                </span>
            </span>

          
            <span class="post-meta-item" title="Views">
              <span class="post-meta-item-icon">
                <i class="fa fa-users"></i>
              </span>
              <span class="post-meta-item-text">Views: </span>
              <span class="firestore-visitors-count"></span>
            </span>
  
  <span class="post-meta-item">
    
      <span class="post-meta-item-icon">
        <i class="fa fa-comment-o"></i>
      </span>
      <span class="post-meta-item-text">Disqus: </span>
    
    <a title="disqus" href="/kr/@anpigon/steem-project-2#comments" itemprop="discussionUrl">
      <span class="post-comments-count disqus-comment-count" data-disqus-identifier="/kr/@anpigon/steem-project-2" itemprop="commentCount"></span>
    </a>
  </span>
  
  

        </div>
      </header>

    
    
    
    <div class="post-body" itemprop="articleBody">

      
            <div style="margin-bottom:35px;margin-top:-20px;">
              <!-- 블로그 본문 상단 광고 -->
              <ins class="adsbygoogle"
                  style="display:block"
                  data-ad-client="ca-pub-2365531018407022"
                  data-ad-slot="3390644000"
                  data-ad-format="auto"
                  data-full-width-responsive="true"></ins>
              <script>
                  (adsbygoogle = window.adsbygoogle || []).push({});
              </script>
            </div>

        <p><img alt data-src="https://i.imgur.com/tYAm1Lc.jpg"></p><p>안녕하세요. @anpigon 입니다.</p><p>추석 연휴 기간 동안 스팀잇을 대신 관리해주는 봇이 있으면 좋겠다는 생각을 했습니다. 그래서 “댓글에 자동으로 답변해주는 봇이 있으면 어떨까?” 하는 생각에 만들어 보았습니다. 우선 댓글 자동 답변 봇을 구현하기 전에 챗봇에 대해서 짧게 이야기하고 시작하겠습니다.</p><a id="more"></a>


<p><br><hr><br></p>
<h1 id="챗봇chat-bot"><a class="markdownIt-Anchor" href="#챗봇chat-bot"></a> 챗봇(Chat Bot)</h1>
<p>챗봇을 크게 두 종류로 구분하면 데이터를 직접 입력하여 구현하는 지도학습 방식과 스스로 학습하는 비지도학습 방식이 있다. 지도학습에는 대표적으로 심심이와 뱅킹 4대 챗봇(KB 리브똑똑, 신한 쏠 챗봇, 우리 위비톡, KEB 하나톡)이 있다. 그리고 비지도학습에는 대표적으로 2016년 큰이슈가 되었던 마이크로소프트의 <a target="_blank" rel="noopener" href="https://namu.wiki/w/%EF%BC%85ED%EF%BC%8585%EF%BC%858C%EF%BC%85EC%EF%BC%859D%EF%BC%85B4(%EF%BC%85EC%EF%BC%859D%EF%BC%85B8%EF%BC%85EA%EF%BC%85B3%EF%BC%85B5%EF%BC%85EC%EF%BC%85A7%EF%BC%8580%EF%BC%85EB%EF%BC%858A%EF%BC%85A5)">테이</a>와 현재는 일본 마이크로소프트에서 개발한 <a target="_blank" rel="noopener" href="https://www.rinna.jp">린나</a>가 있다. 그리고 구현 방식에 따라서 더 세분화할 수도 있다. 최근 트렌드는  규칙 기반(Rule-base)과 딥러닝을 혼용하는 하이브리드방식을 많이 사용하는 것 같다.</p>
<p>우리는 챗봇 엔진을 직접 구현할 필요가 없다. 인공지능으로 유명한 기업에서 챗봇을 쉽게 개발할 수 있는 플랫폼을 서비스하고 있기 때문이다. 게다가 무료 서비스도 제공하고 있다. 대표적으로 타로챗봇으로 유명해진 <a target="_blank" rel="noopener" href="https://chatfuel.com/">Chatfuel</a>과 구글의 <a target="_blank" rel="noopener" href="https://dialogflow.com/">Dialogflow</a>,  IBM의 <a target="_blank" rel="noopener" href="https://watson-conversation.ng.bluemix.net/">왓슨 컨버세이션</a>, 아마존의 <a target="_blank" rel="noopener" href="https://aws.amazon.com/ko/lex/">알렉사</a>,  LG CNS의 <a target="_blank" rel="noopener" href="https://danbee.ai/">단비</a> 등등이 있다.</p>
<br>
<p>챗봇에 대해서 더 이야기하고 싶지만, 주제를 너무 벗어나는 것 같아서 아래 2가지 용어만 간단하게 설명하고 넘어가자.</p>
<ul>
<li>
<p><strong>인텐트(Intent)</strong>: 사용자가 말하는 의도를 파악하고, 그에 알맞는 응답을 한다.</p>
</li>
<li>
<p><strong>엔티티(Entity)</strong>: 사용자가 입력한 문장에서 구성 요소를 식별한다.</p>
</li>
</ul>
<br>
<p>이 글에서는 구글의 <strong>Dialogflow</strong> 플랫폼을 사용하여 간단한 챗봇을 만드는 방법을 설명한다. <strong>Dialogflow</strong>은 구글 계정을 가지고 있으면 회원가입 없이 바로 사용할 수 있다.</p>
<ul>
<li><strong>Dialogflow Console</strong>: <a target="_blank" rel="noopener" href="https://console.dialogflow.com">https://console.dialogflow.com</a></li>
</ul>
<p><br><hr><br></p>
<h3 id="dialogflow에서-봇-생성하기"><a class="markdownIt-Anchor" href="#dialogflow에서-봇-생성하기"></a> Dialogflow에서 봇 생성하기</h3>
<p>메뉴에서 <strong>Create new agent</strong>를 선택한다. 그리고 봇 이름(Agent name)을 입력한다. 기본 언어(Default Language)에서 원하는 언어를 선택한다. <strong>CREAET</strong> 버튼을 누르고 잠시 기다리면 봇 생성이 완료된다.</p>
<p><img alt data-src="https://imgur.com/e04Xmwn.png"></p>
<br>
<h3 id="인텐트-등록하기"><a class="markdownIt-Anchor" href="#인텐트-등록하기"></a> 인텐트 등록하기</h3>
<p>봇을 생성하고 인텐트(Intents) 메뉴에 들어가면 기본적으로 2개의 인텐트가 샘플로 등록되어있다. <strong>Default Fallback Intent</strong>는 사용자의 의도 분석에 실패한 경우 해당 인텐트에 정의된 응답을 반환한다. 그리고 <strong>Default Welcome Intent</strong>에 들어가보면 <q>안녕</q>, <q>반가워</q> 처럼 인삿말이 정의되어있다. 인텐트를 추가하고 싶으면 <strong>CREATE INTENT</strong> 버튼을 누르면 된다.</p>
<p><img alt data-src="https://imgur.com/9s0si1E.png"></p>
<blockquote>
<p>저도 <strong>Dialogflow</strong>는 익숙하지 않아서 쉽게 설명하기가 어렵습니다. <strong>Dialogflow</strong>의 자세한 사용방법은 <a target="_blank" rel="noopener" href="https://dialogflow.com/docs/">https://dialogflow.com/docs/</a> 문서를 참고하시기 바랍니다.</p>
</blockquote>
<p><br><hr><br></p>
<h1 id="스팀잇-댓글-자동-응답봇-구현하기"><a class="markdownIt-Anchor" href="#스팀잇-댓글-자동-응답봇-구현하기"></a> 스팀잇 댓글 자동 응답봇 구현하기</h1>
<p>이제 자바스크립트로 댓글 자동 응답봇을 구현해보자.</p>
<br>
<h3 id="dialogflow-api-연동하기"><a class="markdownIt-Anchor" href="#dialogflow-api-연동하기"></a> Dialogflow API 연동하기</h3>
<p>API연동에 필요한 <strong>Client Access Token</strong> 키는 Agent 설정 페이지에서 확인 할 수 있다.</p>
<p><img alt data-src="https://i.imgur.com/gA0Iojt.png"></p>
<p><br>아래와 같이 <code>dialogflow()</code> 함수를 구현한다.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> axios = <span class="built_in">require</span>(<span class="string">&#x27;axios&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dialogflow</span>(<span class="params">id, text</span>) ｛</span></span><br><span class="line"><span class="function">    <span class="title">const</span> <span class="title">url</span> = &#x27;<span class="title">https</span>://<span class="title">api</span>.<span class="title">dialogflow</span>.<span class="title">com</span>/<span class="title">v1</span>/<span class="title">query</span>?<span class="title">v</span>=20150910&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> clientAccessToken = <span class="string">&#x27;dialogflow 액세스키는 여기에&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> headers = ｛</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json; charset=utf-8&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">`Bearer $｛clientAccessToken｝`</span></span><br><span class="line">    ｝</span><br><span class="line">    <span class="keyword">const</span> query = ｛</span><br><span class="line">        <span class="string">&#x27;sessionId&#x27;</span> : id,</span><br><span class="line">        <span class="string">&#x27;query&#x27;</span> : text,</span><br><span class="line">        <span class="string">&#x27;lang&#x27;</span>: <span class="string">&#x27;ko&#x27;</span></span><br><span class="line">    ｝</span><br><span class="line">    <span class="keyword">return</span> axios.post(url, query, ｛ headers: headers ｝).then(<span class="function">(<span class="params">｛ data ｝</span>) =&gt;</span> ｛</span><br><span class="line">      <span class="keyword">if</span>(data.status.code === <span class="number">200</span>) ｛</span><br><span class="line">        <span class="keyword">return</span> data.result.fulfillment.speech;</span><br><span class="line">      ｝</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(data);</span><br><span class="line">    ｝);</span><br><span class="line">｝ </span><br></pre></td></tr></table></figure>
<p><br><code>dialogflow()</code>함수에 **‘안녕’**을 입력하여 테스트 해보자. 그럼 Welcome 인텐트에 정의되어 있는 응답을 출력하는 것을 확인 할 수 있다.</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">dialogflow</span><span class="params">(<span class="string">&#x27;anpigon&#x27;</span>, <span class="string">&#x27;안녕&#x27;</span>)</span></span><span class="selector-class">.then</span>(r =&gt; console<span class="selector-class">.log</span>(r))</span><br><span class="line"><span class="comment">// 안녕!</span></span><br></pre></td></tr></table></figure>
<br>
<h1 id="댓글-모니터링-하기"><a class="markdownIt-Anchor" href="#댓글-모니터링-하기"></a> 댓글 모니터링 하기</h1>
<p><strong>steemjs</strong>는 오퍼레이션을 모니터링 할 수 있는 <code>streamOperations()</code> 함수를 제공하고 있다. <strong>streamOperations</strong> 함수는 발생하는 모든 오퍼레이션을 모니터링한다. 그 오퍼레이션 중에서 <code>opcode</code>가 <strong>comment</strong>이고 <code>title</code>가 빈 값이 면 댓글이라고 보면된다.</p>
<p>그러나 발생하는 댓글 중에서 내가 작성한 글(<code>parent_author === username</code>)에 등록된 댓글만 확인하도록 한다. 명심해야 할 것은 자동응답봇이 댓글달고 자기가 등록한 댓글에 또 댓글달고 또 댓글… 댓글… 이런 꼴을 보지 않으려면 <code>author !== username</code> 조건을 반드시 넣어줘야 한다.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">steem.api.streamOperations(<span class="function">(<span class="params">err, [opcode, op]</span>) =&gt;</span> ｛</span><br><span class="line">  <span class="keyword">if</span>(!err &amp;&amp; opcode === <span class="string">&#x27;comment&#x27;</span> &amp;&amp; op.title === <span class="string">&#x27;&#x27;</span>) ｛</span><br><span class="line">    <span class="keyword">const</span> ｛ parent_author, parent_permlink, author, permlink, body｝ = op;    </span><br><span class="line">    <span class="keyword">if</span>(parent_author === username &amp;&amp; author !== username) ｛</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">`댓글: $｛body｝ by @$｛author｝`</span>);    </span><br><span class="line">    ｝      </span><br><span class="line">  ｝    </span><br><span class="line">｝);</span><br></pre></td></tr></table></figure>
<br>
<h1 id="최종-소스"><a class="markdownIt-Anchor" href="#최종-소스"></a> 최종 소스</h1>
<p>자바스크립트로 구현된 최종 코드는 다음과 같다. 참고로 아래 코드는 이전에 설명했던 <a target="_blank" rel="noopener" href="https://play.google.com/store/apps/details?id=io.tempage.dorynode">Dory앱</a>에서도 동작합니다.</p>
<h6 id="자동-응답봇-최종-소스"><a class="markdownIt-Anchor" href="#자동-응답봇-최종-소스"></a> 자동 응답봇 최종 소스</h6>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> steem = <span class="built_in">require</span>(<span class="string">&#x27;steem&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> axios = <span class="built_in">require</span>(<span class="string">&#x27;axios&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> username = process.env.username</span><br><span class="line"><span class="keyword">const</span> wif = process.env.wif</span><br><span class="line"></span><br><span class="line"><span class="comment">// dialogflow</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dialogflow</span>(<span class="params">id, text</span>) ｛</span></span><br><span class="line"><span class="function">    <span class="title">const</span> <span class="title">url</span> = &#x27;<span class="title">https</span>://<span class="title">api</span>.<span class="title">dialogflow</span>.<span class="title">com</span>/<span class="title">v1</span>/<span class="title">query</span>?<span class="title">v</span>=20150910&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> ClientAccessToken = <span class="string">&#x27;dialogflow 액세스키는 여기에&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> headers = ｛</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json; charset=utf-8&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">`Bearer $｛ClientAccessToken｝`</span></span><br><span class="line">    ｝</span><br><span class="line">    <span class="keyword">const</span> query = ｛</span><br><span class="line">        <span class="string">&#x27;sessionId&#x27;</span> : id,</span><br><span class="line">        <span class="string">&#x27;query&#x27;</span> : text,</span><br><span class="line">        <span class="string">&#x27;lang&#x27;</span>: <span class="string">&#x27;ko&#x27;</span></span><br><span class="line">    ｝</span><br><span class="line">    <span class="keyword">return</span> axios.post(url, query, ｛ headers: headers ｝).then(<span class="function">(<span class="params">｛ data ｝</span>) =&gt;</span> ｛</span><br><span class="line">      <span class="keyword">if</span>(data.status.code === <span class="number">200</span>) ｛</span><br><span class="line">        <span class="keyword">return</span> data.result.fulfillment.speech;</span><br><span class="line">      ｝</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(data);</span><br><span class="line">    ｝);</span><br><span class="line">｝    </span><br><span class="line"></span><br><span class="line"><span class="comment">// 댓글 등록</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reply</span>(<span class="params">author,  permlink, body</span>) ｛</span></span><br><span class="line"><span class="function">  <span class="title">const</span> <span class="title">title</span> = &#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">const</span> jsonMetadata = ｛ <span class="string">&quot;tags&quot;</span>: [<span class="string">&quot;kr&quot;</span>] ｝;</span><br><span class="line">  <span class="keyword">const</span> commentPermlink = steem.formatter.commentPermlink(author, permlink);</span><br><span class="line">  <span class="keyword">return</span> steem.broadcast.commentAsync(wif, author,  permlink, username, commentPermlink, title, body, jsonMetadata); </span><br><span class="line">｝</span><br><span class="line"></span><br><span class="line"><span class="comment">// 봇 실행</span></span><br><span class="line">steem.api.streamOperations(<span class="function">(<span class="params">err, [opcode, op]</span>) =&gt;</span> ｛</span><br><span class="line">  <span class="keyword">if</span>(!err &amp;&amp; opcode === <span class="string">&#x27;comment&#x27;</span> &amp;&amp; op.title === <span class="string">&#x27;&#x27;</span>) ｛</span><br><span class="line">    <span class="keyword">const</span> ｛ parent_author, parent_permlink, author, permlink, body｝ = op;    </span><br><span class="line">    <span class="keyword">if</span>(parent_author === username &amp;&amp; author !== username) ｛</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">`댓글: $｛body｝ by @$｛author｝`</span>);</span><br><span class="line"></span><br><span class="line">      dialogflow(author, body.slice(<span class="number">0</span>, <span class="number">256</span>).replace(<span class="regexp">/\n/g</span>, <span class="string">&#x27; &#x27;</span>))</span><br><span class="line">      .then(<span class="function"><span class="params">botsay</span> =&gt;</span> ｛</span><br><span class="line">        reply(author, permlink, <span class="string">`**[자동 응답]**\n $｛botsay｝`</span>)</span><br><span class="line">        .then(<span class="function">() =&gt;</span> ｛</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`└─ 답변: $｛botsay｝`</span>);</span><br><span class="line">        ｝);</span><br><span class="line">      ｝);        </span><br><span class="line">    ｝      </span><br><span class="line">  ｝    </span><br><span class="line">｝);</span><br></pre></td></tr></table></figure>
<br>
<p>저는 가끔 제 스팀잇 활동 습관을 AI가 학습하여, 자동으로 보팅하고, 댓글 달아주는 봇을 상상해봅니다.</p>
<p><br>여기까지 읽어주셔서 감사합니다.</p>
<hr>
<h6 id="관련글"><a class="markdownIt-Anchor" href="#관련글"></a> 관련글</h6>
<ul>
<li><a target="_blank" rel="noopener" href="https://steemit.com/kr/@anpigon/6gxjap">Steem Project #0 - 뉴비분들을 위한 보팅 계산기(소숫점 3자리)</a></li>
<li><a target="_blank" rel="noopener" href="https://steemit.com/busy/@anpigon/steem-project-1">Steem Project #1 - 스팀잇 펫 연구소(펫이 보팅 해드려요)</a></li>
<li><a target="_blank" rel="noopener" href="https://steemit.com/busy/@anpigon/2eez4w">안드로이드폰에서 보상 받기 자동화하기</a></li>
</ul>


    </div>

    
    
    

      <footer class="post-footer">
          <div class="post-tags">
              <a href="/tags/%EC%8A%A4%ED%8C%80%EC%9E%87/" rel="tag"># 스팀잇</a>
              <a href="/tags/%EC%9E%90%EB%8F%99%ED%99%94/" rel="tag"># 자동화</a>
              <a href="/tags/steemit/" rel="tag"># steemit</a>
              <a href="/tags/%EC%B1%97%EB%B4%87/" rel="tag"># 챗봇</a>
          </div>

        
  <div class="post-widgets">
    <div class="wp_rating">
      <div id="wpac-rating"></div>
    </div>
  </div>

          <div class="post-nav">
            <div class="post-nav-next post-nav-item">
                <a href="/kr/@anpigon/5" rel="next" title="[머신러닝] 파이썬 머신러닝 #5 - 유사한 게시물 찾기">
                  <i class="fa fa-chevron-left"></i> [머신러닝] 파이썬 머신러닝 #5 - 유사한 게시물 찾기
                </a>
            </div>

            <span class="post-nav-divider"></span>

            <div class="post-nav-prev post-nav-item">
                <a href="/kr/@anpigon/6" rel="prev" title="[머신러닝] 파이썬 머신러닝 #6 - 스팀잇에서 유사한 게시물 찾기">
                  [머신러닝] 파이썬 머신러닝 #6 - 스팀잇에서 유사한 게시물 찾기 <i class="fa fa-chevron-right"></i>
                </a>
            </div>
          </div>
      </footer>
    
  </article>
  
  
  

  </div>


          </div>
          
    
  <div class="comments" id="comments">
    <div id="disqus_thread">
      <noscript>Please enable JavaScript to view the comments powered by Disqus.</noscript>
    </div>
  </div>
  

        </div>
          
  
  <div class="toggle sidebar-toggle">
    <span class="toggle-line toggle-line-first"></span>
    <span class="toggle-line toggle-line-middle"></span>
    <span class="toggle-line toggle-line-last"></span>
  </div>

  <aside class="sidebar">
    <div class="sidebar-inner">

      <ul class="sidebar-nav motion-element">
        <li class="sidebar-nav-toc">
          목차
        </li>
        <li class="sidebar-nav-overview">
          흝어보기
        </li>
      </ul>

      <!--noindex-->
      <div class="post-toc-wrap sidebar-panel">
          <div class="post-toc motion-element"><ol class="nav"><li class="nav-item nav-level-1"><a class="nav-link" href="#%EC%B1%97%EB%B4%87chat-bot"><span class="nav-number">1.</span> <span class="nav-text"> 챗봇(Chat Bot)</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#dialogflow%EC%97%90%EC%84%9C-%EB%B4%87-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0"><span class="nav-number">1.0.1.</span> <span class="nav-text"> Dialogflow에서 봇 생성하기</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%EC%9D%B8%ED%85%90%ED%8A%B8-%EB%93%B1%EB%A1%9D%ED%95%98%EA%B8%B0"><span class="nav-number">1.0.2.</span> <span class="nav-text"> 인텐트 등록하기</span></a></li></ol></li></ol></li><li class="nav-item nav-level-1"><a class="nav-link" href="#%EC%8A%A4%ED%8C%80%EC%9E%87-%EB%8C%93%EA%B8%80-%EC%9E%90%EB%8F%99-%EC%9D%91%EB%8B%B5%EB%B4%87-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0"><span class="nav-number">2.</span> <span class="nav-text"> 스팀잇 댓글 자동 응답봇 구현하기</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#dialogflow-api-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0"><span class="nav-number">2.0.1.</span> <span class="nav-text"> Dialogflow API 연동하기</span></a></li></ol></li></ol></li><li class="nav-item nav-level-1"><a class="nav-link" href="#%EB%8C%93%EA%B8%80-%EB%AA%A8%EB%8B%88%ED%84%B0%EB%A7%81-%ED%95%98%EA%B8%B0"><span class="nav-number">3.</span> <span class="nav-text"> 댓글 모니터링 하기</span></a></li><li class="nav-item nav-level-1"><a class="nav-link" href="#%EC%B5%9C%EC%A2%85-%EC%86%8C%EC%8A%A4"><span class="nav-number">4.</span> <span class="nav-text"> 최종 소스</span></a><ol class="nav-child"><li class="nav-item nav-level-6"><a class="nav-link" href="#%EC%9E%90%EB%8F%99-%EC%9D%91%EB%8B%B5%EB%B4%87-%EC%B5%9C%EC%A2%85-%EC%86%8C%EC%8A%A4"><span class="nav-number">4.0.0.0.0.1.</span> <span class="nav-text"> 자동 응답봇 최종 소스</span></a></li><li class="nav-item nav-level-6"><a class="nav-link" href="#%EA%B4%80%EB%A0%A8%EA%B8%80"><span class="nav-number">4.0.0.0.0.2.</span> <span class="nav-text"> 관련글</span></a></li></ol></li></ol></li></ol></li></ol></li></ol></li></ol></div>
      </div>
      <!--/noindex-->

      <div class="site-overview-wrap sidebar-panel">
        <div class="site-author motion-element" itemprop="author" itemscope itemtype="http://schema.org/Person">
  <img class="site-author-image" itemprop="image" alt="안피곤"
    src="/images/me.jpg">
  <p class="site-author-name" itemprop="name">안피곤</p>
  <div class="site-description" itemprop="description">시간이 천천히 갔으면 좋겠다.</div>
</div>
<div class="site-state-wrap motion-element">
  <nav class="site-state">
      <div class="site-state-item site-state-posts">
          <a href="/archives/">
        
          <span class="site-state-item-count">325</span>
          <span class="site-state-item-name">포스트</span>
        </a>
      </div>
      <div class="site-state-item site-state-categories">
            <a href="/categories/">
          
        <span class="site-state-item-count">25</span>
        <span class="site-state-item-name">카테고리</span></a>
      </div>
      <div class="site-state-item site-state-tags">
            <a href="/tags/">
          
        <span class="site-state-item-count">139</span>
        <span class="site-state-item-name">태그</span></a>
      </div>
  </nav>
</div>
  <div class="links-of-author motion-element">
      <span class="links-of-author-item">
        <a href="https://github.com/anpigon" title="GitHub &rarr; https://github.com/anpigon" rel="noopener" target="_blank"><i class="fa fa-fw fa-github"></i>GitHub</a>
      </span>
      <span class="links-of-author-item">
        <a href="mailto:markan82@gmail.com" title="E-Mail &rarr; mailto:markan82@gmail.com" rel="noopener" target="_blank"><i class="fa fa-fw fa-envelope"></i>E-Mail</a>
      </span>
  </div>



      </div>
          <!-- 정사각형 광고 -->
          <div style="margin-top: 15px;">
            <ins class="adsbygoogle"
                style="display:block"
                data-ad-client="ca-pub-2365531018407022"
                data-ad-slot="7521850306"
                data-ad-format="auto"
                data-full-width-responsive="true"></ins>
            <script>
                (adsbygoogle = window.adsbygoogle || []).push({});
            </script>
          </div>
    </div>
  </aside>
  <div id="sidebar-dimmer">3</div>



      </div>
    </main>

    <footer class="footer">
      <div class="footer-inner">
        

<div class="copyright">
  
  &copy; 
  <span itemprop="copyrightYear">2021</span>
  <span class="with-love">
    <i class="fa fa-user"></i>
  </span>
  <span class="author" itemprop="copyrightHolder">안피곤</span>
</div>
  <div class="powered-by">Powered by <a href="https://hexo.io" class="theme-link" rel="noopener" target="_blank">Hexo</a> v5.4.0
  </div>
  <span class="post-meta-divider">|</span>
  <div class="theme-info">Theme – <a href="https://theme-next.org" class="theme-link" rel="noopener" target="_blank">NexT.Gemini</a> v7.4.2
  </div>

        




  <script src="https://www.gstatic.com/firebasejs/6.3.3/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/6.3.3/firebase-firestore.js"></script>
  <script>
    firebase.initializeApp({
      apiKey: 'AIzaSyA4QZWCWb3IuIHjbkAmO0ttIM2b-qtLTP8',
      projectId: 'next-blog-8f9a0'
    });

    function getCount(doc, increaseCount) {
      // IncreaseCount will be false when not in article page

      return doc.get().then(d => {
        var count = 0;
        if (!d.exists) { // Has no data, initialize count
          if (increaseCount) {
            doc.set({
              count: 1
            });
            count = 1;
          }
        } else { // Has data
          count = d.data().count;
          if (increaseCount) {
            // If first view this article
            doc.set({ // Increase count
              count: count + 1
            });
            count++;
          }
        }

        return count;
      });
    }

    function appendCountTo(el) {
      return count => {
        el.innerText = count;
      }
    }
  </script>
  <script pjax>
    (function() {
      var db = firebase.firestore();
      var articles = db.collection('articles');

      if (CONFIG.page.isPost) { // Is article page
        var title = document.querySelector('.post-title').innerText.trim();
        var doc = articles.doc(title);
        var increaseCount = true;
        if (localStorage.getItem(title)) {
          increaseCount = false;
        } else {
          // Mark as visited
          localStorage.setItem(title, true);
        }
        getCount(doc, increaseCount).then(appendCountTo(document.querySelector('.firestore-visitors-count')));
      } else if (CONFIG.page.isHome) { // Is index page
        var promises = [...document.querySelectorAll('.post-title')].map(element => {
          var title = element.innerText.trim();
          var doc = articles.doc(title);
          return getCount(doc);
        });
        Promise.all(promises).then(counts => {
          var metas = document.querySelectorAll('.firestore-visitors-count');
          counts.forEach((val, idx) => {
            appendCountTo(metas[idx])(val);
          });
        });
      }
    })();
  </script>








        
      </div>
    </footer>
  </div>

  
  <script src="/lib/anime.min.js"></script>
  <script src="//cdn.jsdelivr.net/gh/theme-next/theme-next-pjax@0/pjax.min.js"></script>
  <script src="//cdn.jsdelivr.net/npm/jquery@3/dist/jquery.min.js"></script>
  <script src="//cdn.jsdelivr.net/gh/fancyapps/fancybox@3/dist/jquery.fancybox.min.js"></script>
  <script src="//cdn.jsdelivr.net/npm/lozad@1/dist/lozad.min.js"></script>
  <script src="/lib/velocity/velocity.min.js"></script>
  <script src="/lib/velocity/velocity.ui.min.js"></script>

<script src="/js/utils.js"></script>

<script src="/js/motion.js"></script>


<script src="/js/schemes/pisces.js"></script>


<script src="/js/next-boot.js"></script>

  <script>
var pjax = new Pjax({
  selectors: [
    'head title',
    '#page-configurations',
    '.content-wrap',
    '.post-toc-wrap',
    '#pjax'
  ],
  switches: {
    '.post-toc-wrap': Pjax.switches.innerHTML
  },
  analytics: false,
  cacheBust: false,
  scrollTo : !CONFIG.bookmark.enable
});

window.addEventListener('pjax:success', () => {
  document.querySelectorAll('script[pjax], script#page-configurations, #pjax script').forEach(element => {
    var code = element.text || element.textContent || element.innerHTML || '';
    var parent = element.parentNode;
    parent.removeChild(element);
    var script = document.createElement('script');
    if (element.id) {
      script.id = element.id;
    }
    if (element.className) {
      script.className = element.className;
    }
    if (element.type) {
      script.type = element.type;
    }
    if (element.src) {
      script.src = element.src;
      // Force synchronous loading of peripheral JS.
      script.async = false;
    }
    if (element.getAttribute('pjax') !== null) {
      element.setAttribute('pjax', '');
    }
    if (code !== '') {
      script.appendChild(document.createTextNode(code));
    }
    parent.appendChild(script);
  });
  NexT.boot.refresh();
  // Define Motion Sequence & Bootstrap Motion.
  if (CONFIG.motion.enable) {
    NexT.motion.integrator
      .init()
      .add(NexT.motion.middleWares.postList)
      .bootstrap();
  }
  NexT.utils.updateSidebarPosition();
});
</script>




  



  <script pjax>
  if (CONFIG.page.isPost) {
    wpac_init = window.wpac_init || [];
    wpac_init.push({
      widget: 'Rating',
      id: 21712,
      el: 'wpac-rating',
      color: 'fc6423'
    });
    (function() {
      if ('WIDGETPACK_LOADED' in window) return;
      WIDGETPACK_LOADED = true;
      var mc = document.createElement('script');
      mc.type = 'text/javascript';
      mc.async = true;
      mc.src = '//embed.widgetpack.com/widget.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(mc, s.nextSibling);
    })();
  }
  </script>

  
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/instantsearch.js@2.4.1/dist/instantsearch.min.css">
<script src="https://cdn.jsdelivr.net/npm/instantsearch.js@2.4.1/dist/instantsearch.js"></script>
<script src="/js/algolia-search.js"></script>














    <div id="pjax">

  

  

<script>
  function loadCount() {
    var d = document, s = d.createElement('script');
    s.src = 'https://anpigon-github-io.disqus.com/count.js';
    s.id = 'dsq-count-scr';
    (d.head || d.body).appendChild(s);
  }
  // defer loading until the whole page loading is completed
  window.addEventListener('load', loadCount, false);
</script>
<script>
  function loadComments() {
    if (window.DISQUS) {
      DISQUS.reset({
        reload: true,
        config: {page: {
            url: "https://anpigon.github.io/kr/@anpigon/steem-project-2",
            identifier: "/kr/@anpigon/steem-project-2",
            title: "[Steem Project #2] 댓글 자동 답변봇"
          }
        }
      });
    } else {
      var d = document, s = d.createElement('script');
      s.src = 'https://anpigon-github-io.disqus.com/embed.js';
      s.setAttribute('data-timestamp', '' + +new Date());
      (d.head || d.body).appendChild(s);
    }
  }
    (function() {
      var offsetTop = document.getElementById('comments').offsetTop - window.innerHeight;
      if (offsetTop <= 0) {
        // load directly when there's no a scrollbar
        window.addEventListener('load', loadComments, false);
      } else {
        var disqus_scroll = () => {
          // offsetTop may changes because of manually resizing browser window or lazy loading images.
          var offsetTop = document.getElementById('comments').offsetTop - window.innerHeight;
          var scrollTop = window.scrollY;

          // pre-load comments a bit? (margin or anything else)
          if (offsetTop - scrollTop < 60) {
            window.removeEventListener('scroll', disqus_scroll);
            loadComments();
          }
        };
        window.addEventListener('scroll', disqus_scroll);
      }
    })();
  
</script>

    </div>
</body>
</html>
