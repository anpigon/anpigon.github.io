<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=2">
<meta name="theme-color" content="#222">
<meta name="generator" content="Hexo 5.4.0">
  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32-next.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/images/favicon-16x16-next.png">
  <link rel="mask-icon" href="/images/logo.svg" color="#222">
  <meta name="google-site-verification" content="yfKOiBPD8WlKH3NPG_CG1zr4MsCgCG1YVdGKhMS2CKc">

<link rel="stylesheet" href="/css/main.css">

<link rel="stylesheet" href="//fonts.googleapis.com/css?family=Lato:300,300italic,400,400italic,700,700italic|Noto Serif KR:300,300italic,400,400italic,700,700italic&display=swap&subset=latin,latin-ext">
<link rel="stylesheet" href="/lib/font-awesome/css/font-awesome.min.css">
  <link rel="stylesheet" href="//cdn.jsdelivr.net/gh/fancyapps/fancybox@3/dist/jquery.fancybox.min.css">


<script id="hexo-configurations">
  var NexT = window.NexT || {};
  var CONFIG = {
    root: '/',
    scheme: 'Gemini',
    version: '7.4.2',
    exturl: false,
    sidebar: {"position":"left","display":"post","offset":12,"onmobile":false},
    copycode: {"enable":false,"show_result":false,"style":null},
    back2top: {"enable":true,"sidebar":false,"scrollpercent":false},
    bookmark: {"enable":false,"color":"#222","save":"auto"},
    fancybox: true,
    mediumzoom: false,
    lazyload: true,
    pangu: false,
    algolia: {
      appID: 'YY693DUDAI',
      apiKey: 'db449d453b150820f66e7bc3d4523a17',
      indexName: 'my-hexo-blog',
      hits: {"per_page":10},
      labels: {"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}
    },
    localsearch: {"enable":false,"trigger":"auto","top_n_per_article":1,"unescape":false,"preload":false},
    path: '',
    motion: {"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},
    translation: {
      copy_button: '복사',
      copy_success: 'Copied',
      copy_failure: 'Copy failed'
    },
    sidebarPadding: 40
  };
</script>

  <meta name="description" content="안녕하세요. @anpigon입니다.나만의 스팀잇 블로그 만들기 세 번째 강좌입니다. 이 시리즈는 개발 지식이 전혀 없는 분들도 쉽게 따라 할 수 있습니다.그리고 사용한 소스는 GitHub 저장소에 올려놓았습니다. https:&#x2F;&#x2F;github.com&#x2F;anpigon&#x2F;steemit-django-blog">
<meta property="og:type" content="article">
<meta property="og:title" content="[파이썬] 나만의 스팀잇 블로그 만들기 #3 - 페이징 구현">
<meta property="og:url" content="https://anpigon.github.io/kr/@anpigon/python-steemit-blog-3">
<meta property="og:site_name" content="안피곤님의 블로그">
<meta property="og:description" content="안녕하세요. @anpigon입니다.나만의 스팀잇 블로그 만들기 세 번째 강좌입니다. 이 시리즈는 개발 지식이 전혀 없는 분들도 쉽게 따라 할 수 있습니다.그리고 사용한 소스는 GitHub 저장소에 올려놓았습니다. https:&#x2F;&#x2F;github.com&#x2F;anpigon&#x2F;steemit-django-blog">
<meta property="og:locale" content="ko_KR">
<meta property="og:image" content="https://imgur.com/uEWroKd.png">
<meta property="og:image" content="https://imgur.com/vfD4B4E.png">
<meta property="og:image" content="https://imgur.com/ic9SzKg.png">
<meta property="og:image" content="https://i.creativecommons.org/l/by-sa/4.0/88x31.png">
<meta property="article:published_time" content="2018-10-03T14:16:36.000Z">
<meta property="article:modified_time" content="2021-04-21T11:50:30.087Z">
<meta property="article:author" content="안피곤">
<meta property="article:tag" content="Python">
<meta property="article:tag" content="Django">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="https://imgur.com/uEWroKd.png">

<link rel="canonical" href="https://anpigon.github.io/kr/@anpigon/python-steemit-blog-3">


<script id="page-configurations">
  // https://hexo.io/docs/variables.html
  CONFIG.page = {
    sidebar: "",
    isHome: false,
    isPost: true,
    isPage: false,
    isArchive: false
  };
</script>

  <title>[파이썬] 나만의 스팀잇 블로그 만들기 #3 - 페이징 구현 | 안피곤님의 블로그</title>
  
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-20589042-10"></script>
    <script pjax>
      var host = window.location.hostname;
      if (host !== "localhost" || !true) {
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', 'UA-20589042-10');
      }
    </script>






  
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({
          google_ad_client: "ca-pub-2365531018407022",
          enable_page_level_ads: false
     });
</script>
  <noscript>
  <style>
  .use-motion .brand,
  .use-motion .menu-item,
  .sidebar-inner,
  .use-motion .post-block,
  .use-motion .pagination,
  .use-motion .comments,
  .use-motion .post-header,
  .use-motion .post-body,
  .use-motion .collection-header { opacity: initial; }

  .use-motion .site-title,
  .use-motion .site-subtitle {
    opacity: initial;
    top: initial;
  }

  .use-motion .logo-line-before i { left: initial; }
  .use-motion .logo-line-after i { right: initial; }
  </style>
</noscript>

<link rel="alternate" href="/atom.xml" title="안피곤님의 블로그" type="application/atom+xml">
</head>

<body itemscope itemtype="http://schema.org/WebPage">
  <div class="container use-motion">
    <div class="headband"></div>

    <header class="header" itemscope itemtype="http://schema.org/WPHeader">
      <div class="header-inner"><div class="site-brand-container">
  <div class="site-meta">

    <div>
      <a href="/" class="brand" rel="start">
        <span class="logo-line-before"><i></i></span>
        <span class="site-title">안피곤님의 블로그</span>
        <span class="logo-line-after"><i></i></span>
      </a>
    </div>
        <h1 class="site-subtitle" itemprop="description">코딩, 독서, 여행, 영화, 맛집</h1>
      
  </div>

  <div class="site-nav-toggle">
    <div class="toggle" aria-label="Toggle navigation bar">
      <span class="toggle-line toggle-line-first"></span>
      <span class="toggle-line toggle-line-middle"></span>
      <span class="toggle-line toggle-line-last"></span>
    </div>
  </div>
</div>


<nav class="site-nav">
  
  <ul id="menu" class="menu">
        <li class="menu-item menu-item-home">

    <a href="/" rel="section"><i class="fa fa-fw fa-home"></i>홈</a>

  </li>
        <li class="menu-item menu-item-about">

    <a href="/about/" rel="section"><i class="fa fa-fw fa-user"></i>About</a>

  </li>
        <li class="menu-item menu-item-tags">

    <a href="/tags/" rel="section"><i class="fa fa-fw fa-tags"></i>태그<span class="badge">139</span></a>

  </li>
        <li class="menu-item menu-item-categories">

    <a href="/categories/" rel="section"><i class="fa fa-fw fa-th"></i>카테고리<span class="badge">25</span></a>

  </li>
        <li class="menu-item menu-item-archives">

    <a href="/archives/" rel="section"><i class="fa fa-fw fa-archive"></i>아카이브<span class="badge">325</span></a>

  </li>
      <li class="menu-item menu-item-search">
        <a role="button" class="popup-trigger"><i class="fa fa-search fa-fw"></i>검색
        </a>
      </li>
  </ul>

</nav>
  <div class="site-search">
    <div class="popup search-popup">
    <div class="search-header">
  <span class="search-icon">
    <i class="fa fa-search"></i>
  </span>
  <div class="search-input" id="search-input"></div>
  <span class="popup-btn-close">
    <i class="fa fa-times-circle"></i>
  </span>
</div>
<div class="algolia-results">
  <div id="algolia-stats"></div>
  <div id="algolia-hits"></div>
  <div id="algolia-pagination" class="algolia-pagination"></div>
</div>

  
</div>
<div class="search-pop-overlay"></div>

  </div>
</div>
    </header>

    
  <div class="back-to-top">
    <i class="fa fa-arrow-up"></i>
    <span>0%</span>
  </div>
  <div class="reading-progress-bar"></div>


    <main class="main">
      <div class="main-inner">
        <div class="content-wrap">
          

          <div class="content">
            

  <div class="posts-expand">
      
  
  
  <article itemscope itemtype="http://schema.org/Article" class="post-block " lang="ko">
    <link itemprop="mainEntityOfPage" href="https://anpigon.github.io/kr/@anpigon/python-steemit-blog-3">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="image" content="/images/me.jpg">
      <meta itemprop="name" content="안피곤">
      <meta itemprop="description" content="시간이 천천히 갔으면 좋겠다.">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="안피곤님의 블로그">
    </span>
      <header class="post-header">
        <h2 class="post-title" itemprop="name headline">
          [파이썬] 나만의 스팀잇 블로그 만들기 #3 - 페이징 구현
        </h2>

        <div class="post-meta">
            <span class="post-meta-item">
              <span class="post-meta-item-icon">
                <i class="fa fa-calendar-o"></i>
              </span>
              <span class="post-meta-item-text">작성일</span>

              <time title="Post created: 2018-10-03 23:16:36" itemprop="dateCreated datePublished" datetime="2018-10-03T23:16:36+09:00">2018-10-03</time>
            </span>
              <span class="post-meta-item">
                <span class="post-meta-item-icon">
                  <i class="fa fa-calendar-check-o"></i>
                </span>
                <span class="post-meta-item-text">Edited on</span>
                <time title="Updated at: 2021-04-21 20:50:30" itemprop="dateModified" datetime="2021-04-21T20:50:30+09:00">2021-04-21</time>
              </span>
            <span class="post-meta-item">
              <span class="post-meta-item-icon">
                <i class="fa fa-folder-o"></i>
              </span>
              <span class="post-meta-item-text">In</span>
                <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
                  <a href="/categories/%EA%B0%9C%EB%B0%9C-%EC%9D%B4%EC%95%BC%EA%B8%B0/" itemprop="url" rel="index">
                    <span itemprop="name">개발 이야기</span>
                  </a>
                </span>
                  , 
                <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
                  <a href="/categories/%EA%B0%9C%EB%B0%9C-%EC%9D%B4%EC%95%BC%EA%B8%B0/%ED%8C%8C%EC%9D%B4%EC%8D%AC-python/" itemprop="url" rel="index">
                    <span itemprop="name">파이썬(python)</span>
                  </a>
                </span>
            </span>

          
            <span class="post-meta-item" title="Views">
              <span class="post-meta-item-icon">
                <i class="fa fa-users"></i>
              </span>
              <span class="post-meta-item-text">Views: </span>
              <span class="firestore-visitors-count"></span>
            </span>
  
  <span class="post-meta-item">
    
      <span class="post-meta-item-icon">
        <i class="fa fa-comment-o"></i>
      </span>
      <span class="post-meta-item-text">Disqus: </span>
    
    <a title="disqus" href="/kr/@anpigon/python-steemit-blog-3#comments" itemprop="discussionUrl">
      <span class="post-comments-count disqus-comment-count" data-disqus-identifier="/kr/@anpigon/python-steemit-blog-3" itemprop="commentCount"></span>
    </a>
  </span>
  
  

        </div>
      </header>

    
    
    
    <div class="post-body" itemprop="articleBody">

      
            <div style="margin-bottom:35px;margin-top:-20px;">
              <!-- 블로그 본문 상단 광고 -->
              <ins class="adsbygoogle"
                  style="display:block"
                  data-ad-client="ca-pub-2365531018407022"
                  data-ad-slot="3390644000"
                  data-ad-format="auto"
                  data-full-width-responsive="true"></ins>
              <script>
                  (adsbygoogle = window.adsbygoogle || []).push({});
              </script>
            </div>

        <p>안녕하세요. @anpigon입니다.</p><p><strong><q>나만의 스팀잇 블로그 만들기</q></strong> 세 번째 강좌입니다. 이 시리즈는 개발 지식이 전혀 없는 분들도 쉽게 따라 할 수 있습니다.</p><p>그리고 사용한 소스는 GitHub 저장소에 올려놓았습니다.</p><ul>
<li><a target="_blank" rel="noopener" href="https://github.com/anpigon/steemit-django-blog/">https://github.com/anpigon/steemit-django-blog</a></li>
</ul><a id="more"></a>



<hr>
<h6 id="이전-글"><a class="markdownIt-Anchor" href="#이전-글"></a> 이전 글</h6>
<ul>
<li><a target="_blank" rel="noopener" href="https://steemit.com/kr/@anpigon/python-steemit-blog-1">나만의 스팀잇 블로그 만들기 #1</a></li>
<li><a target="_blank" rel="noopener" href="https://steemit.com/kr/@anpigon/python-steemit-blog-2">나만의 스팀잇 블로그 만들기 #2</a></li>
</ul>
<hr>
<p><a target="_blank" rel="noopener" href="https://imgur.com/T86bXj7.png">https://imgur.com/T86bXj7.png</a></p>
<hr><br>
<h1 id="글-목록-페이징-구현하기"><a class="markdownIt-Anchor" href="#글-목록-페이징-구현하기"></a> 글 목록 페이징 구현하기</h1>
<p><br>이번에는 다음 페이지의 글을 가져오는 페이징을 구현할 것이다. 다음 페이지를 위한 버튼은 블로그 목록 페이지 맨 하단에 있다. 못 찾는 분들이 계실까봐 아래 화면에서 붉은 박스로 표시하였다.</p>
<p><img alt data-src="https://imgur.com/uEWroKd.png"></p>
<br>
<h2 id="글-목록에서-다음-페이지-버튼-수정하기"><a class="markdownIt-Anchor" href="#글-목록에서-다음-페이지-버튼-수정하기"></a> 글 목록에서 다음 페이지 버튼 수정하기</h2>
<p>위 화면에 보이는 <strong>“OLDER POSTS”</strong> 버튼을 수정할 것이다. <code>templates/blog/post_list.html</code> 파일을 열어서 아래와 같이 수정한다.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;clearfix&quot;</span>&gt;</span></span><br><span class="line">  ｛％ if next ％｝</span><br><span class="line">  	<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary float-right&quot;</span> <span class="attr">href</span>=<span class="string">&quot;?next=｛｛ next ｝｝&quot;</span>&gt;</span>Older Posts <span class="symbol">&amp;rarr;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  ｛％ endif ％｝</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>｛％ if next ％｝ ｛％ endif ％｝</code> 를 사용하여 다음 페이지의 글이 있을 때만 버튼이 보이도록 하였다. 그리고 <code>href=&quot;?next=｛｛ next ｝｝&quot;</code> 가 다음 페이지로 이동하게 해주는 핵심 코드이다. 이제 버튼을 클릭하면 <strong>url</strong>을 통해 <code>next</code> 값을 서버에 넘겨줄 것이다.</p>
<p>코드의 어디 부분을 수정하는지 잘 모르겠으면 아래 화면을 참고하자.</p>
<p><img alt data-src="https://imgur.com/vfD4B4E.png"></p>
<br>
<h2 id="페이징-처리-구현하기"><a class="markdownIt-Anchor" href="#페이징-처리-구현하기"></a> 페이징 처리 구현하기</h2>
<p>방금 수정한 버튼이 동작하게 하려면 페이징 처리를 구현해야 한다. <code>web/blog/</code>  디렉토리에서 <code>views.py</code> 파일을 찾아 클릭하여 편집화면으로 이동한다.</p>
<p><img alt data-src="https://imgur.com/ic9SzKg.png"></p>
<p>페이징을 구현하려면 <code>def post_list()</code> 함수를 수정해야 한다. 다음 설명을 잘 읽고 수정해보자. 어려울 것 같지만 막상 해보면 전혀 어렵지 않다.</p>
<p><br>우리는 <strong>OLDER POSTS</strong> 버튼을 클릭했을 때 url을 통해 <code>next</code> 값을 넘겨주도록 수정하였다. 이제 넘어온 url에서 <code>next</code> 값을 조회해 보자. <code>request.GET.get()</code>를 함수를 사용하면 <code>next</code> 값을 조회할 수 있다.</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post_list</span>(<span class="params">request, limit=<span class="number">20</span></span>):</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment"># request url에서 next 파라미터값을 가져온다.</span></span><br><span class="line">    start_entry_id = <span class="built_in">int</span>(request.GET.get(<span class="string">&#x27;next&#x27;</span>, <span class="string">&#x27;0&#x27;</span>))</span><br></pre></td></tr></table></figure>
<br>
다음은 스팀잇 API 서버에서 글을 가져오는 코드를 수정한다. 이전에 `(USERNAME, 0, limit)` 로 넘겨주던 인자값을 `(USERNAME, start_entry_id, limit + 1)`로 수정하였다. 추가 설명하면, `start_entry_id` 인자값을 추가하고 `limit`를 +1를 하였다. `limit + 1`를 한 이유는 마지막 데이터에서 다음 페이지의 `entry_id`를 가져오기 위해서이다.
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 스팀잇에서 게시글 가져오기</span></span><br><span class="line">data = <span class="string">&#x27;&#x27;&#x27;｛</span></span><br><span class="line"><span class="string">    &quot;jsonrpc&quot;: &quot;2.0&quot;,</span></span><br><span class="line"><span class="string">    &quot;method&quot;: &quot;follow_api.get_blog&quot;,</span></span><br><span class="line"><span class="string">    &quot;params&quot;: ｛&quot;account&quot;: &quot;％s&quot;, &quot;start_entry_id&quot;: ％i, &quot;limit&quot;: ％i｝,</span></span><br><span class="line"><span class="string">    &quot;id&quot;: 1</span></span><br><span class="line"><span class="string">｝&#x27;&#x27;&#x27;</span> ％ (USERNAME, start_entry_id, limit + <span class="number">1</span>)</span><br><span class="line">response = requests.post(URL, data=data)</span><br></pre></td></tr></table></figure>
<br>
그리고 `for blog in blogs:` 코드 바로 아래에 `entry_id` 값을 조회하는 코드를 추가한다. `entry_id` 값은 다음 페이지를 조회하기 위한 `next` 값으로 사용된다.
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> blog <span class="keyword">in</span> blogs:</span><br><span class="line">    entry_id = blog[<span class="string">&#x27;entry_id&#x27;</span>]</span><br><span class="line">    blog = blog[<span class="string">&#x27;comment&#x27;</span>]</span><br></pre></td></tr></table></figure>
<br>
가져온 글의 수가 `limit`보다 작으면 `entry_id` 값을 0으로 초기화한다. 가져온 글의 수가 `limit`보다 작다는 것은 다음 페이지에서 가져올 수 있는 글이 없다는 의미이다.
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(posts) &lt; limit:</span><br><span class="line">    entry_id = <span class="number">0</span></span><br></pre></td></tr></table></figure>
<br>
마지막으로 `posts`를 `limit` 길이로 자른다. 왜냐하면 `posts`의 마지막 데이터는 페이징 처리를 위해 `entry_id` 값을 읽어오기 위한 데이터라서 필요 없기 때문이다. 그리고 템플릿 html 으로 전달하는 인자값에 `'next': entry_id` 를 추가한다.
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">posts = posts[:limit]</span><br><span class="line"><span class="keyword">return</span> render(request, <span class="string">&#x27;blog/post_list.html&#x27;</span>, ｛<span class="string">&#x27;posts&#x27;</span>: posts, <span class="string">&#x27;next&#x27;</span>: entry_id ｝)</span><br></pre></td></tr></table></figure>
<br>
아래에 `post_list` 함수의 전체 코드를 첨부하였으니 참고하자.
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post_list</span>(<span class="params">request, limit=<span class="number">20</span></span>):</span></span><br><span class="line"></span><br><span class="line">    start_entry_id = <span class="built_in">int</span>(request.GET.get(<span class="string">&#x27;next&#x27;</span>, <span class="string">&#x27;0&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    data = <span class="string">&#x27;&#x27;&#x27;｛</span></span><br><span class="line"><span class="string">        &quot;jsonrpc&quot;: &quot;2.0&quot;,</span></span><br><span class="line"><span class="string">        &quot;method&quot;: &quot;follow_api.get_blog&quot;,</span></span><br><span class="line"><span class="string">        &quot;params&quot;: ｛&quot;account&quot;: &quot;％s&quot;, &quot;start_entry_id&quot;: ％i, &quot;limit&quot;: ％i｝,</span></span><br><span class="line"><span class="string">        &quot;id&quot;: 1</span></span><br><span class="line"><span class="string">    ｝&#x27;&#x27;&#x27;</span> ％ (USERNAME, start_entry_id, limit + <span class="number">1</span>)</span><br><span class="line">    response = requests.post(URL, data=data)</span><br><span class="line"></span><br><span class="line">    posts = [] <span class="comment"># 게시글 목록</span></span><br><span class="line">    <span class="keyword">if</span> response.status_code == <span class="number">200</span>: <span class="comment"># 응답이 성공이라면</span></span><br><span class="line">        data = json.loads(response.text) <span class="comment"># JSON 파싱</span></span><br><span class="line"></span><br><span class="line">        blogs = data[<span class="string">&#x27;result&#x27;</span>][<span class="string">&#x27;blog&#x27;</span>]</span><br><span class="line">        <span class="keyword">for</span> blog <span class="keyword">in</span> blogs: <span class="comment"># 리스트에서 필요한 데이터만 가져오기</span></span><br><span class="line">            entry_id = blog[<span class="string">&#x27;entry_id&#x27;</span>]</span><br><span class="line">            blog = blog[<span class="string">&#x27;comment&#x27;</span>]</span><br><span class="line">            html = md.convert(blog[<span class="string">&#x27;body&#x27;</span>]) </span><br><span class="line">            post = ｛</span><br><span class="line">                <span class="string">&#x27;title&#x27;</span>: blog[<span class="string">&#x27;title&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;author&#x27;</span>: blog[<span class="string">&#x27;author&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;permlink&#x27;</span>: blog[<span class="string">&#x27;permlink&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;created&#x27;</span>: parse_time(blog[<span class="string">&#x27;created&#x27;</span>]),</span><br><span class="line">                <span class="string">&#x27;body&#x27;</span>: html[:<span class="number">200</span>], <span class="comment"># 길이 200으로 자르기</span></span><br><span class="line">            ｝</span><br><span class="line">            posts.append(post)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(posts) &lt; limit:</span><br><span class="line">        entry_id = <span class="number">0</span></span><br><span class="line">    posts = posts[:limit]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;blog/post_list.html&#x27;</span>, ｛<span class="string">&#x27;posts&#x27;</span>: posts, <span class="string">&#x27;next&#x27;</span>: entry_id ｝)</span><br></pre></td></tr></table></figure>
<br>
<hr>
<p>이번 시리즈는 구현하는 시간보다 스팀잇에 글 쓰는 시간이 더 오래 걸리는 것 같네요. ㅎㅎ 따라 하다가 모르는 부분이 있으면 댓글에 질문 남겨주세요. 그리고 <code>kr-dev</code> 태그에 개발관련 글을 올리면 제가 보팅해드립니다.</p>
<p>여기까지 읽어주셔서 감사합니다.</p>
<p><a target="_blank" rel="noopener" href="https://media.giphy.com/media/h5AHEcNMhn7u8/giphy.gif">https://media.giphy.com/media/h5AHEcNMhn7u8/giphy.gif</a><br>
<sup>스팀잇에는 <strong>밥 로스</strong> 아저씨를 아는 분들이 많이 있을까요?</sup></p>
<hr>
<p><a rel="license noopener" target="_blank" href="http://creativecommons.org/licenses/by-sa/4.0/"><img alt="크리에이티브 커먼즈 라이선스" style="border-width:0" data-src="https://i.creativecommons.org/l/by-sa/4.0/88x31.png"></a><br>이 저작물은 <a rel="license noopener" target="_blank" href="http://creativecommons.org/licenses/by-sa/4.0/">크리에이티브 커먼즈 저작자표시-동일조건변경허락 4.0 국제 라이선스</a>에 따라 이용할 수 있습니다.</p>


    </div>

    
    
    

      <footer class="post-footer">
          <div class="post-tags">
              <a href="/tags/python/" rel="tag"># Python</a>
              <a href="/tags/django/" rel="tag"># Django</a>
          </div>

        
  <div class="post-widgets">
    <div class="wp_rating">
      <div id="wpac-rating"></div>
    </div>
  </div>

          <div class="post-nav">
            <div class="post-nav-next post-nav-item">
                <a href="/kr/@anpigon/python-steemit-blog-2" rel="next" title="[파이썬] 나만의 스팀잇 블로그 만들기 #2 - 글 목록">
                  <i class="fa fa-chevron-left"></i> [파이썬] 나만의 스팀잇 블로그 만들기 #2 - 글 목록
                </a>
            </div>

            <span class="post-nav-divider"></span>

            <div class="post-nav-prev post-nav-item">
                <a href="/kr/@anpigon/python-steemit-blog-4" rel="prev" title="[파이썬] 나만의 스팀잇 블로그 만들기 #4 - 글 상세">
                  [파이썬] 나만의 스팀잇 블로그 만들기 #4 - 글 상세 <i class="fa fa-chevron-right"></i>
                </a>
            </div>
          </div>
      </footer>
    
  </article>
  
  
  

  </div>


          </div>
          
    
  <div class="comments" id="comments">
    <div id="disqus_thread">
      <noscript>Please enable JavaScript to view the comments powered by Disqus.</noscript>
    </div>
  </div>
  

        </div>
          
  
  <div class="toggle sidebar-toggle">
    <span class="toggle-line toggle-line-first"></span>
    <span class="toggle-line toggle-line-middle"></span>
    <span class="toggle-line toggle-line-last"></span>
  </div>

  <aside class="sidebar">
    <div class="sidebar-inner">

      <ul class="sidebar-nav motion-element">
        <li class="sidebar-nav-toc">
          목차
        </li>
        <li class="sidebar-nav-overview">
          흝어보기
        </li>
      </ul>

      <!--noindex-->
      <div class="post-toc-wrap sidebar-panel">
          <div class="post-toc motion-element"><ol class="nav"><li class="nav-item nav-level-6"><a class="nav-link" href="#%EC%9D%B4%EC%A0%84-%EA%B8%80"><span class="nav-number">1.</span> <span class="nav-text"> 이전 글</span></a></li></ol></li></ol></li></ol></li></ol></li></ol></li><li class="nav-item nav-level-1"><a class="nav-link" href="#%EA%B8%80-%EB%AA%A9%EB%A1%9D-%ED%8E%98%EC%9D%B4%EC%A7%95-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0"><span class="nav-number"></span> <span class="nav-text"> 글 목록 페이징 구현하기</span></a><ol class="nav-child"><li class="nav-item nav-level-2"><a class="nav-link" href="#%EA%B8%80-%EB%AA%A9%EB%A1%9D%EC%97%90%EC%84%9C-%EB%8B%A4%EC%9D%8C-%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%B2%84%ED%8A%BC-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0"><span class="nav-number"></span> <span class="nav-text"> 글 목록에서 다음 페이지 버튼 수정하기</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%ED%8E%98%EC%9D%B4%EC%A7%95-%EC%B2%98%EB%A6%AC-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0"><span class="nav-number"></span> <span class="nav-text"> 페이징 처리 구현하기</span></a></div>
      </div>
      <!--/noindex-->

      <div class="site-overview-wrap sidebar-panel">
        <div class="site-author motion-element" itemprop="author" itemscope itemtype="http://schema.org/Person">
  <img class="site-author-image" itemprop="image" alt="안피곤"
    src="/images/me.jpg">
  <p class="site-author-name" itemprop="name">안피곤</p>
  <div class="site-description" itemprop="description">시간이 천천히 갔으면 좋겠다.</div>
</div>
<div class="site-state-wrap motion-element">
  <nav class="site-state">
      <div class="site-state-item site-state-posts">
          <a href="/archives/">
        
          <span class="site-state-item-count">325</span>
          <span class="site-state-item-name">포스트</span>
        </a>
      </div>
      <div class="site-state-item site-state-categories">
            <a href="/categories/">
          
        <span class="site-state-item-count">25</span>
        <span class="site-state-item-name">카테고리</span></a>
      </div>
      <div class="site-state-item site-state-tags">
            <a href="/tags/">
          
        <span class="site-state-item-count">139</span>
        <span class="site-state-item-name">태그</span></a>
      </div>
  </nav>
</div>
  <div class="links-of-author motion-element">
      <span class="links-of-author-item">
        <a href="https://github.com/anpigon" title="GitHub &rarr; https://github.com/anpigon" rel="noopener" target="_blank"><i class="fa fa-fw fa-github"></i>GitHub</a>
      </span>
      <span class="links-of-author-item">
        <a href="mailto:markan82@gmail.com" title="E-Mail &rarr; mailto:markan82@gmail.com" rel="noopener" target="_blank"><i class="fa fa-fw fa-envelope"></i>E-Mail</a>
      </span>
  </div>



      </div>
          <!-- 정사각형 광고 -->
          <div style="margin-top: 15px;">
            <ins class="adsbygoogle"
                style="display:block"
                data-ad-client="ca-pub-2365531018407022"
                data-ad-slot="7521850306"
                data-ad-format="auto"
                data-full-width-responsive="true"></ins>
            <script>
                (adsbygoogle = window.adsbygoogle || []).push({});
            </script>
          </div>
    </div>
  </aside>
  <div id="sidebar-dimmer">3</div>



      </div>
    </main>

    <footer class="footer">
      <div class="footer-inner">
        

<div class="copyright">
  
  &copy; 
  <span itemprop="copyrightYear">2021</span>
  <span class="with-love">
    <i class="fa fa-user"></i>
  </span>
  <span class="author" itemprop="copyrightHolder">안피곤</span>
</div>
  <div class="powered-by">Powered by <a href="https://hexo.io" class="theme-link" rel="noopener" target="_blank">Hexo</a> v5.4.0
  </div>
  <span class="post-meta-divider">|</span>
  <div class="theme-info">Theme – <a href="https://theme-next.org" class="theme-link" rel="noopener" target="_blank">NexT.Gemini</a> v7.4.2
  </div>

        




  <script src="https://www.gstatic.com/firebasejs/6.3.3/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/6.3.3/firebase-firestore.js"></script>
  <script>
    firebase.initializeApp({
      apiKey: 'AIzaSyA4QZWCWb3IuIHjbkAmO0ttIM2b-qtLTP8',
      projectId: 'next-blog-8f9a0'
    });

    function getCount(doc, increaseCount) {
      // IncreaseCount will be false when not in article page

      return doc.get().then(d => {
        var count = 0;
        if (!d.exists) { // Has no data, initialize count
          if (increaseCount) {
            doc.set({
              count: 1
            });
            count = 1;
          }
        } else { // Has data
          count = d.data().count;
          if (increaseCount) {
            // If first view this article
            doc.set({ // Increase count
              count: count + 1
            });
            count++;
          }
        }

        return count;
      });
    }

    function appendCountTo(el) {
      return count => {
        el.innerText = count;
      }
    }
  </script>
  <script pjax>
    (function() {
      var db = firebase.firestore();
      var articles = db.collection('articles');

      if (CONFIG.page.isPost) { // Is article page
        var title = document.querySelector('.post-title').innerText.trim();
        var doc = articles.doc(title);
        var increaseCount = true;
        if (localStorage.getItem(title)) {
          increaseCount = false;
        } else {
          // Mark as visited
          localStorage.setItem(title, true);
        }
        getCount(doc, increaseCount).then(appendCountTo(document.querySelector('.firestore-visitors-count')));
      } else if (CONFIG.page.isHome) { // Is index page
        var promises = [...document.querySelectorAll('.post-title')].map(element => {
          var title = element.innerText.trim();
          var doc = articles.doc(title);
          return getCount(doc);
        });
        Promise.all(promises).then(counts => {
          var metas = document.querySelectorAll('.firestore-visitors-count');
          counts.forEach((val, idx) => {
            appendCountTo(metas[idx])(val);
          });
        });
      }
    })();
  </script>








        
      </div>
    </footer>
  </div>

  
  <script src="/lib/anime.min.js"></script>
  <script src="//cdn.jsdelivr.net/gh/theme-next/theme-next-pjax@0/pjax.min.js"></script>
  <script src="//cdn.jsdelivr.net/npm/jquery@3/dist/jquery.min.js"></script>
  <script src="//cdn.jsdelivr.net/gh/fancyapps/fancybox@3/dist/jquery.fancybox.min.js"></script>
  <script src="//cdn.jsdelivr.net/npm/lozad@1/dist/lozad.min.js"></script>
  <script src="/lib/velocity/velocity.min.js"></script>
  <script src="/lib/velocity/velocity.ui.min.js"></script>

<script src="/js/utils.js"></script>

<script src="/js/motion.js"></script>


<script src="/js/schemes/pisces.js"></script>


<script src="/js/next-boot.js"></script>

  <script>
var pjax = new Pjax({
  selectors: [
    'head title',
    '#page-configurations',
    '.content-wrap',
    '.post-toc-wrap',
    '#pjax'
  ],
  switches: {
    '.post-toc-wrap': Pjax.switches.innerHTML
  },
  analytics: false,
  cacheBust: false,
  scrollTo : !CONFIG.bookmark.enable
});

window.addEventListener('pjax:success', () => {
  document.querySelectorAll('script[pjax], script#page-configurations, #pjax script').forEach(element => {
    var code = element.text || element.textContent || element.innerHTML || '';
    var parent = element.parentNode;
    parent.removeChild(element);
    var script = document.createElement('script');
    if (element.id) {
      script.id = element.id;
    }
    if (element.className) {
      script.className = element.className;
    }
    if (element.type) {
      script.type = element.type;
    }
    if (element.src) {
      script.src = element.src;
      // Force synchronous loading of peripheral JS.
      script.async = false;
    }
    if (element.getAttribute('pjax') !== null) {
      element.setAttribute('pjax', '');
    }
    if (code !== '') {
      script.appendChild(document.createTextNode(code));
    }
    parent.appendChild(script);
  });
  NexT.boot.refresh();
  // Define Motion Sequence & Bootstrap Motion.
  if (CONFIG.motion.enable) {
    NexT.motion.integrator
      .init()
      .add(NexT.motion.middleWares.postList)
      .bootstrap();
  }
  NexT.utils.updateSidebarPosition();
});
</script>




  



  <script pjax>
  if (CONFIG.page.isPost) {
    wpac_init = window.wpac_init || [];
    wpac_init.push({
      widget: 'Rating',
      id: 21712,
      el: 'wpac-rating',
      color: 'fc6423'
    });
    (function() {
      if ('WIDGETPACK_LOADED' in window) return;
      WIDGETPACK_LOADED = true;
      var mc = document.createElement('script');
      mc.type = 'text/javascript';
      mc.async = true;
      mc.src = '//embed.widgetpack.com/widget.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(mc, s.nextSibling);
    })();
  }
  </script>

  
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/instantsearch.js@2.4.1/dist/instantsearch.min.css">
<script src="https://cdn.jsdelivr.net/npm/instantsearch.js@2.4.1/dist/instantsearch.js"></script>
<script src="/js/algolia-search.js"></script>














    <div id="pjax">

  

  

<script>
  function loadCount() {
    var d = document, s = d.createElement('script');
    s.src = 'https://anpigon-github-io.disqus.com/count.js';
    s.id = 'dsq-count-scr';
    (d.head || d.body).appendChild(s);
  }
  // defer loading until the whole page loading is completed
  window.addEventListener('load', loadCount, false);
</script>
<script>
  function loadComments() {
    if (window.DISQUS) {
      DISQUS.reset({
        reload: true,
        config: {page: {
            url: "https://anpigon.github.io/kr/@anpigon/python-steemit-blog-3",
            identifier: "/kr/@anpigon/python-steemit-blog-3",
            title: "[파이썬] 나만의 스팀잇 블로그 만들기 #3 - 페이징 구현"
          }
        }
      });
    } else {
      var d = document, s = d.createElement('script');
      s.src = 'https://anpigon-github-io.disqus.com/embed.js';
      s.setAttribute('data-timestamp', '' + +new Date());
      (d.head || d.body).appendChild(s);
    }
  }
    (function() {
      var offsetTop = document.getElementById('comments').offsetTop - window.innerHeight;
      if (offsetTop <= 0) {
        // load directly when there's no a scrollbar
        window.addEventListener('load', loadComments, false);
      } else {
        var disqus_scroll = () => {
          // offsetTop may changes because of manually resizing browser window or lazy loading images.
          var offsetTop = document.getElementById('comments').offsetTop - window.innerHeight;
          var scrollTop = window.scrollY;

          // pre-load comments a bit? (margin or anything else)
          if (offsetTop - scrollTop < 60) {
            window.removeEventListener('scroll', disqus_scroll);
            loadComments();
          }
        };
        window.addEventListener('scroll', disqus_scroll);
      }
    })();
  
</script>

    </div>
</body>
</html>
