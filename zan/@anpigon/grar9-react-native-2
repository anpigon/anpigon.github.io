<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=2">
<meta name="theme-color" content="#222">
<meta name="generator" content="Hexo 5.4.0">
  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32-next.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/images/favicon-16x16-next.png">
  <link rel="mask-icon" href="/images/logo.svg" color="#222">
  <meta name="google-site-verification" content="yfKOiBPD8WlKH3NPG_CG1zr4MsCgCG1YVdGKhMS2CKc">

<link rel="stylesheet" href="/css/main.css">

<link rel="stylesheet" href="//fonts.googleapis.com/css?family=Lato:300,300italic,400,400italic,700,700italic|Noto Serif KR:300,300italic,400,400italic,700,700italic&display=swap&subset=latin,latin-ext">
<link rel="stylesheet" href="/lib/font-awesome/css/font-awesome.min.css">
  <link rel="stylesheet" href="//cdn.jsdelivr.net/gh/fancyapps/fancybox@3/dist/jquery.fancybox.min.css">


<script id="hexo-configurations">
  var NexT = window.NexT || {};
  var CONFIG = {
    root: '/',
    scheme: 'Gemini',
    version: '7.4.2',
    exturl: false,
    sidebar: {"position":"left","display":"post","offset":12,"onmobile":false},
    copycode: {"enable":false,"show_result":false,"style":null},
    back2top: {"enable":true,"sidebar":false,"scrollpercent":false},
    bookmark: {"enable":false,"color":"#222","save":"auto"},
    fancybox: true,
    mediumzoom: false,
    lazyload: true,
    pangu: false,
    algolia: {
      appID: 'YY693DUDAI',
      apiKey: 'db449d453b150820f66e7bc3d4523a17',
      indexName: 'my-hexo-blog',
      hits: {"per_page":10},
      labels: {"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}
    },
    localsearch: {"enable":false,"trigger":"auto","top_n_per_article":1,"unescape":false,"preload":false},
    path: '',
    motion: {"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},
    translation: {
      copy_button: '복사',
      copy_success: 'Copied',
      copy_failure: 'Copy failed'
    },
    sidebarPadding: 40
  };
</script>

  <meta name="description" content="이전 글 &quot;[React Native] 리액트 네이티브에 카카오 로그인 구현하기 #1&quot;에서 이어지는 내용입니다.카카오톡 로그인으로 스팀잇을 사용하기 위해서는 백엔드 서버가 필요합니다.![](https:&#x2F;&#x2F;steemitimages.com&#x2F;0x200&#x2F;https:&#x2F;&#x2F;files.steempeak.com&#x2F;file&#x2F;steempeak&#x2F;anpigon&#x2F;Fw">
<meta property="og:type" content="article">
<meta property="og:title" content="[React Native] 리액트 네이티브에 카카오 로그인 구현하기 #2">
<meta property="og:url" content="https://anpigon.github.io/zan/@anpigon/grar9-react-native-2">
<meta property="og:site_name" content="안피곤님의 블로그">
<meta property="og:description" content="이전 글 &quot;[React Native] 리액트 네이티브에 카카오 로그인 구현하기 #1&quot;에서 이어지는 내용입니다.카카오톡 로그인으로 스팀잇을 사용하기 위해서는 백엔드 서버가 필요합니다.![](https:&#x2F;&#x2F;steemitimages.com&#x2F;0x200&#x2F;https:&#x2F;&#x2F;files.steempeak.com&#x2F;file&#x2F;steempeak&#x2F;anpigon&#x2F;Fw">
<meta property="og:locale" content="ko_KR">
<meta property="og:image" content="https://files.steempeak.com/file/steempeak/anpigon/zRw9wME7-E1848CE185A6E18486E185A9E186A820E1848EE185AEE18480E185A1.png">
<meta property="og:image" content="https://files.steempeak.com/file/steempeak/anpigon/SfgFlKcG-E18489E185B3E1848FE185B3E18485E185B5E186ABE18489E185A3E186BA202019-08-172017.45.07.png">
<meta property="og:image" content="https://files.steempeak.com/file/steempeak/anpigon/RRowUaxF-E18489E185B3E1848FE185B3E18485E185B5E186ABE18489E185A3E186BA202019-08-172017.48.04.png">
<meta property="og:image" content="https://files.steempeak.com/file/steempeak/anpigon/4d3wY7xx-E18489E185B3E1848FE185B3E18485E185B5E186ABE18489E185A3E186BA202019-08-172017.46.28.png">
<meta property="og:image" content="https://files.steempeak.com/file/steempeak/anpigon/HnaNqIiq-E18489E185B3E1848FE185B3E18485E185B5E186ABE18489E185A3E186BA202019-08-172018.25.12.png">
<meta property="og:image" content="https://files.steempeak.com/file/steempeak/anpigon/p1oHZKBo-KakaoTalk20Login.png">
<meta property="og:image" content="https://files.steempeak.com/file/steempeak/anpigon/45mVqBMg-E18489E185B3E1848FE185B3E18485E185B5E186ABE18489E185A3E186BA202019-08-172018.53.50.png">
<meta property="og:image" content="https://files.steempeak.com/file/steempeak/anpigon/Kyd2OPsa-code.png">
<meta property="og:image" content="https://files.steempeak.com/file/steempeak/anpigon/bJOVKhw6-E18489E185B3E1848FE185B3E18485E185B5E186ABE18489E185A3E186BA202019-08-172019.03.39.png">
<meta property="og:image" content="https://steemitimages.com/400x0/https://cdn.steemitimages.com/DQmQmWhMN6zNrLmKJRKhvSScEgWZmpb8zCeE2Gray1krbv6/BC054B6E-6F73-46D0-88E4-C88EB8167037.jpeg">
<meta property="article:published_time" content="2019-08-17T10:31:06.000Z">
<meta property="article:modified_time" content="2021-04-21T11:50:30.063Z">
<meta property="article:author" content="안피곤">
<meta property="article:tag" content="React Native">
<meta property="article:tag" content="카카오 로그인">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="https://files.steempeak.com/file/steempeak/anpigon/zRw9wME7-E1848CE185A6E18486E185A9E186A820E1848EE185AEE18480E185A1.png">

<link rel="canonical" href="https://anpigon.github.io/zan/@anpigon/grar9-react-native-2">


<script id="page-configurations">
  // https://hexo.io/docs/variables.html
  CONFIG.page = {
    sidebar: "",
    isHome: false,
    isPost: true,
    isPage: false,
    isArchive: false
  };
</script>

  <title>[React Native] 리액트 네이티브에 카카오 로그인 구현하기 #2 | 안피곤님의 블로그</title>
  
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-20589042-10"></script>
    <script pjax>
      var host = window.location.hostname;
      if (host !== "localhost" || !true) {
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', 'UA-20589042-10');
      }
    </script>






  
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({
          google_ad_client: "ca-pub-2365531018407022",
          enable_page_level_ads: false
     });
</script>
  <noscript>
  <style>
  .use-motion .brand,
  .use-motion .menu-item,
  .sidebar-inner,
  .use-motion .post-block,
  .use-motion .pagination,
  .use-motion .comments,
  .use-motion .post-header,
  .use-motion .post-body,
  .use-motion .collection-header { opacity: initial; }

  .use-motion .site-title,
  .use-motion .site-subtitle {
    opacity: initial;
    top: initial;
  }

  .use-motion .logo-line-before i { left: initial; }
  .use-motion .logo-line-after i { right: initial; }
  </style>
</noscript>

<link rel="alternate" href="/atom.xml" title="안피곤님의 블로그" type="application/atom+xml">
</head>

<body itemscope itemtype="http://schema.org/WebPage">
  <div class="container use-motion">
    <div class="headband"></div>

    <header class="header" itemscope itemtype="http://schema.org/WPHeader">
      <div class="header-inner"><div class="site-brand-container">
  <div class="site-meta">

    <div>
      <a href="/" class="brand" rel="start">
        <span class="logo-line-before"><i></i></span>
        <span class="site-title">안피곤님의 블로그</span>
        <span class="logo-line-after"><i></i></span>
      </a>
    </div>
        <h1 class="site-subtitle" itemprop="description">코딩, 독서, 여행, 영화, 맛집</h1>
      
  </div>

  <div class="site-nav-toggle">
    <div class="toggle" aria-label="Toggle navigation bar">
      <span class="toggle-line toggle-line-first"></span>
      <span class="toggle-line toggle-line-middle"></span>
      <span class="toggle-line toggle-line-last"></span>
    </div>
  </div>
</div>


<nav class="site-nav">
  
  <ul id="menu" class="menu">
        <li class="menu-item menu-item-home">

    <a href="/" rel="section"><i class="fa fa-fw fa-home"></i>홈</a>

  </li>
        <li class="menu-item menu-item-about">

    <a href="/about/" rel="section"><i class="fa fa-fw fa-user"></i>About</a>

  </li>
        <li class="menu-item menu-item-tags">

    <a href="/tags/" rel="section"><i class="fa fa-fw fa-tags"></i>태그<span class="badge">139</span></a>

  </li>
        <li class="menu-item menu-item-categories">

    <a href="/categories/" rel="section"><i class="fa fa-fw fa-th"></i>카테고리<span class="badge">25</span></a>

  </li>
        <li class="menu-item menu-item-archives">

    <a href="/archives/" rel="section"><i class="fa fa-fw fa-archive"></i>아카이브<span class="badge">325</span></a>

  </li>
      <li class="menu-item menu-item-search">
        <a role="button" class="popup-trigger"><i class="fa fa-search fa-fw"></i>검색
        </a>
      </li>
  </ul>

</nav>
  <div class="site-search">
    <div class="popup search-popup">
    <div class="search-header">
  <span class="search-icon">
    <i class="fa fa-search"></i>
  </span>
  <div class="search-input" id="search-input"></div>
  <span class="popup-btn-close">
    <i class="fa fa-times-circle"></i>
  </span>
</div>
<div class="algolia-results">
  <div id="algolia-stats"></div>
  <div id="algolia-hits"></div>
  <div id="algolia-pagination" class="algolia-pagination"></div>
</div>

  
</div>
<div class="search-pop-overlay"></div>

  </div>
</div>
    </header>

    
  <div class="back-to-top">
    <i class="fa fa-arrow-up"></i>
    <span>0%</span>
  </div>
  <div class="reading-progress-bar"></div>


    <main class="main">
      <div class="main-inner">
        <div class="content-wrap">
          

          <div class="content">
            

  <div class="posts-expand">
      
  
  
  <article itemscope itemtype="http://schema.org/Article" class="post-block " lang="ko">
    <link itemprop="mainEntityOfPage" href="https://anpigon.github.io/zan/@anpigon/grar9-react-native-2">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="image" content="/images/me.jpg">
      <meta itemprop="name" content="안피곤">
      <meta itemprop="description" content="시간이 천천히 갔으면 좋겠다.">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="안피곤님의 블로그">
    </span>
      <header class="post-header">
        <h2 class="post-title" itemprop="name headline">
          [React Native] 리액트 네이티브에 카카오 로그인 구현하기 #2
        </h2>

        <div class="post-meta">
            <span class="post-meta-item">
              <span class="post-meta-item-icon">
                <i class="fa fa-calendar-o"></i>
              </span>
              <span class="post-meta-item-text">작성일</span>

              <time title="Post created: 2019-08-17 19:31:06" itemprop="dateCreated datePublished" datetime="2019-08-17T19:31:06+09:00">2019-08-17</time>
            </span>
              <span class="post-meta-item">
                <span class="post-meta-item-icon">
                  <i class="fa fa-calendar-check-o"></i>
                </span>
                <span class="post-meta-item-text">Edited on</span>
                <time title="Updated at: 2021-04-21 20:50:30" itemprop="dateModified" datetime="2021-04-21T20:50:30+09:00">2021-04-21</time>
              </span>
            <span class="post-meta-item">
              <span class="post-meta-item-icon">
                <i class="fa fa-folder-o"></i>
              </span>
              <span class="post-meta-item-text">In</span>
                <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
                  <a href="/categories/%EA%B0%9C%EB%B0%9C-%EC%9D%B4%EC%95%BC%EA%B8%B0/" itemprop="url" rel="index">
                    <span itemprop="name">개발 이야기</span>
                  </a>
                </span>
                  , 
                <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
                  <a href="/categories/%EA%B0%9C%EB%B0%9C-%EC%9D%B4%EC%95%BC%EA%B8%B0/react-native/" itemprop="url" rel="index">
                    <span itemprop="name">React Native</span>
                  </a>
                </span>
            </span>

          
            <span class="post-meta-item" title="Views">
              <span class="post-meta-item-icon">
                <i class="fa fa-users"></i>
              </span>
              <span class="post-meta-item-text">Views: </span>
              <span class="firestore-visitors-count"></span>
            </span>
  
  <span class="post-meta-item">
    
      <span class="post-meta-item-icon">
        <i class="fa fa-comment-o"></i>
      </span>
      <span class="post-meta-item-text">Disqus: </span>
    
    <a title="disqus" href="/zan/@anpigon/grar9-react-native-2#comments" itemprop="discussionUrl">
      <span class="post-comments-count disqus-comment-count" data-disqus-identifier="/zan/@anpigon/grar9-react-native-2" itemprop="commentCount"></span>
    </a>
  </span>
  
  

        </div>
      </header>

    
    
    
    <div class="post-body" itemprop="articleBody">

      
            <div style="margin-bottom:35px;margin-top:-20px;">
              <!-- 블로그 본문 상단 광고 -->
              <ins class="adsbygoogle"
                  style="display:block"
                  data-ad-client="ca-pub-2365531018407022"
                  data-ad-slot="3390644000"
                  data-ad-format="auto"
                  data-full-width-responsive="true"></ins>
              <script>
                  (adsbygoogle = window.adsbygoogle || []).push({});
              </script>
            </div>

        <p><img alt data-src="https://files.steempeak.com/file/steempeak/anpigon/zRw9wME7-E1848CE185A6E18486E185A9E186A820E1848EE185AEE18480E185A1.png"></p><p>이전 글 <a href="/zzan/@anpigon/6np73q-react-native">&quot;[React Native] 리액트 네이티브에 카카오 로그인 구현하기 #1&quot;</a>에서 이어지는 내용입니다.</p><br><p><br>카카오톡 로그인으로 스팀잇을 사용하기 위해서는 백엔드 서버가 필요합니다.</p><br><center>![](https://steemitimages.com/0x200/https://files.steempeak.com/file/steempeak/anpigon/Fw3GT9H9-social.png)</center><a id="more"></a>


___



<p>처음에는 서버 비용과 백엔드(back-end) 개발을 최소하기 위해서 <strong>Google Firebase</strong> 서비스만 사용해서 개발하려고 생각을 했습니다. 그리고 <strong>Google Firebase</strong>에서는 다음 서비스를 무료로 제공합니다.</p>
<ul>
<li><strong>Authentication</strong>: <em>10k/월</em></li>
<li><strong>Cloud Firestore:</strong> <em>총 용량 1GiB, 대역폭 10GiB/월, 쓰기 20K/일, 읽기 50K/일, 삭제 20K/일</em></li>
<li><strong>Cloud Functions</strong>: <em>호출 125K/월, GB-초 40K/월, CPU-초 40K/월, 발신 네트워킹는 구글 서비스만 가능</em></li>
<li><strong>Cloud Messaging (FCM)</strong>: <em>무료</em></li>
<li><strong>Storage</strong>: <em>총 용량 5GB, 다운로드 크기 1GB/일, 업로드 작업 20K/일, 다운로드 작업 50K/일</em></li>
<li>기타 등등</li>
</ul>
<p>그리고 <a target="_blank" rel="noopener" href="https://firebase.google.com/pricing/">[Firebase 사이트]</a>에서 더 많은 무료 서비스를 확인 할 수 있습니다.</p>
<br>
<p>하지만  무료 버전의 <strong>Cloud Functions</strong>에서는 구글 서비스만 연동 가능합니다. 그래서 외부 서비스인 카카오톡 API 서비스나 스팀 API를 연동해서 서비스하는 것이 불가능합니다.ㅠ 사실 유료 서비스를 이용하면 가능합니다. 하지만 우리는 가난한 개발자이므로 무료 서비스를 최대한 활용해서 서비스를 만들어보겠습니다. ㅎㅎ</p>
<br>
<br>
<hr>
<br>
<br>
<p>Firebase와 함께 GCP 무료 서비스도 사용하기로 결정 했습니다. 이제는 Firebase와  GCP는 같은 서비스라고 봐도 무방합니다.  <s>그리고 GCP에서 제공하는 서비스가 Firebase보다 훨씬 많습니다. Firebase에는 사용자 인증과 Push 서비스가 있습니다.</s></p>
<center>![](https://steemitimages.com/0x200/https://files.steempeak.com/file/steempeak/anpigon/wZ8wVqUg-99A5D4405B78FDBB33.png)</center>
<br>
<p>GCP에 대해서 매우 잘 설명한 글이 있습니다. 아래 이정운님이 작성한 글을 읽어보세요.</p>
<hr>
<ul>
<li><a target="_blank" rel="noopener" href="https://medium.com/@jwlee98/gcp-%EF%BC%85EA%EF%BC%85B0%EF%BC%8580%EF%BC%85EB%EF%BC%8582%EF%BC%859C%EF%BC%85ED%EF%BC%8595%EF%BC%859C-%EF%BC%85EA%EF%BC%85B0%EF%BC%859C%EF%BC%85EB%EF%BC%85B0%EF%BC%859C%EF%BC%85EC%EF%BC%859E%EF%BC%8590%EF%BC%85EB%EF%BC%85A5%EF%BC%85BC-%EF%BC%85EC%EF%BC%859C%EF%BC%8584%EF%BC%85ED%EF%BC%8595%EF%BC%859C-gcp-free-tier-%EF%BC%85ED%EF%BC%8599%EF%BC%859C%EF%BC%85EC%EF%BC%859A%EF%BC%85A9-%EF%BC%85EB%EF%BC%85B0%EF%BC%85A9%EF%BC%85EB%EF%BC%85B2%EF%BC%8595-1-2-3022348e1103">[GCP]가난한 개발자를 위한 GCP free tier 활용 방법 1/2</a></li>
<li><a target="_blank" rel="noopener" href="https://medium.com/@jwlee98/gcp-%EF%BC%85EA%EF%BC%85B0%EF%BC%8580%EF%BC%85EB%EF%BC%8582%EF%BC%859C%EF%BC%85ED%EF%BC%8595%EF%BC%859C-%EF%BC%85EA%EF%BC%85B0%EF%BC%859C%EF%BC%85EB%EF%BC%85B0%EF%BC%859C%EF%BC%85EC%EF%BC%859E%EF%BC%8590%EF%BC%85EB%EF%BC%85A5%EF%BC%85BC-%EF%BC%85EC%EF%BC%859C%EF%BC%8584%EF%BC%85ED%EF%BC%8595%EF%BC%859C-gcp-free-tier-%EF%BC%85ED%EF%BC%8599%EF%BC%859C%EF%BC%85EC%EF%BC%859A%EF%BC%85A9-%EF%BC%85EB%EF%BC%85B0%EF%BC%85A9%EF%BC%85EB%EF%BC%85B2%EF%BC%8595-2-2-50bdc290ea0d">[GCP]가난한 개발자를 위한 GCP free tier 활용 방법 2/2</a></li>
</ul>
<hr>
<p><br>GCP는 Firebase보다 훨씬 더 많은 서비스를 제공합니다. 그리고 GCP도 당연히 무료 서비스들을 제공합니다. 구글은 매우 관대합니다. 하지만 아래 서비스를 사용하면 구글 서비스에 완전 종속된 앱이 되어버립니다.</p>
<p><img alt data-src="https://files.steempeak.com/file/steempeak/anpigon/SfgFlKcG-E18489E185B3E1848FE185B3E18485E185B5E186ABE18489E185A3E186BA202019-08-172017.45.07.png"><br>
<img alt data-src="https://files.steempeak.com/file/steempeak/anpigon/RRowUaxF-E18489E185B3E1848FE185B3E18485E185B5E186ABE18489E185A3E186BA202019-08-172017.48.04.png"><br>
<img alt data-src="https://files.steempeak.com/file/steempeak/anpigon/4d3wY7xx-E18489E185B3E1848FE185B3E18485E185B5E186ABE18489E185A3E186BA202019-08-172017.46.28.png"></p>
<p>출처: <a target="_blank" rel="noopener" href="https://cloud.google.com/free/docs/gcp-free-tier#always-free">https://cloud.google.com/free/docs/gcp-free-tier#always-free</a></p>
<p><br><br></p>
<hr>
<p><br><br></p>
<h1 id="firebase-authentication-사용하기"><a class="markdownIt-Anchor" href="#firebase-authentication-사용하기"></a> Firebase Authentication 사용하기</h1>
<p>Firebase Authentication 에는 다음 인증 방식을 제공합니다. 대부분의 인증이 있는데 카카오톡 인증이 없는 것이 많이 아쉽습니다.</p>
<p><img alt="스크린샷 20190817 18.25.12.png" data-src="https://files.steempeak.com/file/steempeak/anpigon/HnaNqIiq-E18489E185B3E1848FE185B3E18485E185B5E186ABE18489E185A3E186BA202019-08-172018.25.12.png"></p>
<p><br><br>저는 다음과 같은 방법으로 카카오톡 인증을 구현해 볼까 합니다. 참고로 카카오톡은 클라이언트 인증과 서버 인증이 연동이 안되고 따로 동작합니다. 만약 서버에서 카카오톡 인증을 처리하게 되면, 모바일앱에서는 웹뷰에서 로그인 하는 형태로 구현됩니다. 이런 인증방식은 제가 싫어합니다.ㅋ 그래서 모바일 SDK를 사용하여 카카오톡앱 연동하여 간편하게 인증하고, 발급 받은 액세스 토큰을 서버에서 다시 검증하여 사용자 등록 및 인증을 처리하고 있습니다. 덕분에 시퀀스 다이어그램이 매우 복잡해졌습니다. ㅠ</p>
<hr>
<p><img alt="시퀀스 다이어그램" data-src="https://files.steempeak.com/file/steempeak/anpigon/p1oHZKBo-KakaoTalk20Login.png"></p>
<hr>
<p><br>무료 버전의 <strong>Cloud Functions</strong>에서 외부 API 연동이 안되기 때문에 어쩔 수 없이 **GAE(Google App Engine)**를 사용했습니다. 그래서 카카오톡 API나 Steem API 처럼 외부 연동이 필요한 부분은 <strong>GAE</strong>에서 처리합니다. 그리고 사용자 인증 및 관리는 <strong>Firebase Authentication</strong>에서 모두 관리됩니다. 덕분에 사용자 가입 및 인증은 제가 따로 더 구현할 것이 없습니다. 그리고 서비스를 이용하는데 필요한 사용자 추가 데이터는 <strong>Firestore</strong>에 저장합니다. 그리고 외부 연동이 필요 없는 단순한 함수는 <strong>Cloud Functions</strong>를 사용할 생각입니다. 무료 제공 임계치를 넘으면 비용이 발생하기 때문에, 무료 서비스를 골고루 사용할 생각입니다.</p>
<br>
<br>
<h2 id="서버에서-firease-admin-sdk-사용하기"><a class="markdownIt-Anchor" href="#서버에서-firease-admin-sdk-사용하기"></a> 서버에서 Firease Admin SDK 사용하기</h2>
<p>서버에서 Firebase 인증(Auth)과 Firestore를 사용하기 위해서 다음 절차를 진행합니다. <strong>Firebase Console</strong> 설정 페이지에서 <code>[새 비공개 키 생성]</code>을 눌러 키를 생성합니다. 그럼 <strong>json</strong> 파일이 다운로드 됩니다. <strong>json</strong> 파일은 한 번만 다운로드 가능하기 때문에 분실하면 다시 생성하여 다운로드해야 합니다. 그리고 해당 <strong>json</strong> 파일은 반드시 서버에서만 사용해야합니다.</p>
<p><img alt data-src="https://files.steempeak.com/file/steempeak/anpigon/45mVqBMg-E18489E185B3E1848FE185B3E18485E185B5E186ABE18489E185A3E186BA202019-08-172018.53.50.png"></p>
<p><br>위에서 다운로드 받은 <strong>json 파일</strong>을 사용하여 <code>firebaseAdmin</code>를 초기화 합니다. 이제 서버에서는 <strong>firebase</strong>의 <strong>auth</strong>와 <strong>firestore</strong>를 사용할 수 있습니다. <em>(<strong>Firebase Admin SDK</strong>에 대한 자세한 설명은 <a target="_blank" rel="noopener" href="https://firebase.google.com/docs/admin/setup?authuser=0">공식 사이트</a>를 참고하세요.)</em></p>
<p><img alt data-src="https://files.steempeak.com/file/steempeak/anpigon/Kyd2OPsa-code.png"></p>
<p><br>백엔드 API 서버는 <strong>Apollo GraphQL</strong>를 사용하여 구현했습니다. <strong>Apollo GraphQL</strong>를 사용하면 백엔드나 클라이언트를 좀 더 빠르고 쉽게 개발할 수 있습니다. 게다가 API Console 페이지까지 자동으로 생성해줍니다. <strong>Apollo GraphQL</strong>를 사용해서 개발하면 시간을 많이 절약할 수 있습니다.</p>
<p><img alt data-src="https://files.steempeak.com/file/steempeak/anpigon/bJOVKhw6-E18489E185B3E1848FE185B3E18485E185B5E186ABE18489E185A3E186BA202019-08-172019.03.39.png"></p>
<p>지금은 API 서버에 **“사용자 등록(registerUser)”**과 <strong>“글 조회(getPosts)”</strong> 기능만 구현되어 있습니다.</p>
<p>(내용이 너무 길어지는 것 같아서 다음 글에서 이어서 작성하겠습니다.)</p>
<br>
<br>
<p><code>댓글</code>, <code>팔로우</code>, <code>좋아요</code> 해 주시는 모든 분께 감사합니다.</p>
<p>항상 행복한 하루 보내시길 바랍니다.</p>
<hr>
<center><img data-src="https://steemitimages.com/400x0/https://cdn.steemitimages.com/DQmQmWhMN6zNrLmKJRKhvSScEgWZmpb8zCeE2Gray1krbv6/BC054B6E-6F73-46D0-88E4-C88EB8167037.jpeg"><h5>vote, reblog, follow <code><a target="_blank" rel="noopener" href="https://steemit.com/@anpigon">@anpigon</a></code></h5></center>


    </div>

    
    
    

      <footer class="post-footer">
          <div class="post-tags">
              <a href="/tags/react-native/" rel="tag"># React Native</a>
              <a href="/tags/%EC%B9%B4%EC%B9%B4%EC%98%A4-%EB%A1%9C%EA%B7%B8%EC%9D%B8/" rel="tag"># 카카오 로그인</a>
          </div>

        
  <div class="post-widgets">
    <div class="wp_rating">
      <div id="wpac-rating"></div>
    </div>
  </div>

          <div class="post-nav">
            <div class="post-nav-next post-nav-item">
                <a href="/zzan/@anpigon/react-native-manage-application-state-with-mobx-state-tree-1" rel="next" title="[React]  Mobx-state-tree 학습하기 #1 : Mobx-state-tree를 사용해서 Reat State 관리하기">
                  <i class="fa fa-chevron-left"></i> [React]  Mobx-state-tree 학습하기 #1 : Mobx-state-tree를 사용해서 Reat State 관리하기
                </a>
            </div>

            <span class="post-nav-divider"></span>

            <div class="post-nav-prev post-nav-item">
                <a href="/zzan/@anpigon/5n7jrw" rel="prev" title="스팀짱 지갑에 업데이트된 기능을 알려드립니다.">
                  스팀짱 지갑에 업데이트된 기능을 알려드립니다. <i class="fa fa-chevron-right"></i>
                </a>
            </div>
          </div>
      </footer>
    
  </article>
  
  
  

  </div>


          </div>
          
    
  <div class="comments" id="comments">
    <div id="disqus_thread">
      <noscript>Please enable JavaScript to view the comments powered by Disqus.</noscript>
    </div>
  </div>
  

        </div>
          
  
  <div class="toggle sidebar-toggle">
    <span class="toggle-line toggle-line-first"></span>
    <span class="toggle-line toggle-line-middle"></span>
    <span class="toggle-line toggle-line-last"></span>
  </div>

  <aside class="sidebar">
    <div class="sidebar-inner">

      <ul class="sidebar-nav motion-element">
        <li class="sidebar-nav-toc">
          목차
        </li>
        <li class="sidebar-nav-overview">
          흝어보기
        </li>
      </ul>

      <!--noindex-->
      <div class="post-toc-wrap sidebar-panel">
          <div class="post-toc motion-element"><ol class="nav"><li class="nav-item nav-level-1"><a class="nav-link" href="#firebase-authentication-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0"><span class="nav-number">1.</span> <span class="nav-text"> Firebase Authentication 사용하기</span></a><ol class="nav-child"><li class="nav-item nav-level-2"><a class="nav-link" href="#%EC%84%9C%EB%B2%84%EC%97%90%EC%84%9C-firease-admin-sdk-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0"><span class="nav-number">1.1.</span> <span class="nav-text"> 서버에서 Firease Admin SDK 사용하기</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link"><span class="nav-number">1.1.0.0.1.</span> <span class="nav-text">vote, reblog, follow @anpigon</span></a></li></ol></li></ol></li></ol></li></ol></li></ol></div>
      </div>
      <!--/noindex-->

      <div class="site-overview-wrap sidebar-panel">
        <div class="site-author motion-element" itemprop="author" itemscope itemtype="http://schema.org/Person">
  <img class="site-author-image" itemprop="image" alt="안피곤"
    src="/images/me.jpg">
  <p class="site-author-name" itemprop="name">안피곤</p>
  <div class="site-description" itemprop="description">시간이 천천히 갔으면 좋겠다.</div>
</div>
<div class="site-state-wrap motion-element">
  <nav class="site-state">
      <div class="site-state-item site-state-posts">
          <a href="/archives/">
        
          <span class="site-state-item-count">325</span>
          <span class="site-state-item-name">포스트</span>
        </a>
      </div>
      <div class="site-state-item site-state-categories">
            <a href="/categories/">
          
        <span class="site-state-item-count">25</span>
        <span class="site-state-item-name">카테고리</span></a>
      </div>
      <div class="site-state-item site-state-tags">
            <a href="/tags/">
          
        <span class="site-state-item-count">139</span>
        <span class="site-state-item-name">태그</span></a>
      </div>
  </nav>
</div>
  <div class="links-of-author motion-element">
      <span class="links-of-author-item">
        <a href="https://github.com/anpigon" title="GitHub &rarr; https://github.com/anpigon" rel="noopener" target="_blank"><i class="fa fa-fw fa-github"></i>GitHub</a>
      </span>
      <span class="links-of-author-item">
        <a href="mailto:markan82@gmail.com" title="E-Mail &rarr; mailto:markan82@gmail.com" rel="noopener" target="_blank"><i class="fa fa-fw fa-envelope"></i>E-Mail</a>
      </span>
  </div>



      </div>
          <!-- 정사각형 광고 -->
          <div style="margin-top: 15px;">
            <ins class="adsbygoogle"
                style="display:block"
                data-ad-client="ca-pub-2365531018407022"
                data-ad-slot="7521850306"
                data-ad-format="auto"
                data-full-width-responsive="true"></ins>
            <script>
                (adsbygoogle = window.adsbygoogle || []).push({});
            </script>
          </div>
    </div>
  </aside>
  <div id="sidebar-dimmer">3</div>



      </div>
    </main>

    <footer class="footer">
      <div class="footer-inner">
        

<div class="copyright">
  
  &copy; 
  <span itemprop="copyrightYear">2021</span>
  <span class="with-love">
    <i class="fa fa-user"></i>
  </span>
  <span class="author" itemprop="copyrightHolder">안피곤</span>
</div>
  <div class="powered-by">Powered by <a href="https://hexo.io" class="theme-link" rel="noopener" target="_blank">Hexo</a> v5.4.0
  </div>
  <span class="post-meta-divider">|</span>
  <div class="theme-info">Theme – <a href="https://theme-next.org" class="theme-link" rel="noopener" target="_blank">NexT.Gemini</a> v7.4.2
  </div>

        




  <script src="https://www.gstatic.com/firebasejs/6.3.3/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/6.3.3/firebase-firestore.js"></script>
  <script>
    firebase.initializeApp({
      apiKey: 'AIzaSyA4QZWCWb3IuIHjbkAmO0ttIM2b-qtLTP8',
      projectId: 'next-blog-8f9a0'
    });

    function getCount(doc, increaseCount) {
      // IncreaseCount will be false when not in article page

      return doc.get().then(d => {
        var count = 0;
        if (!d.exists) { // Has no data, initialize count
          if (increaseCount) {
            doc.set({
              count: 1
            });
            count = 1;
          }
        } else { // Has data
          count = d.data().count;
          if (increaseCount) {
            // If first view this article
            doc.set({ // Increase count
              count: count + 1
            });
            count++;
          }
        }

        return count;
      });
    }

    function appendCountTo(el) {
      return count => {
        el.innerText = count;
      }
    }
  </script>
  <script pjax>
    (function() {
      var db = firebase.firestore();
      var articles = db.collection('articles');

      if (CONFIG.page.isPost) { // Is article page
        var title = document.querySelector('.post-title').innerText.trim();
        var doc = articles.doc(title);
        var increaseCount = true;
        if (localStorage.getItem(title)) {
          increaseCount = false;
        } else {
          // Mark as visited
          localStorage.setItem(title, true);
        }
        getCount(doc, increaseCount).then(appendCountTo(document.querySelector('.firestore-visitors-count')));
      } else if (CONFIG.page.isHome) { // Is index page
        var promises = [...document.querySelectorAll('.post-title')].map(element => {
          var title = element.innerText.trim();
          var doc = articles.doc(title);
          return getCount(doc);
        });
        Promise.all(promises).then(counts => {
          var metas = document.querySelectorAll('.firestore-visitors-count');
          counts.forEach((val, idx) => {
            appendCountTo(metas[idx])(val);
          });
        });
      }
    })();
  </script>








        
      </div>
    </footer>
  </div>

  
  <script src="/lib/anime.min.js"></script>
  <script src="//cdn.jsdelivr.net/gh/theme-next/theme-next-pjax@0/pjax.min.js"></script>
  <script src="//cdn.jsdelivr.net/npm/jquery@3/dist/jquery.min.js"></script>
  <script src="//cdn.jsdelivr.net/gh/fancyapps/fancybox@3/dist/jquery.fancybox.min.js"></script>
  <script src="//cdn.jsdelivr.net/npm/lozad@1/dist/lozad.min.js"></script>
  <script src="/lib/velocity/velocity.min.js"></script>
  <script src="/lib/velocity/velocity.ui.min.js"></script>

<script src="/js/utils.js"></script>

<script src="/js/motion.js"></script>


<script src="/js/schemes/pisces.js"></script>


<script src="/js/next-boot.js"></script>

  <script>
var pjax = new Pjax({
  selectors: [
    'head title',
    '#page-configurations',
    '.content-wrap',
    '.post-toc-wrap',
    '#pjax'
  ],
  switches: {
    '.post-toc-wrap': Pjax.switches.innerHTML
  },
  analytics: false,
  cacheBust: false,
  scrollTo : !CONFIG.bookmark.enable
});

window.addEventListener('pjax:success', () => {
  document.querySelectorAll('script[pjax], script#page-configurations, #pjax script').forEach(element => {
    var code = element.text || element.textContent || element.innerHTML || '';
    var parent = element.parentNode;
    parent.removeChild(element);
    var script = document.createElement('script');
    if (element.id) {
      script.id = element.id;
    }
    if (element.className) {
      script.className = element.className;
    }
    if (element.type) {
      script.type = element.type;
    }
    if (element.src) {
      script.src = element.src;
      // Force synchronous loading of peripheral JS.
      script.async = false;
    }
    if (element.getAttribute('pjax') !== null) {
      element.setAttribute('pjax', '');
    }
    if (code !== '') {
      script.appendChild(document.createTextNode(code));
    }
    parent.appendChild(script);
  });
  NexT.boot.refresh();
  // Define Motion Sequence & Bootstrap Motion.
  if (CONFIG.motion.enable) {
    NexT.motion.integrator
      .init()
      .add(NexT.motion.middleWares.postList)
      .bootstrap();
  }
  NexT.utils.updateSidebarPosition();
});
</script>




  



  <script pjax>
  if (CONFIG.page.isPost) {
    wpac_init = window.wpac_init || [];
    wpac_init.push({
      widget: 'Rating',
      id: 21712,
      el: 'wpac-rating',
      color: 'fc6423'
    });
    (function() {
      if ('WIDGETPACK_LOADED' in window) return;
      WIDGETPACK_LOADED = true;
      var mc = document.createElement('script');
      mc.type = 'text/javascript';
      mc.async = true;
      mc.src = '//embed.widgetpack.com/widget.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(mc, s.nextSibling);
    })();
  }
  </script>

  
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/instantsearch.js@2.4.1/dist/instantsearch.min.css">
<script src="https://cdn.jsdelivr.net/npm/instantsearch.js@2.4.1/dist/instantsearch.js"></script>
<script src="/js/algolia-search.js"></script>














    <div id="pjax">

  

  

<script>
  function loadCount() {
    var d = document, s = d.createElement('script');
    s.src = 'https://anpigon-github-io.disqus.com/count.js';
    s.id = 'dsq-count-scr';
    (d.head || d.body).appendChild(s);
  }
  // defer loading until the whole page loading is completed
  window.addEventListener('load', loadCount, false);
</script>
<script>
  function loadComments() {
    if (window.DISQUS) {
      DISQUS.reset({
        reload: true,
        config: {page: {
            url: "https://anpigon.github.io/zan/@anpigon/grar9-react-native-2",
            identifier: "/zan/@anpigon/grar9-react-native-2",
            title: "[React Native] 리액트 네이티브에 카카오 로그인 구현하기 #2"
          }
        }
      });
    } else {
      var d = document, s = d.createElement('script');
      s.src = 'https://anpigon-github-io.disqus.com/embed.js';
      s.setAttribute('data-timestamp', '' + +new Date());
      (d.head || d.body).appendChild(s);
    }
  }
    (function() {
      var offsetTop = document.getElementById('comments').offsetTop - window.innerHeight;
      if (offsetTop <= 0) {
        // load directly when there's no a scrollbar
        window.addEventListener('load', loadComments, false);
      } else {
        var disqus_scroll = () => {
          // offsetTop may changes because of manually resizing browser window or lazy loading images.
          var offsetTop = document.getElementById('comments').offsetTop - window.innerHeight;
          var scrollTop = window.scrollY;

          // pre-load comments a bit? (margin or anything else)
          if (offsetTop - scrollTop < 60) {
            window.removeEventListener('scroll', disqus_scroll);
            loadComments();
          }
        };
        window.addEventListener('scroll', disqus_scroll);
      }
    })();
  
</script>

    </div>
</body>
</html>
