<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=2">
<meta name="theme-color" content="#222">
<meta name="generator" content="Hexo 5.4.0">
  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32-next.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/images/favicon-16x16-next.png">
  <link rel="mask-icon" href="/images/logo.svg" color="#222">
  <meta name="google-site-verification" content="yfKOiBPD8WlKH3NPG_CG1zr4MsCgCG1YVdGKhMS2CKc">

<link rel="stylesheet" href="/css/main.css">

<link rel="stylesheet" href="//fonts.googleapis.com/css?family=Lato:300,300italic,400,400italic,700,700italic|Noto Serif KR:300,300italic,400,400italic,700,700italic&display=swap&subset=latin,latin-ext">
<link rel="stylesheet" href="/lib/font-awesome/css/font-awesome.min.css">
  <link rel="stylesheet" href="//cdn.jsdelivr.net/gh/fancyapps/fancybox@3/dist/jquery.fancybox.min.css">


<script id="hexo-configurations">
  var NexT = window.NexT || {};
  var CONFIG = {
    root: '/',
    scheme: 'Gemini',
    version: '7.4.2',
    exturl: false,
    sidebar: {"position":"left","display":"post","offset":12,"onmobile":false},
    copycode: {"enable":false,"show_result":false,"style":null},
    back2top: {"enable":true,"sidebar":false,"scrollpercent":false},
    bookmark: {"enable":false,"color":"#222","save":"auto"},
    fancybox: true,
    mediumzoom: false,
    lazyload: true,
    pangu: false,
    algolia: {
      appID: 'YY693DUDAI',
      apiKey: 'db449d453b150820f66e7bc3d4523a17',
      indexName: 'my-hexo-blog',
      hits: {"per_page":10},
      labels: {"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}
    },
    localsearch: {"enable":false,"trigger":"auto","top_n_per_article":1,"unescape":false,"preload":false},
    path: '',
    motion: {"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},
    translation: {
      copy_button: '복사',
      copy_success: 'Copied',
      copy_failure: 'Copy failed'
    },
    sidebarPadding: 40
  };
</script>

  <meta name="description" content="안녕하세요. 안피곤입니다.개발자로서 블로그를 운영하며 매일 매일 글쓰기는 정말 어렵습니다. 그래서 개발 관련한 노하우나 기술라도 블로그에 자주 올리도록 노력해야겠습니다.다음은 비트코인 트랜잭션에서 계산된 시그해시를 외부에서 서명하여 트랜잭션에 다시 추가하는 방법입니다. SDK 라이브러리를 사용하면 지갑 생성과 서명을 한번에 다 처리해줍니다. 하지만 서명만">
<meta property="og:type" content="article">
<meta property="og:title" content="[블록체인] 하드웨어 웰렛으로 비트코인 서명 구현하기 #1">
<meta property="og:url" content="https://anpigon.github.io/sct/@anpigon/1">
<meta property="og:site_name" content="안피곤님의 블로그">
<meta property="og:description" content="안녕하세요. 안피곤입니다.개발자로서 블로그를 운영하며 매일 매일 글쓰기는 정말 어렵습니다. 그래서 개발 관련한 노하우나 기술라도 블로그에 자주 올리도록 노력해야겠습니다.다음은 비트코인 트랜잭션에서 계산된 시그해시를 외부에서 서명하여 트랜잭션에 다시 추가하는 방법입니다. SDK 라이브러리를 사용하면 지갑 생성과 서명을 한번에 다 처리해줍니다. 하지만 서명만">
<meta property="og:locale" content="ko_KR">
<meta property="og:image" content="https://steemitimages.com/0x0/https://cdn.steemitimages.com/DQmXtBYt3kXFAhrVjuGUGa5TQrgUZ2nL8npNsg67WYqZQ57/11A557AA-ADD4-484C-AD9E-FCD37D09C38B.jpeg">
<meta property="article:published_time" content="2019-06-12T09:15:51.000Z">
<meta property="article:modified_time" content="2021-04-21T11:50:30.078Z">
<meta property="article:author" content="안피곤">
<meta property="article:tag" content="블록체인">
<meta property="article:tag" content="비트코인">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="https://steemitimages.com/0x0/https://cdn.steemitimages.com/DQmXtBYt3kXFAhrVjuGUGa5TQrgUZ2nL8npNsg67WYqZQ57/11A557AA-ADD4-484C-AD9E-FCD37D09C38B.jpeg">

<link rel="canonical" href="https://anpigon.github.io/sct/@anpigon/1">


<script id="page-configurations">
  // https://hexo.io/docs/variables.html
  CONFIG.page = {
    sidebar: "",
    isHome: false,
    isPost: true,
    isPage: false,
    isArchive: false
  };
</script>

  <title>[블록체인] 하드웨어 웰렛으로 비트코인 서명 구현하기 #1 | 안피곤님의 블로그</title>
  
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-20589042-10"></script>
    <script pjax>
      var host = window.location.hostname;
      if (host !== "localhost" || !true) {
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', 'UA-20589042-10');
      }
    </script>






  
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({
          google_ad_client: "ca-pub-2365531018407022",
          enable_page_level_ads: false
     });
</script>
  <noscript>
  <style>
  .use-motion .brand,
  .use-motion .menu-item,
  .sidebar-inner,
  .use-motion .post-block,
  .use-motion .pagination,
  .use-motion .comments,
  .use-motion .post-header,
  .use-motion .post-body,
  .use-motion .collection-header { opacity: initial; }

  .use-motion .site-title,
  .use-motion .site-subtitle {
    opacity: initial;
    top: initial;
  }

  .use-motion .logo-line-before i { left: initial; }
  .use-motion .logo-line-after i { right: initial; }
  </style>
</noscript>

<link rel="alternate" href="/atom.xml" title="안피곤님의 블로그" type="application/atom+xml">
</head>

<body itemscope itemtype="http://schema.org/WebPage">
  <div class="container use-motion">
    <div class="headband"></div>

    <header class="header" itemscope itemtype="http://schema.org/WPHeader">
      <div class="header-inner"><div class="site-brand-container">
  <div class="site-meta">

    <div>
      <a href="/" class="brand" rel="start">
        <span class="logo-line-before"><i></i></span>
        <span class="site-title">안피곤님의 블로그</span>
        <span class="logo-line-after"><i></i></span>
      </a>
    </div>
        <h1 class="site-subtitle" itemprop="description">코딩, 독서, 여행, 영화, 맛집</h1>
      
  </div>

  <div class="site-nav-toggle">
    <div class="toggle" aria-label="Toggle navigation bar">
      <span class="toggle-line toggle-line-first"></span>
      <span class="toggle-line toggle-line-middle"></span>
      <span class="toggle-line toggle-line-last"></span>
    </div>
  </div>
</div>


<nav class="site-nav">
  
  <ul id="menu" class="menu">
        <li class="menu-item menu-item-home">

    <a href="/" rel="section"><i class="fa fa-fw fa-home"></i>홈</a>

  </li>
        <li class="menu-item menu-item-about">

    <a href="/about/" rel="section"><i class="fa fa-fw fa-user"></i>About</a>

  </li>
        <li class="menu-item menu-item-tags">

    <a href="/tags/" rel="section"><i class="fa fa-fw fa-tags"></i>태그<span class="badge">139</span></a>

  </li>
        <li class="menu-item menu-item-categories">

    <a href="/categories/" rel="section"><i class="fa fa-fw fa-th"></i>카테고리<span class="badge">25</span></a>

  </li>
        <li class="menu-item menu-item-archives">

    <a href="/archives/" rel="section"><i class="fa fa-fw fa-archive"></i>아카이브<span class="badge">325</span></a>

  </li>
      <li class="menu-item menu-item-search">
        <a role="button" class="popup-trigger"><i class="fa fa-search fa-fw"></i>검색
        </a>
      </li>
  </ul>

</nav>
  <div class="site-search">
    <div class="popup search-popup">
    <div class="search-header">
  <span class="search-icon">
    <i class="fa fa-search"></i>
  </span>
  <div class="search-input" id="search-input"></div>
  <span class="popup-btn-close">
    <i class="fa fa-times-circle"></i>
  </span>
</div>
<div class="algolia-results">
  <div id="algolia-stats"></div>
  <div id="algolia-hits"></div>
  <div id="algolia-pagination" class="algolia-pagination"></div>
</div>

  
</div>
<div class="search-pop-overlay"></div>

  </div>
</div>
    </header>

    
  <div class="back-to-top">
    <i class="fa fa-arrow-up"></i>
    <span>0%</span>
  </div>
  <div class="reading-progress-bar"></div>


    <main class="main">
      <div class="main-inner">
        <div class="content-wrap">
          

          <div class="content">
            

  <div class="posts-expand">
      
  
  
  <article itemscope itemtype="http://schema.org/Article" class="post-block " lang="ko">
    <link itemprop="mainEntityOfPage" href="https://anpigon.github.io/sct/@anpigon/1">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="image" content="/images/me.jpg">
      <meta itemprop="name" content="안피곤">
      <meta itemprop="description" content="시간이 천천히 갔으면 좋겠다.">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="안피곤님의 블로그">
    </span>
      <header class="post-header">
        <h2 class="post-title" itemprop="name headline">
          [블록체인] 하드웨어 웰렛으로 비트코인 서명 구현하기 #1
        </h2>

        <div class="post-meta">
            <span class="post-meta-item">
              <span class="post-meta-item-icon">
                <i class="fa fa-calendar-o"></i>
              </span>
              <span class="post-meta-item-text">작성일</span>

              <time title="Post created: 2019-06-12 18:15:51" itemprop="dateCreated datePublished" datetime="2019-06-12T18:15:51+09:00">2019-06-12</time>
            </span>
              <span class="post-meta-item">
                <span class="post-meta-item-icon">
                  <i class="fa fa-calendar-check-o"></i>
                </span>
                <span class="post-meta-item-text">Edited on</span>
                <time title="Updated at: 2021-04-21 20:50:30" itemprop="dateModified" datetime="2021-04-21T20:50:30+09:00">2021-04-21</time>
              </span>
            <span class="post-meta-item">
              <span class="post-meta-item-icon">
                <i class="fa fa-folder-o"></i>
              </span>
              <span class="post-meta-item-text">In</span>
                <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
                  <a href="/categories/%EA%B0%9C%EB%B0%9C-%EC%9D%B4%EC%95%BC%EA%B8%B0/" itemprop="url" rel="index">
                    <span itemprop="name">개발 이야기</span>
                  </a>
                </span>
                  , 
                <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
                  <a href="/categories/%EA%B0%9C%EB%B0%9C-%EC%9D%B4%EC%95%BC%EA%B8%B0/%EB%B8%94%EB%A1%9D%EC%B2%B4%EC%9D%B8/" itemprop="url" rel="index">
                    <span itemprop="name">블록체인</span>
                  </a>
                </span>
            </span>

          
            <span class="post-meta-item" title="Views">
              <span class="post-meta-item-icon">
                <i class="fa fa-users"></i>
              </span>
              <span class="post-meta-item-text">Views: </span>
              <span class="firestore-visitors-count"></span>
            </span>
  
  <span class="post-meta-item">
    
      <span class="post-meta-item-icon">
        <i class="fa fa-comment-o"></i>
      </span>
      <span class="post-meta-item-text">Disqus: </span>
    
    <a title="disqus" href="/sct/@anpigon/1#comments" itemprop="discussionUrl">
      <span class="post-comments-count disqus-comment-count" data-disqus-identifier="/sct/@anpigon/1" itemprop="commentCount"></span>
    </a>
  </span>
  
  

        </div>
      </header>

    
    
    
    <div class="post-body" itemprop="articleBody">

      
            <div style="margin-bottom:35px;margin-top:-20px;">
              <!-- 블로그 본문 상단 광고 -->
              <ins class="adsbygoogle"
                  style="display:block"
                  data-ad-client="ca-pub-2365531018407022"
                  data-ad-slot="3390644000"
                  data-ad-format="auto"
                  data-full-width-responsive="true"></ins>
              <script>
                  (adsbygoogle = window.adsbygoogle || []).push({});
              </script>
            </div>

        <p><img alt data-src="https://steemitimages.com/0x0/https://cdn.steemitimages.com/DQmXtBYt3kXFAhrVjuGUGa5TQrgUZ2nL8npNsg67WYqZQ57/11A557AA-ADD4-484C-AD9E-FCD37D09C38B.jpeg"></p><hr><p>안녕하세요. 안피곤입니다.</p><p>개발자로서 블로그를 운영하며 매일 매일 글쓰기는 정말 어렵습니다. 그래서 개발 관련한 노하우나 기술라도 블로그에 자주 올리도록 노력해야겠습니다.</p><p>다음은 비트코인 트랜잭션에서 계산된 시그해시를 외부에서 서명하여 트랜잭션에 다시 추가하는 방법입니다. SDK 라이브러리를 사용하면 지갑 생성과 서명을 한번에 다 처리해줍니다. 하지만 서명만 처리하는 서버가 별도로 있거나 지갑키(서명키)가 하드웨어 월렛 또는 모바일 디바이스에 있는 경우는 대부분의 SDK에서 지원하지 않는 것 같습니다. 이번에 하드웨어 웰렛을 개발하면서 삽질한(?) 노하우를 공유합니다.</p><a id="more"></a>




<br>
<h2 id="utxo-조회하기"><a class="markdownIt-Anchor" href="#utxo-조회하기"></a> UTXO 조회하기</h2>
<p>서명에 필요한 utxo를 테스트넷에서 가져옵니다.  가져온 utxo에서 전송에 필요한 금액 만큼만 사용하면 됩니다.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Client = axios.create(｛</span><br><span class="line">  baseURL: <span class="string">&#x27;https://test-insight.bitpay.com/api&#x27;</span>,</span><br><span class="line">  headers: ｛ <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span> ｝,</span><br><span class="line">  timeout: <span class="number">10000</span></span><br><span class="line">｝);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fromAddress = <span class="string">&quot;1J5RoyfyjLBcdGc2PCnN8wkfEUJms13vv8&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> utxos = <span class="keyword">await</span> Client.post(<span class="string">`/addrs/utxo`</span>, ｛ addrs: fromAddress ｝).then(<span class="function"><span class="params">r</span> =&gt;</span> r.data);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>실제 비트코인 주소입니다. 메인넷에서 테스트로 송금하셔도 됩니다.</p>
</blockquote>
<br>
<h2 id="트랜잭션-생성하기"><a class="markdownIt-Anchor" href="#트랜잭션-생성하기"></a> 트랜잭션 생성하기</h2>
<p>트랜잭션 생성에는 비트코인(<a target="_blank" rel="noopener" href="https://github.com/bitpay/bitcore-lib">bitcore-lib</a>) 라이브러리를 사용하였습니다. 그리고 일단은 P2PKH 주소 서명만 예제 코드로 사용하였습니다. 주소의 prefix로 스크립트 유형을 알아낼 수 있습니다. 비트코인 주소 유형은 <a target="_blank" rel="noopener" href="https://en.bitcoin.it/wiki/List_of_address_prefixes"><strong>이곳 위키</strong></a> 를 참고하세요.</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> bitcore = <span class="keyword">require</span>(<span class="string">&#x27;bitcore-lib&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> tx = <span class="keyword">new</span> bitcore.Transaction();</span><br><span class="line"><span class="keyword">if</span> ( [<span class="string">&quot;1&quot;</span>, <span class="string">&quot;m&quot;</span>, <span class="string">&quot;n&quot;</span>].includes(fromAddress.slice(<span class="number">0</span>, <span class="number">1</span>)) ) ｛ <span class="comment">// P2PKH</span></span><br><span class="line">  tx.<span class="keyword">from</span>(utxos); </span><br><span class="line">｝ <span class="keyword">else</span> ｛</span><br><span class="line">  <span class="comment">// P2PK, P2SH, P2WPKH, Etc ...</span></span><br><span class="line">｝</span><br><span class="line"></span><br><span class="line">tx.to(to, amount.toNumber());</span><br><span class="line">tx.feePerKb(<span class="number">20000</span>); <span class="comment">// TX KB별 필요한 수수료 입력</span></span><br><span class="line">tx.change(fromAddress); <span class="comment">// 잔금 받을 주소 입력(HD지갑이라면 change 주소 사용)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> transaction = tx.uncheckedSerialize();</span><br></pre></td></tr></table></figure>
<blockquote>
<p>주소 prefix가 1이면(테스트넷은 m or n) P2PKH 입니다.</p>
</blockquote>
<br>
<h2 id="서명할-시그해시-계산하기"><a class="markdownIt-Anchor" href="#서명할-시그해시-계산하기"></a> 서명할 시그해시 계산하기</h2>
<figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">const hash = tx.inputs.map((input, index) =&gt; ｛</span><br><span class="line">  <span class="keyword">let</span> sighash = bitcore.<span class="module-access"><span class="module"><span class="identifier">Transaction</span>.</span><span class="module"><span class="identifier">Sighash</span>.</span></span>sighash(tx, <span class="number">0x01</span>, index, input.output.script);</span><br><span class="line">  sighash = bitcore.encoding.<span class="constructor">BufferReader(<span class="params">sighash</span>)</span>.read<span class="constructor">Reverse()</span>;</span><br><span class="line">  return sighash.<span class="keyword">to</span><span class="constructor">String(<span class="string">&quot;hex&quot;</span>)</span>;</span><br><span class="line">｝);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>bitcore 라이브러리는 서명에 little-endian을 사용하고 있습니다. 그래서 계산된 hash를 다시 reverse 합니다.</p>
</blockquote>
<br>
<h2 id="트랜잭션에-서명값-추가하기"><a class="markdownIt-Anchor" href="#트랜잭션에-서명값-추가하기"></a> 트랜잭션에 서명값 추가하기</h2>
<p>외부 서버나 디바이스에서 받아온 서명을 다시 트랜잭션에 추가합니다.</p>
<figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// sign 서버에 서명 요청하기</span></span><br><span class="line"><span class="keyword">const</span> signatures = await SignService<span class="variable">.requestSignature</span>(hash); </span><br><span class="line"></span><br><span class="line">signatures<span class="variable">.forEach</span>((signature, index) =&gt; ｛</span><br><span class="line">  <span class="comment">// signature 객체 생성</span></span><br><span class="line">  <span class="keyword">let</span> sig = bitcore<span class="variable">.crypto</span><span class="variable">.Signature</span><span class="variable">.fromCompact</span>(</span><br><span class="line">    buffer<span class="variable">.Buffer</span>(signature, <span class="string">&quot;hex&quot;</span>)</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 시그해시 계산</span></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">input</span> = tx<span class="variable">.inputs</span>[index];</span><br><span class="line">  <span class="keyword">let</span> hashbuf = bitcore<span class="variable">.Transaction</span><span class="variable">.Sighash</span><span class="variable">.sighash</span>(tx, <span class="number">0</span>x01, index, <span class="keyword">input</span><span class="variable">.output</span><span class="variable">.script</span>);</span><br><span class="line">  hashbuf = bitcore<span class="variable">.encoding</span><span class="variable">.BufferReader</span>(hashbuf)<span class="variable">.readReverse</span>();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 서명 검증</span></span><br><span class="line">  <span class="keyword">const</span> ecdsa = bitcore<span class="variable">.crypto</span><span class="variable">.ECDSA</span>(｛ hashbuf, sig ｝);</span><br><span class="line">  ecdsa<span class="variable">.set</span>(｛ pubkey: ecdsa<span class="variable">.toPublicKey</span>() ｝);</span><br><span class="line">  <span class="keyword">if</span> (!ecdsa<span class="variable">.verify</span>()<span class="variable">.verified</span>) ｛</span><br><span class="line">    <span class="keyword">return</span> Errors<span class="variable">.BAD_SIGNATURES</span>;</span><br><span class="line">  ｝</span><br><span class="line"></span><br><span class="line">  <span class="comment">// tx에 서명 추가</span></span><br><span class="line">  <span class="keyword">const</span> signatureObj = <span class="keyword">new</span> bitcore<span class="variable">.Transaction</span><span class="variable">.Signature</span>(｛</span><br><span class="line">    publicKey: ecdsa<span class="variable">.pubkey</span>, </span><br><span class="line">    prevTxId: <span class="keyword">input</span><span class="variable">.prevTxId</span>,</span><br><span class="line">    outputIndex: <span class="keyword">input</span><span class="variable">.outputIndex</span>,</span><br><span class="line">    inputIndex: index,</span><br><span class="line">    signature: sig,</span><br><span class="line">    sigtype: <span class="number">0</span>x01 <span class="comment">// SIGHASH_ALL.</span></span><br><span class="line">  ｝);</span><br><span class="line"></span><br><span class="line">  tx<span class="variable">.applySignature</span>(signatureObj);</span><br><span class="line">｝);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 서명된 tx를 serialize 하기</span></span><br><span class="line"><span class="keyword">const</span> serializeTx = tx<span class="variable">.serialize</span>();</span><br></pre></td></tr></table></figure>
<p><br>이제 마지막으로 serialized된 tx를 비트코인 노드서버로 send 하면 됩니다.</p>
<p>비트코인이 동작은 단순하지만 구현하는 부분에 있어서는 매우 어렵고 복잡합니다.</p>
<p><br>해피 코딩하세요~!</p>
<hr>
<center>![](https://steemitimages.com/400x0/https://cdn.steemitimages.com/DQmQmWhMN6zNrLmKJRKhvSScEgWZmpb8zCeE2Gray1krbv6/BC054B6E-6F73-46D0-88E4-C88EB8167037.jpeg)</center>


    </div>

    
    
    

      <footer class="post-footer">
          <div class="post-tags">
              <a href="/tags/%EB%B8%94%EB%A1%9D%EC%B2%B4%EC%9D%B8/" rel="tag"># 블록체인</a>
              <a href="/tags/%EB%B9%84%ED%8A%B8%EC%BD%94%EC%9D%B8/" rel="tag"># 비트코인</a>
          </div>

        
  <div class="post-widgets">
    <div class="wp_rating">
      <div id="wpac-rating"></div>
    </div>
  </div>

          <div class="post-nav">
            <div class="post-nav-next post-nav-item">
                <a href="/aaa/@wangpigon/3h4qd8" rel="next" title="⟪그랑블루⟫ - 내 마음속에 깊은 여운을 남긴 영화">
                  <i class="fa fa-chevron-left"></i> ⟪그랑블루⟫ - 내 마음속에 깊은 여운을 남긴 영화
                </a>
            </div>

            <span class="post-nav-divider"></span>

            <div class="post-nav-prev post-nav-item">
                <a href="/aaa/@wangpigon/4rrehn" rel="prev" title="⟪일 포스티노⟫ -  한 폭의 아름다운 시를 읊어 주는 영화">
                  ⟪일 포스티노⟫ -  한 폭의 아름다운 시를 읊어 주는 영화 <i class="fa fa-chevron-right"></i>
                </a>
            </div>
          </div>
      </footer>
    
  </article>
  
  
  

  </div>


          </div>
          
    
  <div class="comments" id="comments">
    <div id="disqus_thread">
      <noscript>Please enable JavaScript to view the comments powered by Disqus.</noscript>
    </div>
  </div>
  

        </div>
          
  
  <div class="toggle sidebar-toggle">
    <span class="toggle-line toggle-line-first"></span>
    <span class="toggle-line toggle-line-middle"></span>
    <span class="toggle-line toggle-line-last"></span>
  </div>

  <aside class="sidebar">
    <div class="sidebar-inner">

      <ul class="sidebar-nav motion-element">
        <li class="sidebar-nav-toc">
          목차
        </li>
        <li class="sidebar-nav-overview">
          흝어보기
        </li>
      </ul>

      <!--noindex-->
      <div class="post-toc-wrap sidebar-panel">
          <div class="post-toc motion-element"><ol class="nav"><li class="nav-item nav-level-2"><a class="nav-link" href="#utxo-%EC%A1%B0%ED%9A%8C%ED%95%98%EA%B8%B0"><span class="nav-number">1.</span> <span class="nav-text"> UTXO 조회하기</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0"><span class="nav-number">2.</span> <span class="nav-text"> 트랜잭션 생성하기</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%EC%84%9C%EB%AA%85%ED%95%A0-%EC%8B%9C%EA%B7%B8%ED%95%B4%EC%8B%9C-%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0"><span class="nav-number">3.</span> <span class="nav-text"> 서명할 시그해시 계산하기</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98%EC%97%90-%EC%84%9C%EB%AA%85%EA%B0%92-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0"><span class="nav-number">4.</span> <span class="nav-text"> 트랜잭션에 서명값 추가하기</span></a></li></ol></div>
      </div>
      <!--/noindex-->

      <div class="site-overview-wrap sidebar-panel">
        <div class="site-author motion-element" itemprop="author" itemscope itemtype="http://schema.org/Person">
  <img class="site-author-image" itemprop="image" alt="안피곤"
    src="/images/me.jpg">
  <p class="site-author-name" itemprop="name">안피곤</p>
  <div class="site-description" itemprop="description">시간이 천천히 갔으면 좋겠다.</div>
</div>
<div class="site-state-wrap motion-element">
  <nav class="site-state">
      <div class="site-state-item site-state-posts">
          <a href="/archives/">
        
          <span class="site-state-item-count">325</span>
          <span class="site-state-item-name">포스트</span>
        </a>
      </div>
      <div class="site-state-item site-state-categories">
            <a href="/categories/">
          
        <span class="site-state-item-count">25</span>
        <span class="site-state-item-name">카테고리</span></a>
      </div>
      <div class="site-state-item site-state-tags">
            <a href="/tags/">
          
        <span class="site-state-item-count">139</span>
        <span class="site-state-item-name">태그</span></a>
      </div>
  </nav>
</div>
  <div class="links-of-author motion-element">
      <span class="links-of-author-item">
        <a href="https://github.com/anpigon" title="GitHub &rarr; https://github.com/anpigon" rel="noopener" target="_blank"><i class="fa fa-fw fa-github"></i>GitHub</a>
      </span>
      <span class="links-of-author-item">
        <a href="mailto:markan82@gmail.com" title="E-Mail &rarr; mailto:markan82@gmail.com" rel="noopener" target="_blank"><i class="fa fa-fw fa-envelope"></i>E-Mail</a>
      </span>
  </div>



      </div>
          <!-- 정사각형 광고 -->
          <div style="margin-top: 15px;">
            <ins class="adsbygoogle"
                style="display:block"
                data-ad-client="ca-pub-2365531018407022"
                data-ad-slot="7521850306"
                data-ad-format="auto"
                data-full-width-responsive="true"></ins>
            <script>
                (adsbygoogle = window.adsbygoogle || []).push({});
            </script>
          </div>
    </div>
  </aside>
  <div id="sidebar-dimmer">3</div>



      </div>
    </main>

    <footer class="footer">
      <div class="footer-inner">
        

<div class="copyright">
  
  &copy; 
  <span itemprop="copyrightYear">2021</span>
  <span class="with-love">
    <i class="fa fa-user"></i>
  </span>
  <span class="author" itemprop="copyrightHolder">안피곤</span>
</div>
  <div class="powered-by">Powered by <a href="https://hexo.io" class="theme-link" rel="noopener" target="_blank">Hexo</a> v5.4.0
  </div>
  <span class="post-meta-divider">|</span>
  <div class="theme-info">Theme – <a href="https://theme-next.org" class="theme-link" rel="noopener" target="_blank">NexT.Gemini</a> v7.4.2
  </div>

        




  <script src="https://www.gstatic.com/firebasejs/6.3.3/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/6.3.3/firebase-firestore.js"></script>
  <script>
    firebase.initializeApp({
      apiKey: 'AIzaSyA4QZWCWb3IuIHjbkAmO0ttIM2b-qtLTP8',
      projectId: 'next-blog-8f9a0'
    });

    function getCount(doc, increaseCount) {
      // IncreaseCount will be false when not in article page

      return doc.get().then(d => {
        var count = 0;
        if (!d.exists) { // Has no data, initialize count
          if (increaseCount) {
            doc.set({
              count: 1
            });
            count = 1;
          }
        } else { // Has data
          count = d.data().count;
          if (increaseCount) {
            // If first view this article
            doc.set({ // Increase count
              count: count + 1
            });
            count++;
          }
        }

        return count;
      });
    }

    function appendCountTo(el) {
      return count => {
        el.innerText = count;
      }
    }
  </script>
  <script pjax>
    (function() {
      var db = firebase.firestore();
      var articles = db.collection('articles');

      if (CONFIG.page.isPost) { // Is article page
        var title = document.querySelector('.post-title').innerText.trim();
        var doc = articles.doc(title);
        var increaseCount = true;
        if (localStorage.getItem(title)) {
          increaseCount = false;
        } else {
          // Mark as visited
          localStorage.setItem(title, true);
        }
        getCount(doc, increaseCount).then(appendCountTo(document.querySelector('.firestore-visitors-count')));
      } else if (CONFIG.page.isHome) { // Is index page
        var promises = [...document.querySelectorAll('.post-title')].map(element => {
          var title = element.innerText.trim();
          var doc = articles.doc(title);
          return getCount(doc);
        });
        Promise.all(promises).then(counts => {
          var metas = document.querySelectorAll('.firestore-visitors-count');
          counts.forEach((val, idx) => {
            appendCountTo(metas[idx])(val);
          });
        });
      }
    })();
  </script>








        
      </div>
    </footer>
  </div>

  
  <script src="/lib/anime.min.js"></script>
  <script src="//cdn.jsdelivr.net/gh/theme-next/theme-next-pjax@0/pjax.min.js"></script>
  <script src="//cdn.jsdelivr.net/npm/jquery@3/dist/jquery.min.js"></script>
  <script src="//cdn.jsdelivr.net/gh/fancyapps/fancybox@3/dist/jquery.fancybox.min.js"></script>
  <script src="//cdn.jsdelivr.net/npm/lozad@1/dist/lozad.min.js"></script>
  <script src="/lib/velocity/velocity.min.js"></script>
  <script src="/lib/velocity/velocity.ui.min.js"></script>

<script src="/js/utils.js"></script>

<script src="/js/motion.js"></script>


<script src="/js/schemes/pisces.js"></script>


<script src="/js/next-boot.js"></script>

  <script>
var pjax = new Pjax({
  selectors: [
    'head title',
    '#page-configurations',
    '.content-wrap',
    '.post-toc-wrap',
    '#pjax'
  ],
  switches: {
    '.post-toc-wrap': Pjax.switches.innerHTML
  },
  analytics: false,
  cacheBust: false,
  scrollTo : !CONFIG.bookmark.enable
});

window.addEventListener('pjax:success', () => {
  document.querySelectorAll('script[pjax], script#page-configurations, #pjax script').forEach(element => {
    var code = element.text || element.textContent || element.innerHTML || '';
    var parent = element.parentNode;
    parent.removeChild(element);
    var script = document.createElement('script');
    if (element.id) {
      script.id = element.id;
    }
    if (element.className) {
      script.className = element.className;
    }
    if (element.type) {
      script.type = element.type;
    }
    if (element.src) {
      script.src = element.src;
      // Force synchronous loading of peripheral JS.
      script.async = false;
    }
    if (element.getAttribute('pjax') !== null) {
      element.setAttribute('pjax', '');
    }
    if (code !== '') {
      script.appendChild(document.createTextNode(code));
    }
    parent.appendChild(script);
  });
  NexT.boot.refresh();
  // Define Motion Sequence & Bootstrap Motion.
  if (CONFIG.motion.enable) {
    NexT.motion.integrator
      .init()
      .add(NexT.motion.middleWares.postList)
      .bootstrap();
  }
  NexT.utils.updateSidebarPosition();
});
</script>




  



  <script pjax>
  if (CONFIG.page.isPost) {
    wpac_init = window.wpac_init || [];
    wpac_init.push({
      widget: 'Rating',
      id: 21712,
      el: 'wpac-rating',
      color: 'fc6423'
    });
    (function() {
      if ('WIDGETPACK_LOADED' in window) return;
      WIDGETPACK_LOADED = true;
      var mc = document.createElement('script');
      mc.type = 'text/javascript';
      mc.async = true;
      mc.src = '//embed.widgetpack.com/widget.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(mc, s.nextSibling);
    })();
  }
  </script>

  
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/instantsearch.js@2.4.1/dist/instantsearch.min.css">
<script src="https://cdn.jsdelivr.net/npm/instantsearch.js@2.4.1/dist/instantsearch.js"></script>
<script src="/js/algolia-search.js"></script>














    <div id="pjax">

  

  

<script>
  function loadCount() {
    var d = document, s = d.createElement('script');
    s.src = 'https://anpigon-github-io.disqus.com/count.js';
    s.id = 'dsq-count-scr';
    (d.head || d.body).appendChild(s);
  }
  // defer loading until the whole page loading is completed
  window.addEventListener('load', loadCount, false);
</script>
<script>
  function loadComments() {
    if (window.DISQUS) {
      DISQUS.reset({
        reload: true,
        config: {page: {
            url: "https://anpigon.github.io/sct/@anpigon/1",
            identifier: "/sct/@anpigon/1",
            title: "[블록체인] 하드웨어 웰렛으로 비트코인 서명 구현하기 #1"
          }
        }
      });
    } else {
      var d = document, s = d.createElement('script');
      s.src = 'https://anpigon-github-io.disqus.com/embed.js';
      s.setAttribute('data-timestamp', '' + +new Date());
      (d.head || d.body).appendChild(s);
    }
  }
    (function() {
      var offsetTop = document.getElementById('comments').offsetTop - window.innerHeight;
      if (offsetTop <= 0) {
        // load directly when there's no a scrollbar
        window.addEventListener('load', loadComments, false);
      } else {
        var disqus_scroll = () => {
          // offsetTop may changes because of manually resizing browser window or lazy loading images.
          var offsetTop = document.getElementById('comments').offsetTop - window.innerHeight;
          var scrollTop = window.scrollY;

          // pre-load comments a bit? (margin or anything else)
          if (offsetTop - scrollTop < 60) {
            window.removeEventListener('scroll', disqus_scroll);
            loadComments();
          }
        };
        window.addEventListener('scroll', disqus_scroll);
      }
    })();
  
</script>

    </div>
</body>
</html>
